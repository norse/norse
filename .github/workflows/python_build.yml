name: Build Python

on:
  pull_request:

jobs:

  build-python-ubuntu:
    name: "Build and analyze for ubuntu-latest: Python"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@master
      - name: Cache
        if: ${{ !env.ACT }} # Cache not working due to https://github.com/nektos/act/issues/329
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if environment.yaml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/cpp_pkgs_dir
          key: ubuntu-python-latest-${{ env.CACHE_NUMBER }}

      # Setup dependencies
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install GCC
        run: |
          sudo apt update
          sudo apt install g++ -y
      - name: Install test dependencies
        run: pip install pytest-cov pytest-xdist mypy black onnx
      - name: Install optional libraries
        run: pip install matplotlib tensorboard pytorch-lightning spack
      - name: Install package
        run: pip install -e .

      # Test, type check, and lint
      - name: Run unit tests
        run: pytest norse -n auto --cov=./ --cov-report=xml
      # - name: Type check # TODO: Revive type checking
        # run: mypy norse
      - name: Lint
        run: black --check norse

      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true

  build-python-ubuntu-mac-windows:
    name: "Build and test for ${{ matrix.os }}: Python v${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install build dependencies
        run: |
          pip install pytest-xdist tensorboard onnx build
          pip install -e .
      - name: Run unit tests
        run: pytest -n auto norse
      - name: Test dist build
        run: python -m build --sdist .
