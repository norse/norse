name: Python package

on: [push, pull_request]

jobs:
  # build-python:
  #   runs-on: ${{ matrix.config.os }}
  #   strategy:
  #     max-parallel: 4
  #     matrix:
  #       config:
  #         - { name: "Windows MSVC", os: windows-latest }
  #         - { name: "Ubuntu gcc", os: ubuntu-latest }
  #         - { name: "MacOS clang", os: macos-latest }
  #       python-version: [3.7, 3.8, 3.9]

  #   name: "Build Python: ${{ matrix.config.os}} Python v${{ matrix.python-version }}"
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Cache
  #       if: ${{ !env.ACT }} # Cache not working due to https://github.com/nektos/act/issues/329
  #       uses: actions/cache@v2
  #       env:
  #         # Increase this value to reset cache if environment.yaml has not changed
  #         CACHE_NUMBER: 0
  #       with:
  #         path: ~/python_pkgs_dir
  #         key: ${{ runner.os }}-python${{ matrix.python-version }}-${{ env.CACHE_NUMBER }}
  #     - name: Install Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: (Ubuntu) Install GCC
  #       if: ${{ matrix.config.os == 'ubuntu-latest' }}
  #       run: |
  #         sudo apt update
  #         sudo apt install g++ -y
  #     - name: (Windows) Set build environment
  #       if: ${{ matrix.config.os == 'windows-latest' }}
  #       run: |
  #         publish/set_win_env.bat
  #     - name: Install dependencies
  #       run: |
  #         pip install --upgrade pip
  #         pip install -e .
  #         pip install pytest-xdist tensorboard
  #     - name: Run unit tests
  #       run: pytest -n auto norse

  build-python-ubuntu:
    name: "Ubuntu: Build, lint, and run type and coverage tests"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@master
      - name: Cache
        if: ${{ !env.ACT }} # Cache not working due to https://github.com/nektos/act/issues/329
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if environment.yaml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/cpp_pkgs_dir
          key: ubuntu-python-latest-${{ env.CACHE_NUMBER }}
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install GCC
        run: |
          sudo apt update
          sudo apt install g++ -y
      - name: Install dependencies
        run: |
          pip install -e .
          pip install -r requirements.txt
          pip install pytest-cov pytest-xdist pytype black
      - name: Run unit tests
        run: pytest norse -n auto --cov=./ --cov-report=xml
      - name: Type check
        run: pytype norse -j 4
      - name: Lint
        run: black --check norse
      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true

  
  build-python-mac:
    name: "Mac: Build and test"
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install build dependencies
        run: |
          python3 -m pip install build pytest-xdist
      - name: Build distribution
        run: |
          python3 -m build -o dist .
      - name: Run unit tests
        run: pytest -n auto norse

  build-python-windows:
    name: "Windows: Build and test"
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # Setup VC PKG
      - name: Restore from cache and install vcpkg
        uses: lukka/run-vcpkg@v7
        with:
          setupOnly: true
          # Location of the vcpkg submodule in the Git repository.
          vcpkgDirectory: '${{ github.workspace }}/norse/csrc'
      - name: Install CMAKE
        run: |
          $VCPKG_ROOT/vcpkg install vcpkg-cmake
        shell: bash
      - name: Install build dependencies
        run: |
          python3 -m pip install build
      - name: Build dist
        run: |
          python3 -m build -o dist .
      - name: Run unit tests
        run: pytest -n auto norse
  