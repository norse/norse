Search.setIndex({"docnames": ["_autosummary/norse", "_autosummary/norse.benchmark", "_autosummary/norse.benchmark.benchmark", "_autosummary/norse.benchmark.main", "_autosummary/norse.benchmark.norse_lif", "_autosummary/norse.benchmark.plot", "_autosummary/norse.dataset", "_autosummary/norse.dataset.memory", "_autosummary/norse.dataset.spiking_heidelberg", "_autosummary/norse.task", "_autosummary/norse.task.correlation_experiment", "_autosummary/norse.task.mnist", "_autosummary/norse.task.mnist_pl", "_autosummary/norse.torch", "_autosummary/norse.torch.functional", "_autosummary/norse.torch.functional.adjoint", "_autosummary/norse.torch.functional.adjoint.lif_adjoint", "_autosummary/norse.torch.functional.adjoint.lif_mc_adjoint", "_autosummary/norse.torch.functional.adjoint.lif_mc_refrac_adjoint", "_autosummary/norse.torch.functional.adjoint.lif_refrac_adjoint", "_autosummary/norse.torch.functional.adjoint.lsnn_adjoint", "_autosummary/norse.torch.functional.adjoint.test", "_autosummary/norse.torch.functional.adjoint.test.test_lif_adjoint", "_autosummary/norse.torch.functional.adjoint.test.test_lif_refrac_adjoint", "_autosummary/norse.torch.functional.adjoint.test.test_lsnn_adjoint", "_autosummary/norse.torch.functional.coba_lif", "_autosummary/norse.torch.functional.correlation_sensor", "_autosummary/norse.torch.functional.decode", "_autosummary/norse.torch.functional.encode", "_autosummary/norse.torch.functional.filter", "_autosummary/norse.torch.functional.heaviside", "_autosummary/norse.torch.functional.iaf", "_autosummary/norse.torch.functional.izhikevich", "_autosummary/norse.torch.functional.leaky_integrator", "_autosummary/norse.torch.functional.leaky_integrator_box", "_autosummary/norse.torch.functional.lif", "_autosummary/norse.torch.functional.lif_adex", "_autosummary/norse.torch.functional.lif_adex_refrac", "_autosummary/norse.torch.functional.lif_box", "_autosummary/norse.torch.functional.lif_correlation", "_autosummary/norse.torch.functional.lif_ex", "_autosummary/norse.torch.functional.lif_mc", "_autosummary/norse.torch.functional.lif_mc_refrac", "_autosummary/norse.torch.functional.lif_refrac", "_autosummary/norse.torch.functional.lift", "_autosummary/norse.torch.functional.logical", "_autosummary/norse.torch.functional.lsnn", "_autosummary/norse.torch.functional.receptive_field", "_autosummary/norse.torch.functional.regularization", "_autosummary/norse.torch.functional.reset", "_autosummary/norse.torch.functional.spikes_to_times_decoder", "_autosummary/norse.torch.functional.stdp", "_autosummary/norse.torch.functional.stdp_sensor", "_autosummary/norse.torch.functional.superspike", "_autosummary/norse.torch.functional.test", "_autosummary/norse.torch.functional.test.test_coba_lif", "_autosummary/norse.torch.functional.test.test_decode", "_autosummary/norse.torch.functional.test.test_encode", "_autosummary/norse.torch.functional.test.test_exp_filter", "_autosummary/norse.torch.functional.test.test_heaviside", "_autosummary/norse.torch.functional.test.test_iaf", "_autosummary/norse.torch.functional.test.test_izhikevich", "_autosummary/norse.torch.functional.test.test_leaky_integrator", "_autosummary/norse.torch.functional.test.test_leaky_integrator_box", "_autosummary/norse.torch.functional.test.test_lif", "_autosummary/norse.torch.functional.test.test_lif_adex", "_autosummary/norse.torch.functional.test.test_lif_adex_refrac", "_autosummary/norse.torch.functional.test.test_lif_box", "_autosummary/norse.torch.functional.test.test_lif_ex", "_autosummary/norse.torch.functional.test.test_lif_mc", "_autosummary/norse.torch.functional.test.test_lif_mc_refrac", "_autosummary/norse.torch.functional.test.test_lif_refrac", "_autosummary/norse.torch.functional.test.test_lift", "_autosummary/norse.torch.functional.test.test_logical", "_autosummary/norse.torch.functional.test.test_lsnn", "_autosummary/norse.torch.functional.test.test_receptive_field", "_autosummary/norse.torch.functional.test.test_regularization", "_autosummary/norse.torch.functional.test.test_spikes_to_times_decoder", "_autosummary/norse.torch.functional.test.test_stdp", "_autosummary/norse.torch.functional.test.test_stdp_sensor", "_autosummary/norse.torch.functional.test.test_superspike", "_autosummary/norse.torch.functional.test.test_threshold", "_autosummary/norse.torch.functional.test.test_tsodyks_makram", "_autosummary/norse.torch.functional.threshold", "_autosummary/norse.torch.functional.tsodyks_makram", "_autosummary/norse.torch.models", "_autosummary/norse.torch.models.conv", "_autosummary/norse.torch.models.mobilenet", "_autosummary/norse.torch.models.test", "_autosummary/norse.torch.models.test.test_conv", "_autosummary/norse.torch.models.test.test_mobilenet", "_autosummary/norse.torch.models.test.test_vgg", "_autosummary/norse.torch.models.vgg", "_autosummary/norse.torch.module", "_autosummary/norse.torch.module.coba_lif", "_autosummary/norse.torch.module.conv", "_autosummary/norse.torch.module.encode", "_autosummary/norse.torch.module.exp_filter", "_autosummary/norse.torch.module.iaf", "_autosummary/norse.torch.module.izhikevich", "_autosummary/norse.torch.module.leaky_integrator", "_autosummary/norse.torch.module.leaky_integrator_box", "_autosummary/norse.torch.module.lif", "_autosummary/norse.torch.module.lif_adex", "_autosummary/norse.torch.module.lif_adex_refrac", "_autosummary/norse.torch.module.lif_box", "_autosummary/norse.torch.module.lif_correlation", "_autosummary/norse.torch.module.lif_ex", "_autosummary/norse.torch.module.lif_mc", "_autosummary/norse.torch.module.lif_mc_refrac", "_autosummary/norse.torch.module.lif_refrac", "_autosummary/norse.torch.module.lift", "_autosummary/norse.torch.module.lsnn", "_autosummary/norse.torch.module.receptive_field", "_autosummary/norse.torch.module.regularization", "_autosummary/norse.torch.module.sequential", "_autosummary/norse.torch.module.snn", "_autosummary/norse.torch.module.spikes_to_times_decoder", "_autosummary/norse.torch.module.test", "_autosummary/norse.torch.module.test.test_coba", "_autosummary/norse.torch.module.test.test_conv", "_autosummary/norse.torch.module.test.test_encode", "_autosummary/norse.torch.module.test.test_exp_filter", "_autosummary/norse.torch.module.test.test_iaf", "_autosummary/norse.torch.module.test.test_izhikevich", "_autosummary/norse.torch.module.test.test_leaky_integrator", "_autosummary/norse.torch.module.test.test_leaky_integrator_box", "_autosummary/norse.torch.module.test.test_lif", "_autosummary/norse.torch.module.test.test_lif_adex", "_autosummary/norse.torch.module.test.test_lif_adex_refrac", "_autosummary/norse.torch.module.test.test_lif_box", "_autosummary/norse.torch.module.test.test_lif_correlation", "_autosummary/norse.torch.module.test.test_lif_ex", "_autosummary/norse.torch.module.test.test_lif_mc", "_autosummary/norse.torch.module.test.test_lif_mc_refrac", "_autosummary/norse.torch.module.test.test_lif_refrac", "_autosummary/norse.torch.module.test.test_lift", "_autosummary/norse.torch.module.test.test_lsnn", "_autosummary/norse.torch.module.test.test_receptive_field", "_autosummary/norse.torch.module.test.test_regularization", "_autosummary/norse.torch.module.test.test_sequential", "_autosummary/norse.torch.module.test.test_snn", "_autosummary/norse.torch.module.test.test_spikes_to_times_decoder", "_autosummary/norse.torch.module.test.test_training", "_autosummary/norse.torch.utils", "_autosummary/norse.torch.utils.clone", "_autosummary/norse.torch.utils.export_nir", "_autosummary/norse.torch.utils.import_nir", "_autosummary/norse.torch.utils.plot", "_autosummary/norse.torch.utils.plot.plot", "_autosummary/norse.torch.utils.pytree", "_autosummary/norse.torch.utils.state", "_autosummary/norse.torch.utils.tensorboard", "_autosummary/norse.torch.utils.tensorboard.tensorboard", "_autosummary/norse.torch.utils.test", "_autosummary/norse.torch.utils.test.test_nir_export", "_autosummary/norse.torch.utils.test.test_nir_import", "_autosummary/norse.torch.utils.test.test_tensorboard", "_autosummary/norse.utils", "api", "generated/norse.torch.functional.coba_lif.CobaLIFFeedForwardState", "generated/norse.torch.functional.coba_lif.CobaLIFParameters", "generated/norse.torch.functional.coba_lif.coba_lif_feed_forward_step", "generated/norse.torch.functional.heaviside", "generated/norse.torch.functional.iaf.IAFFeedForwardState", "generated/norse.torch.functional.iaf.IAFParameters", "generated/norse.torch.functional.iaf.iaf_feed_forward_step", "generated/norse.torch.functional.izhikevich.IzhikevichParameters", "generated/norse.torch.functional.izhikevich.IzhikevichSpikingBehavior", "generated/norse.torch.functional.izhikevich.accomodation", "generated/norse.torch.functional.izhikevich.bistability", "generated/norse.torch.functional.izhikevich.class_1_exc", "generated/norse.torch.functional.izhikevich.class_2_exc", "generated/norse.torch.functional.izhikevich.dap", "generated/norse.torch.functional.izhikevich.inhibition_induced_bursting", "generated/norse.torch.functional.izhikevich.inhibition_induced_spiking", "generated/norse.torch.functional.izhikevich.integrator", "generated/norse.torch.functional.izhikevich.izhikevich_feed_forward_step", "generated/norse.torch.functional.izhikevich.mixed_mode", "generated/norse.torch.functional.izhikevich.phasic_bursting", "generated/norse.torch.functional.izhikevich.phasic_spiking", "generated/norse.torch.functional.izhikevich.rebound_burst", "generated/norse.torch.functional.izhikevich.rebound_spike", "generated/norse.torch.functional.izhikevich.resonator", "generated/norse.torch.functional.izhikevich.spike_frequency_adaptation", "generated/norse.torch.functional.izhikevich.spike_latency", "generated/norse.torch.functional.izhikevich.subthreshold_oscillation", "generated/norse.torch.functional.izhikevich.tonic_bursting", "generated/norse.torch.functional.izhikevich.tonic_spiking", "generated/norse.torch.functional.leaky_integrator.LIParameters", "generated/norse.torch.functional.leaky_integrator.LIState", "generated/norse.torch.functional.leaky_integrator.li_feed_forward_step", "generated/norse.torch.functional.lif_adex.LIFAdExFeedForwardState", "generated/norse.torch.functional.lif_adex.LIFAdExParameters", "generated/norse.torch.functional.lif_adex.lif_adex_current_encoder", "generated/norse.torch.functional.lif_adex.lif_adex_feed_forward_step", "generated/norse.torch.functional.lif_box.LIFBoxFeedForwardState", "generated/norse.torch.functional.lif_box.LIFBoxParameters", "generated/norse.torch.functional.lif_box.lif_box_feed_forward_step", "generated/norse.torch.functional.lif_ex.LIFExFeedForwardState", "generated/norse.torch.functional.lif_ex.LIFExParameters", "generated/norse.torch.functional.lif_ex.lif_ex_current_encoder", "generated/norse.torch.functional.lif_ex.lif_ex_feed_forward_step", "generated/norse.torch.functional.lift", "generated/norse.torch.functional.logical.logical_and", "generated/norse.torch.functional.logical.logical_or", "generated/norse.torch.functional.logical.logical_xor", "generated/norse.torch.functional.logical.muller_c", "generated/norse.torch.functional.logical.posedge_detector", "generated/norse.torch.functional.receptive_field.gaussian_kernel", "generated/norse.torch.functional.receptive_field.spatial_receptive_field", "generated/norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives", "generated/norse.torch.functional.receptive_field.temporal_scale_distribution", "generated/norse.torch.functional.regularization.regularize_step", "generated/norse.torch.functional.regularization.spike_accumulator", "generated/norse.torch.functional.regularization.voltage_accumulator", "generated/norse.torch.module.coba_lif.CobaLIFCell", "generated/norse.torch.module.conv.LConv2d", "generated/norse.torch.module.encode.ConstantCurrentLIFEncoder", "generated/norse.torch.module.encode.PoissonEncoder", "generated/norse.torch.module.encode.PoissonEncoderStep", "generated/norse.torch.module.encode.PopulationEncoder", "generated/norse.torch.module.encode.SignedPoissonEncoder", "generated/norse.torch.module.encode.SpikeLatencyEncoder", "generated/norse.torch.module.encode.SpikeLatencyLIFEncoder", "generated/norse.torch.module.iaf.IAFCell", "generated/norse.torch.module.iaf.IAFFeedForwardState", "generated/norse.torch.module.iaf.IAFParameters", "generated/norse.torch.module.izhikevich.Izhikevich", "generated/norse.torch.module.izhikevich.IzhikevichCell", "generated/norse.torch.module.izhikevich.IzhikevichRecurrent", "generated/norse.torch.module.izhikevich.IzhikevichRecurrentCell", "generated/norse.torch.module.izhikevich.IzhikevichSpikingBehavior", "generated/norse.torch.module.izhikevich.IzhikevichState", "generated/norse.torch.module.leaky_integrator.LI", "generated/norse.torch.module.leaky_integrator.LICell", "generated/norse.torch.module.leaky_integrator.LILinearCell", "generated/norse.torch.module.leaky_integrator.LIParameters", "generated/norse.torch.module.leaky_integrator.LIState", "generated/norse.torch.module.lif.LIF", "generated/norse.torch.module.lif.LIFCell", "generated/norse.torch.module.lif.LIFParameters", "generated/norse.torch.module.lif.LIFRecurrent", "generated/norse.torch.module.lif.LIFRecurrentCell", "generated/norse.torch.module.lif.LIFState", "generated/norse.torch.module.lif_adex.LIFAdEx", "generated/norse.torch.module.lif_adex.LIFAdExCell", "generated/norse.torch.module.lif_adex.LIFAdExRecurrent", "generated/norse.torch.module.lif_adex.LIFAdExRecurrentCell", "generated/norse.torch.module.lif_box.LIFBoxCell", "generated/norse.torch.module.lif_box.LIFBoxFeedForwardState", "generated/norse.torch.module.lif_box.LIFBoxParameters", "generated/norse.torch.module.lif_ex.LIFEx", "generated/norse.torch.module.lif_ex.LIFExCell", "generated/norse.torch.module.lif_ex.LIFExRecurrent", "generated/norse.torch.module.lif_ex.LIFExRecurrentCell", "generated/norse.torch.module.lif_mc.LIFMCRecurrentCell", "generated/norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell", "generated/norse.torch.module.lif_refrac.LIFRefracCell", "generated/norse.torch.module.lif_refrac.LIFRefracRecurrentCell", "generated/norse.torch.module.lsnn.LSNN", "generated/norse.torch.module.lsnn.LSNNCell", "generated/norse.torch.module.lsnn.LSNNRecurrent", "generated/norse.torch.module.lsnn.LSNNRecurrentCell", "generated/norse.torch.module.receptive_field.SpatialReceptiveField2d", "generated/norse.torch.module.receptive_field.TemporalReceptiveField", "index", "norse.torch", "norse.torch.functional", "pages/about", "pages/development", "pages/hardware", "pages/installing", "pages/parameters", "pages/spiking", "pages/started", "pages/tasks", "pages/working"], "filenames": ["_autosummary/norse.rst", "_autosummary/norse.benchmark.rst", "_autosummary/norse.benchmark.benchmark.rst", "_autosummary/norse.benchmark.main.rst", "_autosummary/norse.benchmark.norse_lif.rst", "_autosummary/norse.benchmark.plot.rst", "_autosummary/norse.dataset.rst", "_autosummary/norse.dataset.memory.rst", "_autosummary/norse.dataset.spiking_heidelberg.rst", "_autosummary/norse.task.rst", "_autosummary/norse.task.correlation_experiment.rst", "_autosummary/norse.task.mnist.rst", "_autosummary/norse.task.mnist_pl.rst", "_autosummary/norse.torch.rst", "_autosummary/norse.torch.functional.rst", "_autosummary/norse.torch.functional.adjoint.rst", "_autosummary/norse.torch.functional.adjoint.lif_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.lif_mc_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.lif_mc_refrac_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.lif_refrac_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.lsnn_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.test.rst", "_autosummary/norse.torch.functional.adjoint.test.test_lif_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.test.test_lif_refrac_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.test.test_lsnn_adjoint.rst", "_autosummary/norse.torch.functional.coba_lif.rst", "_autosummary/norse.torch.functional.correlation_sensor.rst", "_autosummary/norse.torch.functional.decode.rst", "_autosummary/norse.torch.functional.encode.rst", "_autosummary/norse.torch.functional.filter.rst", "_autosummary/norse.torch.functional.heaviside.rst", "_autosummary/norse.torch.functional.iaf.rst", "_autosummary/norse.torch.functional.izhikevich.rst", "_autosummary/norse.torch.functional.leaky_integrator.rst", "_autosummary/norse.torch.functional.leaky_integrator_box.rst", "_autosummary/norse.torch.functional.lif.rst", "_autosummary/norse.torch.functional.lif_adex.rst", "_autosummary/norse.torch.functional.lif_adex_refrac.rst", "_autosummary/norse.torch.functional.lif_box.rst", "_autosummary/norse.torch.functional.lif_correlation.rst", "_autosummary/norse.torch.functional.lif_ex.rst", "_autosummary/norse.torch.functional.lif_mc.rst", "_autosummary/norse.torch.functional.lif_mc_refrac.rst", "_autosummary/norse.torch.functional.lif_refrac.rst", "_autosummary/norse.torch.functional.lift.rst", "_autosummary/norse.torch.functional.logical.rst", "_autosummary/norse.torch.functional.lsnn.rst", "_autosummary/norse.torch.functional.receptive_field.rst", "_autosummary/norse.torch.functional.regularization.rst", "_autosummary/norse.torch.functional.reset.rst", "_autosummary/norse.torch.functional.spikes_to_times_decoder.rst", "_autosummary/norse.torch.functional.stdp.rst", "_autosummary/norse.torch.functional.stdp_sensor.rst", "_autosummary/norse.torch.functional.superspike.rst", "_autosummary/norse.torch.functional.test.rst", "_autosummary/norse.torch.functional.test.test_coba_lif.rst", "_autosummary/norse.torch.functional.test.test_decode.rst", "_autosummary/norse.torch.functional.test.test_encode.rst", "_autosummary/norse.torch.functional.test.test_exp_filter.rst", "_autosummary/norse.torch.functional.test.test_heaviside.rst", "_autosummary/norse.torch.functional.test.test_iaf.rst", "_autosummary/norse.torch.functional.test.test_izhikevich.rst", "_autosummary/norse.torch.functional.test.test_leaky_integrator.rst", "_autosummary/norse.torch.functional.test.test_leaky_integrator_box.rst", "_autosummary/norse.torch.functional.test.test_lif.rst", "_autosummary/norse.torch.functional.test.test_lif_adex.rst", "_autosummary/norse.torch.functional.test.test_lif_adex_refrac.rst", "_autosummary/norse.torch.functional.test.test_lif_box.rst", "_autosummary/norse.torch.functional.test.test_lif_ex.rst", "_autosummary/norse.torch.functional.test.test_lif_mc.rst", "_autosummary/norse.torch.functional.test.test_lif_mc_refrac.rst", "_autosummary/norse.torch.functional.test.test_lif_refrac.rst", "_autosummary/norse.torch.functional.test.test_lift.rst", "_autosummary/norse.torch.functional.test.test_logical.rst", "_autosummary/norse.torch.functional.test.test_lsnn.rst", "_autosummary/norse.torch.functional.test.test_receptive_field.rst", "_autosummary/norse.torch.functional.test.test_regularization.rst", "_autosummary/norse.torch.functional.test.test_spikes_to_times_decoder.rst", "_autosummary/norse.torch.functional.test.test_stdp.rst", "_autosummary/norse.torch.functional.test.test_stdp_sensor.rst", "_autosummary/norse.torch.functional.test.test_superspike.rst", "_autosummary/norse.torch.functional.test.test_threshold.rst", "_autosummary/norse.torch.functional.test.test_tsodyks_makram.rst", "_autosummary/norse.torch.functional.threshold.rst", "_autosummary/norse.torch.functional.tsodyks_makram.rst", "_autosummary/norse.torch.models.rst", "_autosummary/norse.torch.models.conv.rst", "_autosummary/norse.torch.models.mobilenet.rst", "_autosummary/norse.torch.models.test.rst", "_autosummary/norse.torch.models.test.test_conv.rst", "_autosummary/norse.torch.models.test.test_mobilenet.rst", "_autosummary/norse.torch.models.test.test_vgg.rst", "_autosummary/norse.torch.models.vgg.rst", "_autosummary/norse.torch.module.rst", "_autosummary/norse.torch.module.coba_lif.rst", "_autosummary/norse.torch.module.conv.rst", "_autosummary/norse.torch.module.encode.rst", "_autosummary/norse.torch.module.exp_filter.rst", "_autosummary/norse.torch.module.iaf.rst", "_autosummary/norse.torch.module.izhikevich.rst", "_autosummary/norse.torch.module.leaky_integrator.rst", "_autosummary/norse.torch.module.leaky_integrator_box.rst", "_autosummary/norse.torch.module.lif.rst", "_autosummary/norse.torch.module.lif_adex.rst", "_autosummary/norse.torch.module.lif_adex_refrac.rst", "_autosummary/norse.torch.module.lif_box.rst", "_autosummary/norse.torch.module.lif_correlation.rst", "_autosummary/norse.torch.module.lif_ex.rst", "_autosummary/norse.torch.module.lif_mc.rst", "_autosummary/norse.torch.module.lif_mc_refrac.rst", "_autosummary/norse.torch.module.lif_refrac.rst", "_autosummary/norse.torch.module.lift.rst", "_autosummary/norse.torch.module.lsnn.rst", "_autosummary/norse.torch.module.receptive_field.rst", "_autosummary/norse.torch.module.regularization.rst", "_autosummary/norse.torch.module.sequential.rst", "_autosummary/norse.torch.module.snn.rst", "_autosummary/norse.torch.module.spikes_to_times_decoder.rst", "_autosummary/norse.torch.module.test.rst", "_autosummary/norse.torch.module.test.test_coba.rst", "_autosummary/norse.torch.module.test.test_conv.rst", "_autosummary/norse.torch.module.test.test_encode.rst", "_autosummary/norse.torch.module.test.test_exp_filter.rst", "_autosummary/norse.torch.module.test.test_iaf.rst", "_autosummary/norse.torch.module.test.test_izhikevich.rst", "_autosummary/norse.torch.module.test.test_leaky_integrator.rst", "_autosummary/norse.torch.module.test.test_leaky_integrator_box.rst", "_autosummary/norse.torch.module.test.test_lif.rst", "_autosummary/norse.torch.module.test.test_lif_adex.rst", "_autosummary/norse.torch.module.test.test_lif_adex_refrac.rst", "_autosummary/norse.torch.module.test.test_lif_box.rst", "_autosummary/norse.torch.module.test.test_lif_correlation.rst", "_autosummary/norse.torch.module.test.test_lif_ex.rst", "_autosummary/norse.torch.module.test.test_lif_mc.rst", "_autosummary/norse.torch.module.test.test_lif_mc_refrac.rst", "_autosummary/norse.torch.module.test.test_lif_refrac.rst", "_autosummary/norse.torch.module.test.test_lift.rst", "_autosummary/norse.torch.module.test.test_lsnn.rst", "_autosummary/norse.torch.module.test.test_receptive_field.rst", "_autosummary/norse.torch.module.test.test_regularization.rst", "_autosummary/norse.torch.module.test.test_sequential.rst", "_autosummary/norse.torch.module.test.test_snn.rst", "_autosummary/norse.torch.module.test.test_spikes_to_times_decoder.rst", "_autosummary/norse.torch.module.test.test_training.rst", "_autosummary/norse.torch.utils.rst", "_autosummary/norse.torch.utils.clone.rst", "_autosummary/norse.torch.utils.export_nir.rst", "_autosummary/norse.torch.utils.import_nir.rst", "_autosummary/norse.torch.utils.plot.rst", "_autosummary/norse.torch.utils.plot.plot.rst", "_autosummary/norse.torch.utils.pytree.rst", "_autosummary/norse.torch.utils.state.rst", "_autosummary/norse.torch.utils.tensorboard.rst", "_autosummary/norse.torch.utils.tensorboard.tensorboard.rst", "_autosummary/norse.torch.utils.test.rst", "_autosummary/norse.torch.utils.test.test_nir_export.rst", "_autosummary/norse.torch.utils.test.test_nir_import.rst", "_autosummary/norse.torch.utils.test.test_tensorboard.rst", "_autosummary/norse.utils.rst", "api.rst", "generated/norse.torch.functional.coba_lif.CobaLIFFeedForwardState.rst", "generated/norse.torch.functional.coba_lif.CobaLIFParameters.rst", "generated/norse.torch.functional.coba_lif.coba_lif_feed_forward_step.rst", "generated/norse.torch.functional.heaviside.rst", "generated/norse.torch.functional.iaf.IAFFeedForwardState.rst", "generated/norse.torch.functional.iaf.IAFParameters.rst", "generated/norse.torch.functional.iaf.iaf_feed_forward_step.rst", "generated/norse.torch.functional.izhikevich.IzhikevichParameters.rst", "generated/norse.torch.functional.izhikevich.IzhikevichSpikingBehavior.rst", "generated/norse.torch.functional.izhikevich.accomodation.rst", "generated/norse.torch.functional.izhikevich.bistability.rst", "generated/norse.torch.functional.izhikevich.class_1_exc.rst", "generated/norse.torch.functional.izhikevich.class_2_exc.rst", "generated/norse.torch.functional.izhikevich.dap.rst", "generated/norse.torch.functional.izhikevich.inhibition_induced_bursting.rst", "generated/norse.torch.functional.izhikevich.inhibition_induced_spiking.rst", "generated/norse.torch.functional.izhikevich.integrator.rst", "generated/norse.torch.functional.izhikevich.izhikevich_feed_forward_step.rst", "generated/norse.torch.functional.izhikevich.mixed_mode.rst", "generated/norse.torch.functional.izhikevich.phasic_bursting.rst", "generated/norse.torch.functional.izhikevich.phasic_spiking.rst", "generated/norse.torch.functional.izhikevich.rebound_burst.rst", "generated/norse.torch.functional.izhikevich.rebound_spike.rst", "generated/norse.torch.functional.izhikevich.resonator.rst", "generated/norse.torch.functional.izhikevich.spike_frequency_adaptation.rst", "generated/norse.torch.functional.izhikevich.spike_latency.rst", "generated/norse.torch.functional.izhikevich.subthreshold_oscillation.rst", "generated/norse.torch.functional.izhikevich.tonic_bursting.rst", "generated/norse.torch.functional.izhikevich.tonic_spiking.rst", "generated/norse.torch.functional.leaky_integrator.LIParameters.rst", "generated/norse.torch.functional.leaky_integrator.LIState.rst", "generated/norse.torch.functional.leaky_integrator.li_feed_forward_step.rst", "generated/norse.torch.functional.lif_adex.LIFAdExFeedForwardState.rst", "generated/norse.torch.functional.lif_adex.LIFAdExParameters.rst", "generated/norse.torch.functional.lif_adex.lif_adex_current_encoder.rst", "generated/norse.torch.functional.lif_adex.lif_adex_feed_forward_step.rst", "generated/norse.torch.functional.lif_box.LIFBoxFeedForwardState.rst", "generated/norse.torch.functional.lif_box.LIFBoxParameters.rst", "generated/norse.torch.functional.lif_box.lif_box_feed_forward_step.rst", "generated/norse.torch.functional.lif_ex.LIFExFeedForwardState.rst", "generated/norse.torch.functional.lif_ex.LIFExParameters.rst", "generated/norse.torch.functional.lif_ex.lif_ex_current_encoder.rst", "generated/norse.torch.functional.lif_ex.lif_ex_feed_forward_step.rst", "generated/norse.torch.functional.lift.rst", "generated/norse.torch.functional.logical.logical_and.rst", "generated/norse.torch.functional.logical.logical_or.rst", "generated/norse.torch.functional.logical.logical_xor.rst", "generated/norse.torch.functional.logical.muller_c.rst", "generated/norse.torch.functional.logical.posedge_detector.rst", "generated/norse.torch.functional.receptive_field.gaussian_kernel.rst", "generated/norse.torch.functional.receptive_field.spatial_receptive_field.rst", "generated/norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives.rst", "generated/norse.torch.functional.receptive_field.temporal_scale_distribution.rst", "generated/norse.torch.functional.regularization.regularize_step.rst", "generated/norse.torch.functional.regularization.spike_accumulator.rst", "generated/norse.torch.functional.regularization.voltage_accumulator.rst", "generated/norse.torch.module.coba_lif.CobaLIFCell.rst", "generated/norse.torch.module.conv.LConv2d.rst", "generated/norse.torch.module.encode.ConstantCurrentLIFEncoder.rst", "generated/norse.torch.module.encode.PoissonEncoder.rst", "generated/norse.torch.module.encode.PoissonEncoderStep.rst", "generated/norse.torch.module.encode.PopulationEncoder.rst", "generated/norse.torch.module.encode.SignedPoissonEncoder.rst", "generated/norse.torch.module.encode.SpikeLatencyEncoder.rst", "generated/norse.torch.module.encode.SpikeLatencyLIFEncoder.rst", "generated/norse.torch.module.iaf.IAFCell.rst", "generated/norse.torch.module.iaf.IAFFeedForwardState.rst", "generated/norse.torch.module.iaf.IAFParameters.rst", "generated/norse.torch.module.izhikevich.Izhikevich.rst", "generated/norse.torch.module.izhikevich.IzhikevichCell.rst", "generated/norse.torch.module.izhikevich.IzhikevichRecurrent.rst", "generated/norse.torch.module.izhikevich.IzhikevichRecurrentCell.rst", "generated/norse.torch.module.izhikevich.IzhikevichSpikingBehavior.rst", "generated/norse.torch.module.izhikevich.IzhikevichState.rst", "generated/norse.torch.module.leaky_integrator.LI.rst", "generated/norse.torch.module.leaky_integrator.LICell.rst", "generated/norse.torch.module.leaky_integrator.LILinearCell.rst", "generated/norse.torch.module.leaky_integrator.LIParameters.rst", "generated/norse.torch.module.leaky_integrator.LIState.rst", "generated/norse.torch.module.lif.LIF.rst", "generated/norse.torch.module.lif.LIFCell.rst", "generated/norse.torch.module.lif.LIFParameters.rst", "generated/norse.torch.module.lif.LIFRecurrent.rst", "generated/norse.torch.module.lif.LIFRecurrentCell.rst", "generated/norse.torch.module.lif.LIFState.rst", "generated/norse.torch.module.lif_adex.LIFAdEx.rst", "generated/norse.torch.module.lif_adex.LIFAdExCell.rst", "generated/norse.torch.module.lif_adex.LIFAdExRecurrent.rst", "generated/norse.torch.module.lif_adex.LIFAdExRecurrentCell.rst", "generated/norse.torch.module.lif_box.LIFBoxCell.rst", "generated/norse.torch.module.lif_box.LIFBoxFeedForwardState.rst", "generated/norse.torch.module.lif_box.LIFBoxParameters.rst", "generated/norse.torch.module.lif_ex.LIFEx.rst", "generated/norse.torch.module.lif_ex.LIFExCell.rst", "generated/norse.torch.module.lif_ex.LIFExRecurrent.rst", "generated/norse.torch.module.lif_ex.LIFExRecurrentCell.rst", "generated/norse.torch.module.lif_mc.LIFMCRecurrentCell.rst", "generated/norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell.rst", "generated/norse.torch.module.lif_refrac.LIFRefracCell.rst", "generated/norse.torch.module.lif_refrac.LIFRefracRecurrentCell.rst", "generated/norse.torch.module.lsnn.LSNN.rst", "generated/norse.torch.module.lsnn.LSNNCell.rst", "generated/norse.torch.module.lsnn.LSNNRecurrent.rst", "generated/norse.torch.module.lsnn.LSNNRecurrentCell.rst", "generated/norse.torch.module.receptive_field.SpatialReceptiveField2d.rst", "generated/norse.torch.module.receptive_field.TemporalReceptiveField.rst", "index.rst", "norse.torch.rst", "norse.torch.functional.rst", "pages/about.rst", "pages/development.md", "pages/hardware.rst", "pages/installing.md", "pages/parameters.ipynb", "pages/spiking.ipynb", "pages/started.ipynb", "pages/tasks.rst", "pages/working.ipynb"], "titles": ["norse", "norse.benchmark", "norse.benchmark.benchmark", "norse.benchmark.main", "norse.benchmark.norse_lif", "norse.benchmark.plot", "norse.dataset", "norse.dataset.memory", "norse.dataset.spiking_heidelberg", "norse.task", "norse.task.correlation_experiment", "norse.task.mnist", "norse.task.mnist_pl", "norse.torch", "norse.torch.functional", "norse.torch.functional.adjoint", "norse.torch.functional.adjoint.lif_adjoint", "norse.torch.functional.adjoint.lif_mc_adjoint", "norse.torch.functional.adjoint.lif_mc_refrac_adjoint", "norse.torch.functional.adjoint.lif_refrac_adjoint", "norse.torch.functional.adjoint.lsnn_adjoint", "norse.torch.functional.adjoint.test", "norse.torch.functional.adjoint.test.test_lif_adjoint", "norse.torch.functional.adjoint.test.test_lif_refrac_adjoint", "norse.torch.functional.adjoint.test.test_lsnn_adjoint", "norse.torch.functional.coba_lif", "norse.torch.functional.correlation_sensor", "norse.torch.functional.decode", "norse.torch.functional.encode", "norse.torch.functional.filter", "norse.torch.functional.heaviside", "norse.torch.functional.iaf", "norse.torch.functional.izhikevich", "norse.torch.functional.leaky_integrator", "norse.torch.functional.leaky_integrator_box", "norse.torch.functional.lif", "norse.torch.functional.lif_adex", "norse.torch.functional.lif_adex_refrac", "norse.torch.functional.lif_box", "norse.torch.functional.lif_correlation", "norse.torch.functional.lif_ex", "norse.torch.functional.lif_mc", "norse.torch.functional.lif_mc_refrac", "norse.torch.functional.lif_refrac", "norse.torch.functional.lift", "norse.torch.functional.logical", "norse.torch.functional.lsnn", "norse.torch.functional.receptive_field", "norse.torch.functional.regularization", "norse.torch.functional.reset", "norse.torch.functional.spikes_to_times_decoder", "norse.torch.functional.stdp", "norse.torch.functional.stdp_sensor", "norse.torch.functional.superspike", "norse.torch.functional.test", "norse.torch.functional.test.test_coba_lif", "norse.torch.functional.test.test_decode", "norse.torch.functional.test.test_encode", "norse.torch.functional.test.test_exp_filter", "norse.torch.functional.test.test_heaviside", "norse.torch.functional.test.test_iaf", "norse.torch.functional.test.test_izhikevich", "norse.torch.functional.test.test_leaky_integrator", "norse.torch.functional.test.test_leaky_integrator_box", "norse.torch.functional.test.test_lif", "norse.torch.functional.test.test_lif_adex", "norse.torch.functional.test.test_lif_adex_refrac", "norse.torch.functional.test.test_lif_box", "norse.torch.functional.test.test_lif_ex", "norse.torch.functional.test.test_lif_mc", "norse.torch.functional.test.test_lif_mc_refrac", "norse.torch.functional.test.test_lif_refrac", "norse.torch.functional.test.test_lift", "norse.torch.functional.test.test_logical", "norse.torch.functional.test.test_lsnn", "norse.torch.functional.test.test_receptive_field", "norse.torch.functional.test.test_regularization", "norse.torch.functional.test.test_spikes_to_times_decoder", "norse.torch.functional.test.test_stdp", "norse.torch.functional.test.test_stdp_sensor", "norse.torch.functional.test.test_superspike", "norse.torch.functional.test.test_threshold", "norse.torch.functional.test.test_tsodyks_makram", "norse.torch.functional.threshold", "norse.torch.functional.tsodyks_makram", "norse.torch.models", "norse.torch.models.conv", "norse.torch.models.mobilenet", "norse.torch.models.test", "norse.torch.models.test.test_conv", "norse.torch.models.test.test_mobilenet", "norse.torch.models.test.test_vgg", "norse.torch.models.vgg", "norse.torch.module", "norse.torch.module.coba_lif", "norse.torch.module.conv", "norse.torch.module.encode", "norse.torch.module.exp_filter", "norse.torch.module.iaf", "norse.torch.module.izhikevich", "norse.torch.module.leaky_integrator", "norse.torch.module.leaky_integrator_box", "norse.torch.module.lif", "norse.torch.module.lif_adex", "norse.torch.module.lif_adex_refrac", "norse.torch.module.lif_box", "norse.torch.module.lif_correlation", "norse.torch.module.lif_ex", "norse.torch.module.lif_mc", "norse.torch.module.lif_mc_refrac", "norse.torch.module.lif_refrac", "norse.torch.module.lift", "norse.torch.module.lsnn", "norse.torch.module.receptive_field", "norse.torch.module.regularization", "norse.torch.module.sequential", "norse.torch.module.snn", "norse.torch.module.spikes_to_times_decoder", "norse.torch.module.test", "norse.torch.module.test.test_coba", "norse.torch.module.test.test_conv", "norse.torch.module.test.test_encode", "norse.torch.module.test.test_exp_filter", "norse.torch.module.test.test_iaf", "norse.torch.module.test.test_izhikevich", "norse.torch.module.test.test_leaky_integrator", "norse.torch.module.test.test_leaky_integrator_box", "norse.torch.module.test.test_lif", "norse.torch.module.test.test_lif_adex", "norse.torch.module.test.test_lif_adex_refrac", "norse.torch.module.test.test_lif_box", "norse.torch.module.test.test_lif_correlation", "norse.torch.module.test.test_lif_ex", "norse.torch.module.test.test_lif_mc", "norse.torch.module.test.test_lif_mc_refrac", "norse.torch.module.test.test_lif_refrac", "norse.torch.module.test.test_lift", "norse.torch.module.test.test_lsnn", "norse.torch.module.test.test_receptive_field", "norse.torch.module.test.test_regularization", "norse.torch.module.test.test_sequential", "norse.torch.module.test.test_snn", "norse.torch.module.test.test_spikes_to_times_decoder", "norse.torch.module.test.test_training", "norse.torch.utils", "norse.torch.utils.clone", "norse.torch.utils.export_nir", "norse.torch.utils.import_nir", "norse.torch.utils.plot", "norse.torch.utils.plot.plot", "norse.torch.utils.pytree", "norse.torch.utils.state", "norse.torch.utils.tensorboard", "norse.torch.utils.tensorboard.tensorboard", "norse.torch.utils.test", "norse.torch.utils.test.test_nir_export", "norse.torch.utils.test.test_nir_import", "norse.torch.utils.test.test_tensorboard", "norse.utils", "Complete API", "norse.torch.functional.coba_lif.CobaLIFFeedForwardState", "norse.torch.functional.coba_lif.CobaLIFParameters", "norse.torch.functional.coba_lif.coba_lif_feed_forward_step", "norse.torch.functional.heaviside", "norse.torch.functional.iaf.IAFFeedForwardState", "norse.torch.functional.iaf.IAFParameters", "norse.torch.functional.iaf.iaf_feed_forward_step", "norse.torch.functional.izhikevich.IzhikevichParameters", "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior", "norse.torch.functional.izhikevich.accomodation", "norse.torch.functional.izhikevich.bistability", "norse.torch.functional.izhikevich.class_1_exc", "norse.torch.functional.izhikevich.class_2_exc", "norse.torch.functional.izhikevich.dap", "norse.torch.functional.izhikevich.inhibition_induced_bursting", "norse.torch.functional.izhikevich.inhibition_induced_spiking", "norse.torch.functional.izhikevich.integrator", "norse.torch.functional.izhikevich.izhikevich_feed_forward_step", "norse.torch.functional.izhikevich.mixed_mode", "norse.torch.functional.izhikevich.phasic_bursting", "norse.torch.functional.izhikevich.phasic_spiking", "norse.torch.functional.izhikevich.rebound_burst", "norse.torch.functional.izhikevich.rebound_spike", "norse.torch.functional.izhikevich.resonator", "norse.torch.functional.izhikevich.spike_frequency_adaptation", "norse.torch.functional.izhikevich.spike_latency", "norse.torch.functional.izhikevich.subthreshold_oscillation", "norse.torch.functional.izhikevich.tonic_bursting", "norse.torch.functional.izhikevich.tonic_spiking", "norse.torch.functional.leaky_integrator.LIParameters", "norse.torch.functional.leaky_integrator.LIState", "norse.torch.functional.leaky_integrator.li_feed_forward_step", "norse.torch.functional.lif_adex.LIFAdExFeedForwardState", "norse.torch.functional.lif_adex.LIFAdExParameters", "norse.torch.functional.lif_adex.lif_adex_current_encoder", "norse.torch.functional.lif_adex.lif_adex_feed_forward_step", "norse.torch.functional.lif_box.LIFBoxFeedForwardState", "norse.torch.functional.lif_box.LIFBoxParameters", "norse.torch.functional.lif_box.lif_box_feed_forward_step", "norse.torch.functional.lif_ex.LIFExFeedForwardState", "norse.torch.functional.lif_ex.LIFExParameters", "norse.torch.functional.lif_ex.lif_ex_current_encoder", "norse.torch.functional.lif_ex.lif_ex_feed_forward_step", "norse.torch.functional.lift", "norse.torch.functional.logical.logical_and", "norse.torch.functional.logical.logical_or", "norse.torch.functional.logical.logical_xor", "norse.torch.functional.logical.muller_c", "norse.torch.functional.logical.posedge_detector", "norse.torch.functional.receptive_field.gaussian_kernel", "norse.torch.functional.receptive_field.spatial_receptive_field", "norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives", "norse.torch.functional.receptive_field.temporal_scale_distribution", "norse.torch.functional.regularization.regularize_step", "norse.torch.functional.regularization.spike_accumulator", "norse.torch.functional.regularization.voltage_accumulator", "norse.torch.module.coba_lif.CobaLIFCell", "norse.torch.module.conv.LConv2d", "norse.torch.module.encode.ConstantCurrentLIFEncoder", "norse.torch.module.encode.PoissonEncoder", "norse.torch.module.encode.PoissonEncoderStep", "norse.torch.module.encode.PopulationEncoder", "norse.torch.module.encode.SignedPoissonEncoder", "norse.torch.module.encode.SpikeLatencyEncoder", "norse.torch.module.encode.SpikeLatencyLIFEncoder", "norse.torch.module.iaf.IAFCell", "norse.torch.module.iaf.IAFFeedForwardState", "norse.torch.module.iaf.IAFParameters", "norse.torch.module.izhikevich.Izhikevich", "norse.torch.module.izhikevich.IzhikevichCell", "norse.torch.module.izhikevich.IzhikevichRecurrent", "norse.torch.module.izhikevich.IzhikevichRecurrentCell", "norse.torch.module.izhikevich.IzhikevichSpikingBehavior", "norse.torch.module.izhikevich.IzhikevichState", "norse.torch.module.leaky_integrator.LI", "norse.torch.module.leaky_integrator.LICell", "norse.torch.module.leaky_integrator.LILinearCell", "norse.torch.module.leaky_integrator.LIParameters", "norse.torch.module.leaky_integrator.LIState", "norse.torch.module.lif.LIF", "norse.torch.module.lif.LIFCell", "norse.torch.module.lif.LIFParameters", "norse.torch.module.lif.LIFRecurrent", "norse.torch.module.lif.LIFRecurrentCell", "norse.torch.module.lif.LIFState", "norse.torch.module.lif_adex.LIFAdEx", "norse.torch.module.lif_adex.LIFAdExCell", "norse.torch.module.lif_adex.LIFAdExRecurrent", "norse.torch.module.lif_adex.LIFAdExRecurrentCell", "norse.torch.module.lif_box.LIFBoxCell", "norse.torch.module.lif_box.LIFBoxFeedForwardState", "norse.torch.module.lif_box.LIFBoxParameters", "norse.torch.module.lif_ex.LIFEx", "norse.torch.module.lif_ex.LIFExCell", "norse.torch.module.lif_ex.LIFExRecurrent", "norse.torch.module.lif_ex.LIFExRecurrentCell", "norse.torch.module.lif_mc.LIFMCRecurrentCell", "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell", "norse.torch.module.lif_refrac.LIFRefracCell", "norse.torch.module.lif_refrac.LIFRefracRecurrentCell", "norse.torch.module.lsnn.LSNN", "norse.torch.module.lsnn.LSNNCell", "norse.torch.module.lsnn.LSNNRecurrent", "norse.torch.module.lsnn.LSNNRecurrentCell", "norse.torch.module.receptive_field.SpatialReceptiveField2d", "norse.torch.module.receptive_field.TemporalReceptiveField", "1. Getting started", "norse.torch", "norse.torch.functional", "<span class=\"section-number\">8. </span>About Norse", "<span class=\"section-number\">9. </span>Development Documentation", "<span class=\"section-number\">7. </span>Hardware acceleration", "<span class=\"section-number\">1. </span>Installing Norse", "<span class=\"section-number\">6. </span>Parameter learning in Spiking Neural Networks", "<span class=\"section-number\">4. </span>Introduction to spiking systems", "<span class=\"section-number\">2. </span>Quickstart", "<span class=\"section-number\">5. </span>Running Tasks", "<span class=\"section-number\">3. </span>Working with Norse"], "terms": {"i": [0, 9, 13, 33, 34, 35, 38, 46, 48, 97, 100, 105, 190, 192, 194, 195, 198, 199, 201, 202, 207, 210, 212, 213, 217, 221, 229, 231, 234, 235, 236, 238, 240, 243, 244, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "librari": [0, 12, 13, 266, 272, 274, 276, 277], "do": [0, 13, 272, 273, 274], "deep": [0, 13, 266, 272, 275], "learn": [0, 11, 12, 13, 266, 272, 274, 275, 276], "spike": [0, 6, 8, 11, 12, 13, 14, 28, 33, 34, 35, 38, 46, 48, 93, 100, 101, 102, 105, 113, 114, 116, 149, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 198, 200, 202, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 227, 228, 229, 230, 231, 232, 239, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 259, 263, 267, 269, 270, 275, 276, 277], "neural": [0, 6, 8, 13, 14, 35, 93, 116, 267, 268, 269, 274, 275, 276, 277], "network": [0, 6, 8, 11, 12, 13, 14, 35, 93, 116, 144, 267, 268, 269, 272, 274, 275, 276, 277], "modul": [0, 1, 6, 9, 13, 14, 15, 21, 27, 34, 35, 38, 44, 46, 47, 48, 54, 57, 58, 85, 88, 144, 148, 152, 154, 158, 195, 198, 202, 203, 266, 267, 268, 270, 271, 273, 274, 275, 277], "tool": [1, 266, 269, 277], "script": 1, "class": [2, 4, 7, 8, 11, 12, 16, 17, 18, 19, 20, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 50, 51, 52, 53, 80, 83, 84, 86, 87, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 124, 127, 143, 147, 150, 157, 160, 161, 164, 165, 167, 168, 189, 190, 192, 193, 196, 197, 199, 200, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 270, 271, 273, 276], "function": [3, 4, 5, 10, 11, 12, 13, 87, 89, 90, 91, 92, 97, 100, 101, 102, 105, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 153, 155, 156, 157, 221, 239, 240, 242, 243, 246, 249, 251, 264, 265, 267, 270, 271, 273, 274, 275, 277], "tempor": [6, 27, 212, 217, 223, 228, 230, 239, 242, 245, 247, 252, 254, 265, 274, 276, 277], "data": [6, 29, 97, 148, 152, 214, 215, 218, 221, 223, 228, 230, 231, 234, 239, 240, 242, 243, 245, 246, 247, 252, 254, 260, 262, 266, 271, 273, 274, 277], "ideal": 6, "analysi": 6, "The": [8, 33, 35, 46, 48, 100, 209, 210, 212, 213, 214, 215, 217, 218, 221, 228, 230, 234, 239, 242, 245, 247, 252, 254, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277], "heidelberg": [8, 266, 269], "digit": [8, 11, 12, 276], "shd": 8, "audio": 8, "http": [8, 194, 195, 201, 202, 212, 217, 246, 248, 253, 255, 260, 262, 266, 271, 272, 273, 275, 277], "compneuro": 8, "net": [8, 276], "post": 8, "2019": 8, "licens": 8, "under": [8, 266, 269], "cc": 8, "A": [8, 30, 33, 35, 38, 44, 46, 47, 100, 102, 105, 112, 148, 152, 163, 203, 209, 213, 214, 215, 221, 228, 230, 234, 239, 242, 245, 247, 252, 254, 260, 262, 265, 266, 267, 268, 270, 272, 273, 275], "4": [8, 169, 171, 176, 178, 182, 193, 194, 195, 218, 231, 240, 242, 243, 245, 246, 247, 248, 254, 265, 273, 274, 275], "0": [8, 30, 35, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 200, 201, 202, 208, 210, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 273, 274, 275, 277], "cramer": 8, "b": [8, 46, 167, 261, 263, 270], "stradmann": 8, "y": [8, 29, 204, 205, 206, 210, 264, 277], "schemmel": 8, "j": [8, 223], "zenk": 8, "f": [8, 35, 273], "systemat": 8, "evalu": 8, "arxiv": [8, 260, 262], "1910": 8, "07407": 8, "c": [8, 167, 207, 209, 212, 229, 231, 265, 266, 272], "q": 8, "bio": [8, 266], "org": [8, 194, 195, 217, 246, 248, 260, 262, 266, 271, 272, 275], "ab": [8, 260, 262], "These": [9, 113, 267, 276], "serv": [9, 266, 273, 276, 277], "1": [9, 30, 33, 34, 35, 46, 100, 163, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 183, 193, 194, 195, 197, 198, 200, 201, 202, 208, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 234, 235, 236, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277], "illustr": [9, 266, 273, 276, 277], "what": [9, 213, 223, 276], "type": [9, 197, 213, 221, 251, 265, 266, 270, 272, 276], "can": [9, 33, 34, 35, 38, 48, 105, 114, 212, 217, 221, 224, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "done": [9, 270, 272, 274, 275, 276, 277], "2": [9, 172, 173, 174, 178, 184, 185, 187, 188, 193, 194, 195, 210, 212, 218, 228, 230, 231, 234, 239, 240, 242, 243, 245, 246, 247, 248, 252, 254, 260, 262, 264, 265, 270, 273, 274, 275, 276, 277], "how": [9, 33, 100, 266, 267, 268, 270, 271, 273, 274, 275, 276, 277], "us": [9, 12, 27, 29, 35, 97, 113, 161, 165, 166, 167, 193, 194, 195, 198, 200, 201, 202, 216, 217, 219, 220, 222, 224, 225, 227, 228, 230, 231, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 267, 270, 271, 272, 273, 274, 275, 276, 277], "specif": [9, 113, 194, 195, 198, 201, 202, 216, 229, 231, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 258, 259, 261, 263, 267, 270, 274, 276, 277], "pleas": [9, 266, 270, 272, 275, 276], "note": [9, 28, 266, 270, 272, 273, 275, 276, 277], "some": [9, 28, 33, 34, 48, 100, 101, 213, 214, 215, 267, 268, 270, 272, 273, 274, 276, 277], "requir": [9, 215, 265, 266, 273, 276, 277], "addit": [9, 217, 236, 264, 272, 273, 276], "depend": [9, 48, 144, 266, 276, 277], "like": [9, 28, 213, 272, 276, 277], "openai": [9, 276], "gym": [9, 276], "cartpol": [9, 266], "which": [9, 48, 210, 212, 213, 217, 219, 220, 221, 222, 228, 230, 239, 242, 245, 247, 252, 254, 260, 261, 262, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277], "includ": [9, 48, 266, 268, 269, 276], "vanilla": [9, 276], "refer": [9, 35, 266, 270, 272, 277], "page": [9, 272, 274, 275, 276, 277], "thorough": 9, "explan": 9, "execut": [9, 274, 275, 277], "run": [9, 273, 277], "experi": [9, 266, 273, 274, 277], "In": [11, 12, 33, 34, 35, 46, 48, 100, 101, 267, 268, 270, 272, 273, 274, 277], "thi": [11, 12, 13, 33, 34, 35, 38, 46, 48, 100, 101, 105, 114, 217, 223, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "we": [11, 12, 33, 100, 217, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "train": [11, 12, 143, 219, 222, 224, 264, 266, 272, 274, 275, 276], "convolut": [11, 12, 195, 202, 217, 246, 264, 274, 277], "recognit": [11, 12], "mnist": [12, 266, 271, 277], "version": [12, 38, 105, 234, 235, 236, 266, 267, 268, 271, 272, 273], "pytorch": [12, 13, 27, 195, 202, 217, 246, 266, 267, 270, 271, 272, 273, 274, 275, 277], "lightn": [12, 266, 272], "reduc": [12, 275], "amount": [12, 33, 100, 267, 268], "boilerpl": [12, 270, 273], "code": [12, 15, 221, 223, 266, 270, 273, 274, 275, 277], "around": [12, 266, 270], "log": [12, 273, 276], "checkpoint": [12, 273, 276], "etc": 12, "packag": [13, 144, 270, 272], "contain": [13, 48, 114, 214, 215, 228, 230, 234, 239, 242, 245, 247, 252, 254, 266, 268, 270, 272, 273, 274, 277], "extend": 13, "stateless": [14, 27, 28, 268], "compon": [14, 48, 266, 268, 270], "base": [15, 113, 116, 148, 160, 161, 162, 211, 212, 213, 216, 265, 266, 269, 272, 277], "neuron": [15, 33, 34, 35, 38, 44, 46, 100, 101, 102, 105, 148, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 213, 216, 218, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 271, 276], "activ": [15, 35, 44, 203, 221, 239, 240, 242, 243, 265, 266, 274, 275, 277], "optim": [15, 264, 270, 273, 277], "where": [27, 29, 48, 114, 195, 202, 216, 243, 246, 248, 253, 255, 256, 259, 263, 264, 265, 266, 268, 270, 271, 274, 276], "event": [27, 35, 38, 102, 105, 113, 148, 266, 267, 268, 269, 274], "time": [27, 29, 33, 34, 44, 46, 48, 97, 100, 101, 114, 149, 161, 162, 166, 167, 189, 193, 194, 195, 198, 200, 201, 202, 203, 212, 215, 216, 217, 218, 219, 220, 222, 223, 224, 228, 229, 230, 231, 234, 237, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 260, 261, 262, 265, 267, 274, 275, 276], "ar": [27, 33, 100, 113, 143, 204, 205, 206, 207, 208, 216, 219, 220, 222, 223, 243, 248, 253, 255, 256, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "convert": [27, 28, 277], "numer": [27, 28, 213, 269], "represent": 27, "mani": [27, 276, 277], "simpli": [27, 48, 268, 271, 275, 277], "mirror": 27, "tensor": [27, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 273, 274, 275, 277], "aggreg": [27, 213, 214, 215, 264], "differ": [27, 28, 33, 34, 100, 221, 266, 267, 268, 274, 275, 277], "thei": [27, 266, 270, 273, 274, 275, 277], "typic": [27, 213, 221, 274, 277], "first": [27, 33, 100, 217, 223, 224, 265, 267, 268, 270, 272, 273, 277], "dimens": [27, 217, 219, 222, 234, 265, 274, 275, 277], "therefor": [27, 269, 270, 273, 275, 277], "inject": [27, 274, 275], "lift": [27, 277], "ed": 27, "situat": [27, 273], "you": [27, 266, 270, 271, 272, 273, 274, 275, 276, 277], "need": [27, 270, 272, 275, 276, 277], "pickl": 27, "offer": [28, 272], "wai": [28, 266, 273, 274], "input": [28, 33, 34, 46, 100, 101, 160, 161, 162, 166, 190, 192, 194, 195, 198, 199, 201, 202, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 229, 231, 234, 236, 238, 242, 243, 244, 246, 247, 248, 249, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 273, 275, 277], "domain": [28, 209, 210, 211, 264, 269, 277], "population_encod": 28, "doe": [28, 273], "return": [28, 213, 214, 215, 221, 228, 230, 231, 234, 239, 240, 242, 243, 245, 247, 252, 254, 270, 271, 273, 274, 275], "rather": [28, 270, 273], "valu": [28, 167, 193, 212, 213, 217, 219, 220, 221, 222, 224, 265, 270, 273, 274, 275, 277], "have": [28, 33, 34, 100, 224, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277], "via": [28, 266, 270, 272, 277], "instanc": [28, 143, 276], "poisson": 28, "an": [29, 46, 48, 165, 166, 193, 194, 195, 198, 200, 202, 213, 214, 217, 224, 225, 227, 231, 236, 246, 249, 265, 266, 268, 270, 272, 273, 274, 276, 277], "exponenti": [29, 97, 193, 194, 195, 200, 202, 246, 248, 253, 255, 265, 274], "smooth": [29, 97], "seri": [29, 97, 277], "window": [29, 97], "": [29, 48, 114, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 213, 214, 215, 223, 232, 266, 268, 269, 270, 273, 274, 275, 277], "t": [29, 217, 273, 274, 277], "x": [29, 204, 205, 206, 210, 271, 273, 277], "alpha": [29, 161, 165, 167, 193, 197, 200, 227, 241, 251, 270, 273, 274], "delta": [29, 218], "factor": [29, 192, 221], "math": 29, "e": [29, 266, 269, 275, 276], "tau_": [29, 33, 34, 35, 46, 100, 193, 194, 195, 198, 200, 201, 202, 216, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 267, 268, 273, 274], "filter_inv": 29, "step": [30, 35, 48, 162, 163, 166, 194, 195, 198, 201, 202, 213, 216, 217, 218, 219, 220, 222, 224, 225, 228, 229, 230, 231, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 268, 270, 272, 273, 274], "truncat": [30, 163], "number": [30, 163, 211, 212, 217, 218, 219, 221, 222, 224, 231, 236, 242, 243, 247, 248, 254, 256, 259, 262, 263, 264, 265, 266, 270, 273, 274, 276], "everyth": [30, 163, 275], "els": [30, 163, 273], "h": [30, 35, 163, 217], "n": [30, 35, 163, 193, 194, 217, 264, 265, 272, 277], "begin": [30, 33, 34, 35, 46, 100, 163, 194, 195, 201, 202, 216, 229, 231, 234, 235, 236, 240, 243, 246, 248, 253, 255, 256, 258, 259, 261, 263, 267, 268], "case": [30, 33, 35, 100, 163, 217, 267, 268, 270, 273], "gt": [30, 35, 163], "end": [30, 33, 34, 35, 46, 100, 163, 194, 195, 201, 202, 216, 229, 231, 234, 235, 236, 240, 243, 246, 248, 253, 255, 256, 258, 259, 261, 263, 267, 268], "leaki": [33, 34, 38, 100, 101, 105, 166, 189, 190, 193, 194, 195, 198, 200, 201, 202, 225, 234, 235, 236, 237, 238, 240, 243, 249, 266, 270, 274, 275, 277], "integr": [33, 34, 38, 100, 101, 105, 162, 164, 165, 166, 189, 190, 193, 194, 195, 198, 200, 201, 202, 216, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 266, 269, 270, 274, 275, 277], "describ": [33, 34, 35, 100, 101, 209, 266, 267, 268, 270, 271, 272, 276, 277], "membran": [33, 34, 35, 48, 100, 101, 114, 160, 161, 164, 167, 189, 190, 192, 193, 194, 196, 199, 200, 215, 218, 226, 233, 237, 238, 244, 250, 267, 268, 274, 277], "incom": [33, 34, 100, 101, 265, 267, 268, 277], "current": [33, 34, 35, 38, 100, 101, 105, 162, 166, 190, 192, 194, 195, 198, 199, 201, 202, 218, 238, 244, 246, 248, 249, 267, 268, 272, 274, 277], "over": [33, 34, 35, 48, 100, 101, 114, 149, 194, 195, 201, 202, 215, 234, 246, 248, 253, 255, 265, 267, 268, 270, 274, 275, 277], "never": [33, 34, 100, 101, 267, 268, 277], "other": [33, 34, 48, 100, 101, 114, 212, 267, 268, 273, 274, 277], "word": [33, 34, 100, 101, 267, 268, 274, 277], "add": [33, 34, 46, 100, 101, 267, 268, 272], "up": [33, 34, 100, 101, 266, 267, 268, 270, 273, 276], "while": [33, 34, 100, 101, 267, 268, 269, 273, 277], "leak": [33, 34, 35, 46, 100, 101, 161, 189, 193, 194, 195, 198, 200, 201, 202, 216, 234, 235, 236, 237, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 267, 268], "out": [33, 34, 38, 100, 101, 105, 217, 262, 267, 268, 272, 273], "everi": [33, 34, 100, 101, 267, 268], "timestep": [33, 34, 100, 101, 166, 194, 195, 198, 201, 202, 218, 225, 228, 230, 234, 235, 236, 239, 242, 245, 247, 249, 252, 254, 256, 258, 259, 263, 265, 266, 267, 268, 274, 275, 277], "align": [33, 34, 35, 46, 100, 194, 195, 201, 202, 216, 229, 231, 234, 235, 236, 240, 243, 246, 248, 253, 255, 256, 258, 259, 261, 263, 267, 268], "dot": [33, 34, 35, 46, 100, 166, 194, 195, 198, 201, 202, 216, 225, 229, 231, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 267, 268, 270], "v": [33, 34, 35, 46, 100, 160, 164, 166, 167, 190, 192, 194, 195, 196, 198, 199, 201, 202, 215, 216, 225, 226, 229, 231, 233, 234, 235, 236, 238, 240, 243, 244, 246, 248, 249, 250, 253, 255, 256, 258, 259, 261, 263, 267, 268, 272, 274, 277], "text": [33, 34, 35, 46, 100, 166, 193, 194, 195, 198, 200, 201, 202, 216, 225, 229, 231, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 267, 268, 273, 274], "mem": [33, 34, 35, 46, 100, 193, 194, 195, 198, 200, 201, 202, 216, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 267, 268, 274], "v_": [33, 34, 35, 46, 100, 166, 194, 195, 198, 201, 202, 216, 225, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 267, 268, 273, 274], "syn": [33, 35, 46, 100, 193, 194, 195, 200, 201, 202, 216, 234, 235, 236, 240, 243, 246, 248, 253, 255, 256, 258, 259, 261, 263, 267, 268, 274], "equat": [33, 46, 100, 166, 194, 195, 198, 202, 216, 225, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 267, 268, 277], "voltag": [33, 34, 35, 100, 101, 190, 194, 201, 215, 218, 234, 238, 267, 268, 271, 273, 277], "across": [33, 100, 264, 267, 268], "chang": [33, 35, 100, 212, 221, 265, 267, 268, 270], "constant": [33, 46, 100, 161, 167, 189, 193, 200, 218, 223, 237, 265, 267, 268, 274, 277], "ad": [33, 100, 166, 217, 225, 267, 268, 270, 273, 274], "second": [33, 100, 217, 267, 268, 274], "flow": [33, 100, 267, 268], "notic": [33, 100, 267, 268, 275], "both": [33, 100, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 273, 277], "parameter": [33, 100, 267, 268], "tau": [33, 100, 267, 268], "control": [33, 35, 100, 267, 268, 273, 276], "fast": [33, 100, 223, 267, 268], "occur": [33, 35, 100, 208, 218, 224, 267, 268], "larg": [33, 100, 267, 268, 269, 273, 276], "mean": [33, 46, 100, 267, 268, 270, 272, 273, 277], "small": [33, 100, 266, 267, 268], "call": [33, 100, 267, 268, 271, 273, 274, 276, 277], "paramet": [33, 35, 48, 100, 114, 148, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 274, 277], "invers": [33, 100, 161, 167, 189, 193, 200, 237, 267, 268, 273, 274], "avoid": [33, 100, 267, 268], "recalcul": [33, 100, 267, 268], "mem_inv": [33, 100, 267, 268], "syn_inv": [33, 100, 267, 268], "respect": [33, 100, 210, 216, 221, 243, 248, 253, 255, 256, 259, 263, 267, 268], "so": [33, 34, 100, 266, 267, 268, 270, 273, 274, 275, 276], "rapid": [33, 100, 267, 268], "slow": [33, 100, 167, 267, 268], "recal": [33, 100, 267, 268, 276], "charg": [33, 100, 267, 268], "between": [33, 100, 212, 217, 218, 221, 256, 265, 267, 268, 274, 277], "two": [33, 100, 217, 218, 221, 266, 267, 268, 272, 274, 275, 277], "point": [33, 35, 100, 267, 268, 270, 274], "rate": [33, 100, 223, 267, 268, 276], "being": [33, 100, 266, 267, 268, 270], "subtract": [33, 100, 267, 268], "each": [33, 48, 100, 218, 221, 267, 268, 270, 274, 276, 277], "more": [33, 34, 35, 46, 48, 101, 102, 112, 167, 194, 195, 198, 201, 202, 216, 229, 231, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 258, 259, 261, 263, 266, 267, 268, 270, 272, 273, 275, 276, 277], "inform": [33, 34, 35, 101, 102, 112, 148, 213, 266, 267, 268, 272, 274], "found": [33, 34, 35, 266, 268, 270, 277], "wikipedia": [33, 34, 35, 48, 100, 267, 268], "book": [33, 34, 35, 268], "dynam": [33, 34, 35, 46, 167, 266, 268, 270, 273], "w": [33, 34, 35, 46, 112, 217, 234, 235, 236, 266, 267, 268, 270], "gerstner": [33, 34, 35, 268], "et": [33, 34, 35, 113, 267, 268], "al": [33, 34, 35, 113, 267, 268], "freeli": [33, 34, 35, 268], "avail": [33, 34, 35, 266, 268, 270, 272], "onlin": [33, 34, 35, 201, 202, 253, 255, 268], "from": [34, 113, 193, 194, 195, 201, 202, 208, 210, 212, 213, 214, 215, 217, 228, 229, 230, 231, 234, 239, 242, 245, 246, 247, 248, 252, 253, 254, 255, 260, 262, 264, 265, 266, 267, 269, 270, 271, 273, 274, 277], "_": [34, 44, 203, 214, 271, 273, 274], "exclud": 34, "term": [34, 38, 46, 48, 101, 105, 112, 198, 213, 218, 249, 260, 262, 277], "ani": [34, 213, 214, 215, 269, 270, 273, 276, 277], "immedi": [34, 274, 277], "stepwis": 34, "impact": 34, "henc": 34, "box": [34, 38, 101, 105, 270], "popular": [35, 38, 102, 105, 267, 268, 277], "model": [35, 38, 102, 105, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 194, 195, 198, 202, 216, 219, 220, 222, 224, 229, 231, 232, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 263, 266, 272, 276], "combin": [35, 38, 102, 105, 211, 266, 267, 268, 274], "leaky_integr": [35, 38, 102, 105, 267, 268], "threshold": [35, 38, 102, 105, 161, 165, 167, 193, 200, 227, 261, 267, 270, 273, 274, 277], "produc": [35, 38, 102, 105, 217, 267, 268, 274], "inflow": 35, "see": [35, 100, 101, 102, 112, 113, 217, 223, 266, 267, 270, 272, 273, 274, 275, 277], "stand": 35, "fire": [35, 38, 46, 105, 164, 165, 166, 193, 194, 195, 198, 200, 201, 202, 225, 226, 227, 240, 243, 249, 266, 270, 274, 275, 277], "increas": [35, 221, 274, 277], "certain": [35, 270, 276, 277], "th": [35, 46, 166, 194, 195, 198, 201, 202, 210, 216, 225, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 273, 274], "z": [35, 46, 166, 194, 195, 198, 202, 208, 213, 214, 215, 216, 221, 225, 240, 243, 244, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 270, 273, 274], "theta": [35, 46, 166, 194, 195, 198, 202, 216, 225, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263], "regular": [35, 46, 275], "artifici": [35, 266, 274, 277], "behaviour": [35, 265, 274], "set": [35, 212, 221, 231, 242, 243, 247, 248, 254, 264, 265, 266, 274, 275], "method": [35, 160, 161, 164, 165, 167, 168, 189, 190, 192, 193, 196, 197, 199, 200, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 270, 271, 272, 273, 274, 277], "field": [35, 47, 113, 210, 211, 212, 221, 264, 265], "default": [35, 48, 193, 209, 210, 212, 213, 214, 215, 217, 221, 228, 230, 231, 239, 240, 242, 243, 245, 247, 248, 252, 253, 254, 255, 256, 259, 260, 261, 262, 264, 265, 268, 273, 274], "superspik": [35, 270, 277], "synthet": 35, "gradient": [35, 143, 161, 165, 167, 193, 200, 227, 266, 270, 273, 277], "approach": [35, 273, 277], "heavisid": 35, "simplifi": [38, 105, 267, 268, 270, 271], "compar": [38, 105, 267, 268, 274], "lif": [38, 46, 105, 160, 161, 162, 166, 194, 195, 196, 198, 202, 216, 224, 246, 248, 249, 250, 253, 255, 256, 258, 259, 261, 270, 271, 274, 275, 277], "leav": [38, 105, 267, 268, 273], "make": [38, 105, 223, 267, 268, 272, 275], "computation": [38, 105, 267, 268, 270, 277], "simpler": [38, 105, 267, 268], "imposs": [38, 105, 267, 268], "implement": [38, 105, 194, 195, 198, 201, 202, 216, 217, 229, 231, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 258, 259, 261, 263, 266, 267, 268, 273, 274, 277], "physic": [38, 105, 267, 268], "system": [38, 105, 267, 268, 270, 273, 275, 277], "becaus": [38, 105, 267, 268, 269, 272, 273, 275, 277], "cannot": [38, 105, 267, 268, 273, 275], "jump": [38, 46, 101, 105, 166, 194, 195, 198, 202, 216, 225, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 267, 268, 270], "natur": [38, 105, 267, 268, 270, 275], "It": [38, 48, 105, 195, 198, 202, 246, 249, 267, 268, 270, 271, 273, 276], "sudden": [38, 105, 267, 268], "give": [38, 105, 267, 268, 276], "its": [38, 105, 221, 267, 268, 270, 274], "name": [38, 105, 266, 267, 268, 273, 274], "shift": [38, 105, 267, 268], "instantan": [38, 101, 105, 267, 268], "drawn": [38, 105, 267, 268], "simlar": [44, 203], "long": [46, 112, 260, 262, 277], "short": [46, 112, 260, 262, 277], "memori": [46, 112, 260, 262, 277], "build": [46, 112, 267, 270, 271, 272, 276, 277], "work": [46, 112, 267, 269, 270, 272, 273, 274, 275], "g": [46, 112, 266, 267, 275, 276], "bellec": [46, 112, 266, 267, 276], "d": [46, 112, 167, 229, 231, 266, 267, 272], "salaj": [46, 112, 266, 267, 276], "subramonei": [46, 112, 266, 267], "r": [46, 112, 223, 266, 267], "legenstein": [46, 112, 266, 267, 276], "maass": [46, 112, 266, 267, 276], "igitugraz": [46, 112, 267], "offici": [46, 112, 267, 272], "similar": [46, 224, 275, 276], "adapt": [46, 192, 193, 194, 195, 201, 202, 246, 248, 253, 255, 260, 261, 262, 277], "appli": [46, 195, 202, 217, 239, 240, 242, 243, 246, 266, 270, 277], "condit": [46, 166, 194, 195, 198, 202, 216, 225, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263], "when": [46, 270, 272, 277], "contrast": [46, 274], "practic": [46, 266, 270, 273], "less": [46, 277], "given": [46, 210, 273, 274], "same": [46, 217, 270, 274], "determin": [46, 161, 165, 167, 193, 200, 208, 227, 273, 276, 277], "tau_b": 46, "creat": [47, 209, 210, 211, 264, 265, 266, 268, 269, 272, 275], "recept": [47, 113, 210, 211, 212, 221, 264, 265], "oper": [48, 114, 217, 274, 277], "layer": [48, 114, 149, 228, 230, 234, 239, 242, 245, 247, 252, 254, 260, 262, 266, 268, 270, 273, 274, 275], "desir": [48, 114, 268], "properti": [48, 114, 215, 268, 269], "aim": [48, 266, 268], "collect": [48, 268], "state": [48, 96, 121, 160, 162, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 198, 199, 201, 202, 207, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 274], "forward": [48, 160, 164, 192, 196, 199, 213, 221, 226, 246, 250, 260, 262, 268, 271, 273], "output": [48, 216, 217, 221, 229, 246, 248, 253, 255, 258, 259, 260, 262, 266, 268, 273, 274, 275, 277], "just": [48, 268, 273, 274], "count": [48, 213, 268, 273], "job": [48, 268], "user": [48, 268, 270], "error": [48, 213, 268], "later": [48, 268, 270, 276], "read": [48, 266, 268, 270, 275], "mechan": 49, "encod": [57, 121, 266, 273], "exp_filt": 58, "adher": [93, 267, 271], "nn": [93, 114, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 273, 275], "interfac": [93, 267, 272, 276], "rule": 97, "thumb": 97, "techiqu": 97, "particular": [101, 274], "omit": 101, "allow": [101, 228, 230, 231, 239, 242, 243, 245, 247, 248, 252, 253, 254, 255, 256, 259, 260, 261, 262, 272, 277], "veri": [102, 267, 273, 276], "deriv": [113, 210, 267, 270], "scale": [113, 167, 210, 212, 221, 264, 265, 266, 267, 273, 276], "space": [113, 217, 265, 267, 274], "theori": [113, 267], "paper": [113, 266, 267, 276], "norm": [113, 267], "visual": [113, 223, 267, 270], "lindeberg": [113, 212, 267], "2021": [113, 266, 267], "For": [113, 223, 266, 267, 269, 270, 272, 273, 277], "binari": [113, 219, 220, 267, 274, 277], "signal": [113, 267, 277], "translat": [113, 267], "invari": [113, 267], "object": [113, 267, 270], "track": [113, 228, 230, 239, 242, 245, 247, 252, 254, 267, 270, 277], "pedersen": [113, 266, 267, 269], "2023": [113, 267], "regularis": 114, "stai": 143, "intact": 143, "properli": 143, "propag": 143, "subpackag": 144, "mai": [144, 270], "matplotlib": [144, 273, 274], "tensorboard": [144, 272, 276], "weight": [148, 231, 236, 242, 243, 247, 248, 254, 264, 273], "2d": [149, 209, 217], "3d": 149, "write": [152, 266, 270, 273], "relat": 153, "g_e": [160, 216], "g_i": [160, 216], "sourc": [160, 161, 162, 164, 165, 166, 167, 168, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "conduct": [160, 161, 162, 167, 216, 256], "feed": [160, 164, 192, 196, 199, 226, 246, 250], "potenti": [160, 161, 164, 165, 167, 189, 192, 193, 196, 199, 200, 215, 226, 227, 233, 237, 244, 250, 274, 275], "excitatori": [160, 161], "inhibitori": [160, 161], "__init__": [160, 161, 164, 165, 167, 168, 189, 190, 192, 193, 196, 197, 199, 200, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 270, 271, 273], "attribut": [160, 161, 164, 165, 167, 168, 189, 190, 192, 193, 196, 197, 199, 200, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "tau_syn_exc_inv": 161, "2000": [161, 162, 216, 218], "tau_syn_inh_inv": 161, "c_m_inv": 161, "5": [161, 162, 167, 169, 170, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 210, 216, 221, 228, 230, 231, 239, 240, 242, 243, 245, 247, 252, 254, 257, 258, 259, 260, 262, 264, 273, 274], "g_l": [161, 216], "2500": [161, 162, 216], "e_rev_i": 161, "100": [161, 162, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 200, 201, 202, 216, 218, 219, 222, 224, 225, 227, 234, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 270, 271, 273, 274], "e_rev_": 161, "60": [161, 162, 170, 171, 173, 175, 176, 182, 183, 186, 216, 273, 274, 276], "v_rest": 161, "20": [161, 162, 216, 246, 248, 253, 255, 258, 259, 266, 271, 273, 274], "v_reset": [161, 165, 193, 197, 200, 227, 241, 251, 273], "70": [161, 162, 173, 178, 184, 185, 187, 188, 216, 273, 276], "v_thresh": 161, "10": [161, 162, 210, 212, 216, 228, 229, 230, 234, 239, 242, 245, 247, 248, 252, 253, 254, 255, 259, 262, 266, 270, 271, 273, 274, 276, 277], "str": [161, 165, 167, 193, 197, 200, 217, 227, 241, 251, 270], "super": [161, 162, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 197, 198, 200, 201, 202, 216, 218, 224, 225, 227, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 271, 273], "float": [161, 162, 165, 166, 167, 177, 191, 193, 194, 195, 197, 198, 200, 201, 202, 210, 211, 212, 216, 218, 219, 220, 222, 224, 225, 227, 228, 230, 231, 234, 235, 236, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265], "synapt": [161, 162, 189, 192, 193, 199, 200, 237, 244, 273, 274], "capacit": 161, "revers": 161, "rest": 161, "reset": [161, 165, 166, 167, 193, 194, 195, 198, 200, 202, 216, 225, 227, 240, 243, 248, 249, 253, 255, 256, 258, 259, 261, 263, 274, 277], "relev": [161, 165, 167, 193, 200, 227], "surrog": [161, 165, 167, 193, 200, 227, 270, 273, 277], "hyper": [161, 165, 167, 193, 200, 227], "comput": [161, 165, 166, 167, 193, 194, 195, 198, 200, 201, 202, 204, 205, 206, 207, 216, 225, 227, 229, 231, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 263, 266, 269, 274], "input_tensor": [162, 191, 198, 249, 270], "cobaliffeedforwardst": 162, "p": [162, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 194, 195, 198, 201, 202, 216, 218, 224, 225, 228, 230, 231, 232, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 270, 272, 273, 274], "cobalifparamet": [162, 216], "dt": [162, 166, 177, 191, 194, 195, 198, 201, 202, 216, 218, 219, 220, 222, 224, 225, 228, 230, 231, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 273, 274], "001": [162, 166, 177, 191, 194, 195, 198, 201, 202, 216, 218, 219, 220, 222, 224, 225, 228, 230, 231, 236, 239, 240, 242, 245, 247, 249, 252, 254, 260, 261, 262, 265, 273, 274], "tupl": [162, 166, 177, 191, 194, 195, 198, 201, 202, 213, 217, 228, 230, 231, 234, 239, 240, 242, 243, 245, 247, 252, 254, 265, 266, 270], "euler": [162, 194, 195, 198, 201, 202, 216, 231, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263], "v_th": [165, 167, 193, 197, 200, 227, 241, 251, 273, 274], "parametr": [165, 167, 193, 200, 227], "mv": [165, 167, 193, 200, 227, 229, 231], "input_spik": [166, 195, 202], "iaffeedforwardst": 166, "iafparamet": [166, 225], "feedforward": [166, 225], "singl": [166, 194, 195, 198, 201, 202, 216, 217, 225, 229, 231, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 263, 266, 273, 275], "togeth": [166, 194, 195, 198, 202, 216, 225, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263], "transit": [166, 194, 195, 198, 202, 208, 216, 225, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263], "unus": [166, 225], "compat": [166, 225, 266], "sq": 167, "04": [167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 273], "mn": 167, "bia": [167, 273], "140": [167, 169, 170, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 229, 231, 273], "30": [167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 229, 231, 246, 258], "tau_inv": 167, "250": [167, 170, 171, 172, 174, 175, 176, 178, 180, 183, 184, 185, 186, 187, 188], "av": 167, "recoveri": [167, 233, 277], "variabl": [167, 233, 275, 277], "u": [167, 229, 231, 233, 266, 273, 277], "smaller": [167, 274], "result": [167, 195, 202, 219, 222, 224, 246, 273, 274], "slower": [167, 274], "m": [167, 193, 200, 264, 266, 271, 273, 274, 276], "sensit": 167, "subthreshold": 167, "fluctuat": 167, "greater": 167, "coupl": [167, 193, 256], "strongli": 167, "possibl": [167, 266, 269, 271, 275], "oscil": 167, "low": 167, "after": [167, 228, 230, 234, 239, 242, 245, 247, 252, 254, 273], "caus": 167, "high": [167, 266, 269], "na": [167, 193], "k": [167, 221], "squar": [167, 210], "izhikevichparamet": [168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 228, 230, 231, 232], "izhikevichst": [168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 228, 230, 231, 232], "behavior": [168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 232], "02": [169, 171, 175, 176, 178, 179, 180, 185, 187, 188, 273], "55": [169, 171, 176, 178, 179], "500": 169, "65": [169, 172, 180, 184, 185, 188, 273], "requires_grad": [169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 273], "true": [169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 239, 240, 242, 243, 264, 273], "16": [169, 172, 179, 180, 181, 182, 183, 186, 216, 218, 229, 231, 246, 248, 253, 255, 258, 259, 270], "26": [170, 172, 183, 186], "61": [170, 273], "15": 170, "8600": 170, "6": [171, 176, 180, 185, 188], "108": [171, 176, 273], "64": [172, 179, 180, 181, 182], "6400": 172, "21": 173, "14": [173, 178, 184, 185, 187, 188], "026": 174, "45": 174, "63": [174, 175], "8000": [174, 175, 218, 260, 261, 262, 263], "8": [175, 184, 209, 210, 218, 264, 272, 274], "input_curr": [177, 194, 201], "25": [179, 180, 181, 182], "05": [179, 186], "200": [179, 181, 182, 189, 191, 193, 194, 195, 200, 201, 202, 218, 224, 234, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 273, 274], "03": [181, 182, 273], "52": 181, "62": [183, 186, 273], "1200": [183, 186], "01": [184, 273], "50": [187, 266], "tau_syn_inv": [189, 193, 200, 237, 241, 273, 274], "tau_mem_inv": [189, 193, 197, 200, 237, 241, 251, 273, 274], "v_leak": [189, 193, 197, 200, 237, 241, 251, 273, 274], "listat": [191, 234], "liparamet": [191, 234, 235, 236, 274], "lifadex": [192, 194], "adaptation_curr": 193, "adaptation_spik": 193, "0200": [193, 194, 195, 245, 246, 247, 248], "delta_t": [193, 194, 195, 200, 201, 202, 246, 248, 253, 255], "5000": [193, 194, 195, 200, 201, 202, 245, 246, 247, 248, 252, 253, 254, 255, 266], "tau_ada_inv": 193, "neuralensembl": 193, "pynn": 193, "trigger": 193, "sharp": [193, 200], "speed": [193, 200, 269], "growth": [193, 200], "ada": [193, 194, 195, 246, 248], "lifadexparamet": [194, 195, 245, 246, 247, 248], "www": [194, 195, 246, 248], "scholarpedia": [194, 195, 246, 248], "articl": [194, 195, 212, 246, 248, 271, 276], "adaptive_exponential_integr": [194, 195, 246, 248], "fire_model": [194, 195, 246, 248], "one": [194, 195, 198, 201, 202, 213, 216, 219, 222, 229, 231, 240, 243, 246, 248, 249, 253, 255, 258, 259, 261, 263, 266, 271, 274, 275, 276, 277], "follow": [194, 195, 198, 201, 202, 216, 229, 231, 240, 243, 246, 248, 249, 253, 255, 258, 259, 261, 263, 266, 269, 270, 273, 277], "od": [194, 195, 198, 201, 202, 216, 229, 231, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 258, 259, 261, 263], "left": [194, 195, 201, 202, 246, 248, 253, 255, 270], "exp": [194, 195, 201, 202, 246, 248, 253, 255], "right": [194, 195, 201, 202, 246, 248, 253, 255, 270, 273], "a_": [194, 195, 246, 248], "i_": [194, 195, 202, 234, 235, 236, 246], "z_": [194, 195, 216, 243, 248, 253, 255, 256, 259, 263], "rec": [194, 195, 216, 243, 248, 253, 255, 256, 259, 263], "lifadexfeedforwardst": 195, "take": [195, 198, 202, 213, 221, 223, 246, 249, 265, 272, 273, 274, 275, 277], "gener": [195, 198, 202, 212, 217, 246, 249, 265, 266, 273], "arbitrari": [195, 198, 202, 246, 249, 262, 265], "meant": [195, 202, 246, 277], "reset_method": [197, 251], "callabl": [197, 221, 251, 265], "reset_valu": [197, 198, 249, 251], "lifboxfeedforwardst": [198, 249], "util": [198, 249, 273], "pytre": [198, 249], "lifboxparamet": [198, 249], "without": [198, 229, 231, 234, 235, 240, 243, 246, 249, 253, 258, 260, 261, 272, 276, 277], "lifex": [199, 201, 246, 255], "lifexparamet": [201, 202, 252, 253, 254, 255], "neuronaldynam": [201, 202, 253, 255], "epfl": [201, 202, 253, 255], "ch": [201, 202, 253, 255], "ch5": [201, 202, 253, 255], "s2": [201, 202, 253, 255], "html": [201, 202, 217, 253, 255, 271, 275, 277], "lifexfeedforwardst": 202, "provid": [204, 205, 206, 207, 208, 212, 265, 266, 269, 272, 275, 276, 277], "bitvector": [204, 205, 206, 207, 208], "xor": 206, "y_prev": 207, "x_1": 207, "x_2": 207, "muller": 207, "element": [207, 217], "next": [207, 270], "previou": [207, 277], "z_prev": 208, "whether": [208, 239, 240, 242, 243], "ha": [208, 215, 266, 269, 270, 271, 272, 273], "size": [209, 210, 211, 216, 217, 231, 236, 243, 248, 253, 255, 256, 259, 262, 263, 264, 265, 276], "int": [209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 224, 230, 231, 236, 242, 243, 247, 248, 253, 254, 255, 256, 257, 259, 262, 263, 264, 265], "effici": [209, 269, 277], "differenti": [209, 270], "gaussian": [209, 221], "kernel": [209, 210, 217, 221], "argument": [209, 210, 212, 217, 240, 264], "2x2": 209, "covari": 209, "matrix": [209, 231, 242, 243, 247, 248, 254], "eccentr": [209, 210], "sampl": [209, 210, 221, 273, 277], "angl": [210, 264], "ratio": [210, 264], "dx": [210, 264], "dy": [210, 264], "rotat": 210, "radian": 210, "pixel": [210, 266], "initi": [210, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 273], "coordin": 210, "spatial": [211, 264], "n_scale": [212, 265], "min_scal": [212, 265], "max_scal": [212, 265], "none": [212, 213, 214, 215, 217, 221, 223, 231, 252, 254, 256, 257, 264, 265, 273, 274], "41421": [212, 265], "accord": 212, "lindeberg2016": 212, "logarithm": [212, 265], "minimum": [212, 265], "option": [212, 213, 214, 215, 217, 265], "maximum": [212, 221, 265], "If": [212, 264, 265, 266, 271, 272, 273, 274, 275, 276, 277], "ignor": [212, 265, 270], "should": [212, 213, 219, 220, 222, 224, 265, 270, 271, 273, 275, 277], "exclus": [212, 265], "sqrt": [212, 265], "2016": [212, 273], "causal": 212, "recurs": 212, "spatio": 212, "link": [212, 276], "springer": 212, "com": [212, 266, 272, 273], "1007": 212, "s10851": 212, "015": 212, "0613": 212, "9": [212, 264, 266, 270, 272, 273, 274], "accumul": [213, 214, 215], "spike_accumul": 213, "push": 213, "futur": 213, "inclus": 213, "cell": [213, 214, 215, 223, 229, 235, 236, 261, 273, 274, 277], "decid": 213, "total": 214, "sum": [214, 267, 273], "integ": 214, "new": [214, 215, 270, 272, 275], "regularizationst": [214, 215], "zero": [215, 228, 230, 231, 234, 239, 240, 242, 243, 245, 247, 252, 254, 260, 262, 266, 274], "all": [215, 217, 223, 228, 230, 234, 239, 242, 245, 247, 252, 254, 270, 273, 274, 276], "entri": 215, "input_s": [216, 230, 231, 236, 242, 243, 247, 248, 253, 254, 255, 256, 257, 259, 262, 263, 273], "hidden_s": [216, 230, 231, 236, 242, 243, 247, 248, 253, 254, 255, 256, 257, 259, 262, 263, 273], "c_": [216, 217], "e_": 216, "rev_": 216, "rev_i": 216, "relu": [216, 274], "w_": [216, 217, 243, 248, 255, 256, 259, 263], "recurr": [216, 229, 231, 234, 235, 240, 242, 243, 244, 245, 246, 247, 248, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 266, 274, 275, 276, 277], "hidden": [216, 231, 236, 242, 243, 247, 248, 253, 254, 255, 256, 259, 262, 263, 273], "lifparamet": [216, 218, 224, 239, 240, 242, 243, 256, 273, 274], "exampl": [216, 218, 221, 223, 228, 229, 230, 231, 234, 239, 240, 242, 243, 245, 246, 247, 248, 252, 253, 254, 255, 258, 259, 264, 271, 276], "batch_siz": [216, 229, 231, 246, 248, 253, 255, 258, 259, 271, 273], "randn": [216, 229, 246, 248, 253, 255, 258, 259, 266, 270, 271, 273], "s0": [216, 229, 246, 248, 253, 255, 258, 259], "intern": [216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 273], "share": [216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "scriptmodul": [216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "in_channel": [217, 264], "out_channel": 217, "kernel_s": 217, "stride": 217, "pad": 217, "dilat": 217, "group": 217, "devic": [217, 271, 273, 276], "dtype": 217, "pointwis": 217, "doc": [217, 266], "stabl": 217, "conv2d": [217, 264, 266], "highlight": 217, "document": [217, 266, 277], "reproduc": 217, "part": [217, 270, 277], "here": [217, 266, 271, 272, 273, 277], "expect": [217, 266, 273, 274, 275, 277], "pass": [217, 274, 277], "notat": 217, "referenc": 217, "abov": [217, 231, 242, 243, 247, 248, 254, 270, 274, 275, 276, 277], "turn": [217, 273, 274], "simplest": [217, 274], "shape": [217, 262, 264, 265, 266, 271, 273, 274], "ext": 217, "h_": 217, "along": 217, "direct": [217, 269], "denot": [217, 265], "groups_not": 217, "either": [217, 270, 271, 272, 277], "height": 217, "width": 217, "arg": [217, 223, 230, 271], "channel": [217, 264, 265, 266, 272], "imag": [217, 221, 273, 276], "convolv": [217, 266], "four": 217, "side": 217, "block": [217, 267], "connect": [217, 231, 242, 243, 247, 248, 253, 254, 255, 256, 259, 273], "seq_length": [218, 219, 222, 224, 271, 273], "fix": [218, 273], "simul": [218, 265, 275, 276, 277], "dure": [218, 264, 272], "iter": [218, 234, 265], "as_tensor": [218, 221, 223, 270, 274], "constant_current_lif_encod": 218, "4000": 218, "0000": [218, 221, 273], "3800": 218, "7600": 218, "f_max": [219, 220, 222], "assum": [219, 220, 222, 223, 266, 275], "rang": [219, 220, 222, 265, 270, 273, 274], "higher": [219, 222, 266, 272, 274, 277], "repres": [219, 220, 221, 222], "sequence_length": [219, 222, 224], "maxim": [219, 220, 222], "frequenc": [219, 220, 222], "hertz": [219, 220, 222], "emit": [219, 220, 222, 275, 277], "coincid": [219, 220, 222, 224], "1000": [220, 273, 274], "out_featur": 221, "gaussian_rbf": 221, "distance_funct": 221, "euclidean_dist": 221, "popul": [221, 273], "singular": 221, "list": [221, 266, 272, 273, 277], "calcul": 221, "radial": 221, "basi": 221, "whose": [221, 274], "length": 221, "equal": 221, "visualis": [221, 272], "imagin": [221, 270], "get": [221, 272, 273, 275, 277], "close": [221, 270, 272, 273, 274], "curv": [221, 277], "credit": 221, "andrew": 221, "richardson": 221, "3": [221, 272, 273, 274, 277], "8825": 221, "6065": 221, "per": [221, 266], "also": [221, 231, 236, 242, 243, 247, 248, 254, 256, 259, 262, 263, 266, 270, 272, 273, 274, 276, 277], "individu": 221, "center": [221, 269], "index": [221, 273], "actual": [221, 275], "distanc": 221, "euclidean": 221, "sign": 222, "kwarg": [223, 228, 229, 230, 231, 234, 235, 239, 240, 242, 243, 245, 246, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "remov": [223, 231, 242, 243, 247, 248, 254, 272], "basic": [223, 275, 277], "measur": [223, 273], "sens": [223, 269, 274], "strong": 223, "van": 223, "rullen": 223, "thorp": 223, "2001": 223, "versu": 223, "order": [223, 264, 273], "retin": 223, "ganglion": 223, "tell": 223, "cortex": 223, "identifi": [223, 274], "uniqu": 223, "posit": [223, 273], "arrai": 223, "sequenti": [223, 266, 275], "constantcurrentlifencod": [223, 224, 271, 273], "thought": 224, "infinit": 224, "refractori": [224, 258, 259], "period": [224, 258, 259], "spiking_method": [228, 229, 230, 231], "izhikevichspikingbehavior": [228, 229, 230, 231], "wrap": [228, 230, 234, 239, 242, 245, 247, 252, 254, 275], "izhikevichcel": 228, "keep": [228, 230, 239, 242, 245, 247, 252, 254, 266, 270, 275, 277], "sequenc": [228, 230, 239, 242, 245, 247, 252, 254, 274], "applic": [228, 230, 234, 239, 242, 245, 247, 252, 254, 269, 270, 273, 274], "last": [228, 230, 234, 239, 242, 245, 247, 252, 254, 273, 274], "batch": [228, 230, 231, 239, 240, 242, 243, 245, 247, 252, 254, 266, 273, 276], "l": [228, 230, 231, 234, 239, 240, 242, 243, 245, 247, 252, 254], "configur": [228, 230, 239, 242, 245, 247, 252, 254, 260, 261, 262, 275, 276], "optimiz": [228, 230, 239, 242, 245, 247, 252, 254, 260, 261, 262], "04v\u00b2": [229, 231], "5v": [229, 231], "bv": [229, 231], "tonic": [229, 231], "import": [229, 231, 260, 262, 264, 266, 271, 273, 274, 275, 276, 277], "tonic_spik": [229, 231], "izhikevichrecurrentcel": 230, "known": [231, 236, 243, 248, 256, 259, 262, 263, 272], "featur": [231, 236, 243, 248, 256, 259, 262, 263, 272, 277], "input_weight": [231, 242, 243, 247, 248, 254], "random": [231, 242, 243, 247, 248, 254, 273, 277], "normal": [231, 242, 243, 247, 248, 254, 270, 273], "recurrent_weight": [231, 242, 243, 247, 248, 254], "autaps": [231, 242, 243, 247, 248, 253, 254, 256, 259, 273], "bool": [231, 239, 240, 242, 243, 247, 248, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264], "self": [231, 242, 243, 247, 248, 253, 254, 255, 256, 259, 266, 271, 273], "fals": [231, 239, 240, 242, 243, 247, 248, 253, 254, 255, 256, 259, 260, 261, 262, 263, 273, 274], "Will": [231, 242, 243, 247, 248, 254, 265], "custom": [231, 242, 243, 247, 248, 254], "licel": [234, 266, 273], "_outer_": 234, "discret": [234, 235, 236, 277], "linear": [236, 266, 273, 274, 275], "lifcel": [239, 266, 270, 271, 274, 277], "lifstat": [239, 240, 242, 243], "spars": [239, 240, 242, 243, 266, 269, 274, 277], "lifrecurrentcel": [242, 273], "lifadexcel": 245, "lifadexlay": 245, "lifexst": [245, 252, 254], "lif_ex": 246, "lifadexrecurrentcel": 247, "lifadexst": 247, "lifexcel": 252, "lifexrecurrentcel": 254, "g_coupl": [256, 257], "multi": 256, "compart": 256, "g_": 256, "lifrefracparamet": [257, 258, 259], "absolut": [258, 259], "rho": [258, 259], "refrac": [258, 259], "z_r": [258, 259], "rho_": [258, 259], "lsnnparamet": [260, 261, 262, 263], "0012": [260, 261, 262, 263], "adjoint": [260, 261, 262, 263, 273], "1803": [260, 262], "09574": [260, 262], "usag": [260, 262], "beta": [261, 263], "unit": [261, 263, 266, 274], "wit": 262, "rf_paramet": 264, "optimize_field": 264, "dimension": [264, 265], "flag": [264, 276], "empti": 264, "leaky_integrator_box": 265, "liboxcel": 265, "activation_state_map": 265, "namedtupl": [265, 270], "lambda": 265, "time_const": 265, "select": [265, 272], "distribut": [265, 273], "scatter": 265, "linspac": 265, "snncell": 265, "sinc": [265, 270, 271, 274], "liboxparamet": 265, "hardcod": 265, "overwrit": 265, "automat": [265, 270], "exploit": 266, "advantag": [266, 273], "inspir": [266, 270, 274, 276], "driven": [266, 269], "fundament": [266, 270, 273, 277], "expand": 266, "primit": [266, 271], "bring": 266, "modern": 266, "proven": 266, "infrastructur": [266, 269], "github": [266, 272, 277], "io": [266, 272, 277], "fastest": 266, "try": [266, 272], "jupyt": [266, 272], "notebook": [266, 273, 274, 275], "googl": 266, "collab": 266, "altern": [266, 276], "local": [266, 272, 277], "task": [266, 271, 272, 273, 277], "python": [266, 270, 272, 276, 277], "present": 266, "plug": [266, 277], "plai": [266, 277], "your": [266, 270, 271, 272, 275], "own": [266, 269, 270, 271, 275, 277], "our": [266, 269, 271, 272, 273, 275, 277], "about": [266, 273, 275, 276, 277], "prerequisit": [266, 272], "methodinstructionsprerequisit": 266, "pypi": 266, "pip": [266, 276], "qu": 266, "git": [266, 272], "With": [266, 273, 277], "docker": 266, "pull": [266, 272], "quai": [266, 272], "conda": 266, "anaconda": 266, "miniconda": 266, "troubleshoot": 266, "guid": [266, 272], "issu": [266, 272], "discord": [266, 272], "bundl": 266, "correct": [266, 271, 273, 277], "sscce": 266, "invok": [266, 273], "directori": [266, 270, 272], "consol": 266, "help": [266, 276], "To": [266, 270, 271, 272, 274, 275, 277], "classif": [266, 276], "cifar": [266, 276], "cifar10": 266, "balanc": [266, 276], "polici": 266, "demonstr": [266, 270, 273, 275, 276], "variant": 266, "mnist_pl": [266, 276], "gpu": [266, 271, 276], "taken": 266, "tutori": [266, 271, 273, 275], "achiev": [266, 270, 277], "99": [266, 273], "accuraci": [266, 273, 277], "torch": [266, 270, 271, 272, 273, 274, 275, 277], "sequentialst": [266, 275], "maxpool2d": 266, "flatten": 266, "800": 266, "non": [266, 274, 277], "28": [266, 271, 273], "28x28": 266, "2018": 266, "anoth": [266, 276, 277], "interest": [266, 269], "lsnnrecurr": [266, 277], "lsnn": [266, 277], "datapoint": 266, "new_stat": 266, "wa": 266, "reason": [266, 272], "find": [266, 269, 276], "decad": 266, "research": [266, 269, 274, 277], "acceler": [266, 277], "within": [266, 269, 277], "passion": 266, "strive": 266, "best": [266, 273], "promis": 266, "maintain": [266, 269], "simpl": [266, 267, 269, 271, 273, 274, 275, 277], "ourselv": 266, "synaps": 266, "decod": [266, 273], "algorithm": [266, 277], "dataset": [266, 276, 277], "standard": [266, 273], "excel": [266, 269, 271], "scaleabl": 266, "final": [266, 270, 273, 277], "perform": [266, 269], "preliminari": 266, "benchmark": 266, "suggest": [266, 277], "aid": 266, "preexist": 266, "invest": 266, "scalabl": 266, "infer": 266, "laptop": 266, "sever": [266, 273, 277], "node": 266, "hpc": [266, 276], "cluster": [266, 269], "littl": [266, 276], "effort": [266, 269], "As": [266, 270, 273, 274], "neuromorph": [266, 269, 274], "softwar": 266, "comprehens": 266, "warmli": 266, "encourag": 266, "alwai": [266, 273, 275], "welcom": 266, "howev": [266, 270, 273], "wish": [266, 270, 275], "guidelin": 266, "christian": [266, 269, 273], "pehl": [266, 269, 273], "cpehl": 266, "postdoc": 266, "univers": 266, "germani": [266, 269], "jen": [266, 269], "jegp": 266, "doctor": 266, "student": 266, "kth": 266, "royal": 266, "institut": 266, "technologi": 266, "sweden": [266, 269], "receiv": [266, 269], "fund": [266, 269], "ec": [266, 269], "horizon": [266, 269], "2020": [266, 269], "framework": [266, 269], "programm": [266, 269], "grant": [266, 269], "agreement": [266, 269], "785907": [266, 269], "945539": [266, 269], "hbp": [266, 269], "deutsch": [266, 269], "forschungsgemeinschaft": [266, 269], "dfg": [266, 269], "german": [266, 269], "foundat": [266, 269, 274], "strategi": [266, 269], "exc": [266, 269], "2181": [266, 269], "390900948": [266, 269], "structur": [266, 269, 270], "cite": 266, "norse2021": 266, "author": [266, 273], "egholm": 266, "titl": 266, "month": 266, "jan": 266, "year": 266, "ai": 266, "publish": 266, "zenodo": 266, "doi": 266, "5281": 266, "4422025": 266, "url": [266, 272], "literatur": [266, 277], "scholar": 266, "semant": 266, "lgplv3": 266, "detail": [266, 272, 275, 276], "until": 267, "project": 269, "explor": [269, 273, 274], "benefit": [269, 272, 273], "broad": 269, "energi": 269, "solv": [269, 270, 277], "von": 269, "neumann": 269, "bottleneck": 269, "host": 269, "awar": 269, "fact": 269, "undertaken": 269, "area": 269, "chose": 269, "develop": [269, 272], "did": 269, "suffici": 269, "mostli": 269, "toolset": 269, "motiv": [269, 274], "person": 269, "convinc": 269, "outsid": 269, "scope": 269, "now": [269, 270, 271, 272, 273, 277], "primarili": 269, "concern": [269, 273], "plan": 269, "academ": 269, "commerci": 269, "hardwar": [269, 272, 274], "platform": [269, 271], "question": 269, "comment": 269, "were": 269, "enabl": [269, 272], "resourc": [269, 274], "nation": 269, "supercomput": 269, "naiss": 269, "chalmer": 269, "centr": 269, "scienc": 269, "engin": 269, "c3se": 269, "north": 269, "hpc2n": 269, "uppsala": 269, "multidisciplinari": 269, "advanc": 269, "uppmax": 269, "partial": [269, 274], "swedish": 269, "council": 269, "through": [269, 271, 276], "2022": 269, "06725": 269, "explain": [270, 277], "programmat": 270, "intend": 270, "audienc": 270, "want": 270, "understand": 270, "underli": 270, "concept": 270, "show": [270, 272, 274, 275], "hypothet": 270, "biolog": [270, 273, 274, 275, 276, 277], "rudimentari": 270, "syntact": 270, "sugar": 270, "compos": [270, 273], "better": [270, 277], "black": 270, "circumv": 270, "hierarchi": 270, "red": [270, 274], "directli": 270, "figur": [270, 274], "fig": [270, 273, 277], "file": 270, "access": [270, 272, 273, 274, 276], "lif_feed_forward_step": 270, "similarli": [270, 273], "know": [270, 274, 275], "essenti": [270, 273], "modular": 270, "wrapper": 270, "inde": 270, "re": 270, "counterpart": 270, "realiz": 270, "onc": [270, 274, 277], "built": [270, 271, 276], "test": 270, "straightforward": 270, "worth": [270, 271], "mention": 270, "tediou": 270, "accommod": 270, "snn": [270, 277], "arrow": 270, "py": [270, 272, 273], "folder": 270, "imper": 270, "would": [270, 272, 273, 275, 277], "cumbersom": 270, "problem": 270, "luckili": 270, "broken": 270, "down": 270, "constitu": 270, "isol": [270, 272], "unless": 270, "discontinu": 270, "unfortun": 270, "happen": [270, 272, 274], "often": [270, 273], "why": 270, "approxim": 270, "studi": 270, "api": 270, "subject": 270, "innerv": 270, "And": [270, 272], "scalar": [270, 277], "def": [270, 271, 273, 274], "my_dynam": 270, "resolv": 270, "interpret": 270, "loop": 270, "mock_data": 270, "pretti": 270, "bit": 270, "hyperparamet": [270, 273], "myparamet": 270, "thing": [270, 271, 274, 275, 277], "necessari": [270, 271], "exist": [270, 272, 273, 275, 277], "izhikevich": 270, "top": [271, 272], "support": [271, 272, 273, 277], "cover": [271, 274], "cuda": [271, 272, 273], "familiaris": 271, "yourself": 271, "beginn": [271, 275], "nn_tutori": 271, "might": [271, 272, 274], "sometim": 271, "recommend": [271, 272, 275, 277], "idiosyncrasi": 271, "regist": [271, 272, 273], "buffer": 271, "setup": [271, 272], "correctli": 271, "move": 271, "lifconvnet": 271, "input_featur": [271, 273], "constant_current_encod": 271, "rsnn": 271, "convnet4": 271, "view": [271, 273], "reshap": 271, "max": [271, 273, 274], "log_p_i": [271, 273], "log_softmax": [271, 273], "dim": [271, 273], "initialis": [271, 273], "main": [271, 277], "chosen": [272, 273], "hint": 272, "7": [272, 273], "below": [272, 274, 275, 276, 277], "primari": 272, "met": 272, "manag": 272, "preinstal": 272, "most": [272, 273, 274], "linux": 272, "unix": 272, "distro": 272, "start": [272, 274, 275, 277], "command": 272, "line": [272, 273, 274, 276], "Or": 272, "latest": 272, "clone": 272, "cd": 272, "torchtext": 272, "torchvis": [272, 273], "easier": 272, "introspect": 272, "environ": [272, 276], "filesystem": 272, "go": 272, "three": [272, 277], "replac": [272, 274, 275, 277], "full": 272, "path": 272, "8888": 272, "bash": 272, "pip3": 272, "dir": 272, "ip": 272, "root": [272, 273], "copi": 272, "past": 272, "browser": 272, "voila": 272, "nvidia": 272, "runtim": 272, "ref": 272, "hopefulli": 272, "address": 272, "hesit": 272, "reach": [272, 274], "chat": 272, "server": 272, "gg": 272, "7fgn359": 272, "reli": 272, "optimis": [272, 273], "hotspot": 272, "download": [272, 273], "cmake": 272, "befor": [272, 273, 275], "header": 272, "alreadi": [272, 273], "debian": 272, "ubuntu": 272, "apt": 272, "python3": [272, 276], "dev": 272, "interf": 272, "uninstal": 272, "reinstal": 272, "prefer": 272, "280": 272, "07": 272, "solut": [272, 275], "forg": 272, "temptest2": 272, "seen": [273, 277], "introduct": [273, 275, 277], "come": 273, "those": 273, "treat": 273, "arbitrarili": 273, "machin": [273, 274], "context": 273, "recent": [273, 274], "becom": [273, 277], "clear": 273, "benefiti": 273, "them": [273, 274, 277], "distinct": 273, "incorpor": 273, "facilit": 273, "pre": 273, "nors": [273, 274, 276], "pyplot": [273, 274], "plt": [273, 274], "instanti": 273, "importerror": 273, "traceback": [273, 274], "home": 273, "runner": 273, "easi": [273, 276], "enough": 273, "instead": 273, "appropri": 273, "choic": [273, 274, 277], "lognorm": 273, "guarante": 273, "remain": 273, "choos": 273, "deviat": 273, "neg": 273, "unlik": 273, "numpi": [273, 274], "np": [273, 274], "bin": 273, "histogram": 273, "hist": 273, "histtyp": 273, "xlabel": [273, 274], "matric": 273, "appear": 273, "enter": 273, "been": 273, "1287": 273, "0703": 273, "4601": 273, "0114": 273, "0835": 273, "1185": 273, "0429": 273, "0861": 273, "2161": 273, "3251": 273, "1037": 273, "0786": 273, "3725": 273, "0945": 273, "1543": 273, "1508": 273, "0733": 273, "2225": 273, "0465": 273, "2300": 273, "0681": 273, "2809": 273, "1205": 273, "0732": 273, "3285": 273, "0445": 273, "1016": 273, "1084": 273, "0621": 273, "2362": 273, "0088": 273, "0473": 273, "2168": 273, "0307": 273, "2217": 273, "0065": 273, "0420": 273, "1593": 273, "0059": 273, "2879": 273, "0932": 273, "0390": 273, "2117": 273, "0844": 273, "0938": 273, "0210": 273, "1170": 273, "0709": 273, "2757": 273, "0067": 273, "1806": 273, "0191": 273, "2278": 273, "1108": 273, "0404": 273, "0023": 273, "0122": 273, "0125": 273, "1097": 273, "1081": 273, "0801": 273, "0539": 273, "0436": 273, "1712": 273, "2872": 273, "easiest": 273, "rectifi": [273, 274], "explicit": [273, 274], "parametrizedlifrecurrentcel": 273, "105": 273, "7182": 273, "107": 273, "4838": 273, "0283": 273, "1591": 273, "53": 273, "3966": 273, "109": 273, "9805": 273, "96": 273, "5298": 273, "98": 273, "7639": 273, "6523": 273, "5165": 273, "123": 273, "9547": 273, "91": 273, "8613": 273, "74": 273, "4375": 273, "77": 273, "2754": 273, "4332": 273, "75": 273, "0951": 273, "7826": 273, "128": 273, "1384": 273, "5254": 273, "4896": 273, "132": 273, "6102": 273, "101": 273, "3723": 273, "94": 273, "8174": 273, "113": 273, "6608": 273, "92": 273, "8799": 273, "102": 273, "4582": 273, "0418": 273, "7185": 273, "97": 273, "0302": 273, "2958": 273, "106": 273, "0022": 273, "111": 273, "0281": 273, "57": 273, "8042": 273, "2294": 273, "124": 273, "0950": 273, "120": 273, "5536": 273, "85": [273, 274], "0079": 273, "122": 273, "0159": 273, "3311": 273, "82": 273, "8800": 273, "6850": 273, "0127": 273, "81": 273, "5401": 273, "7032": 273, "0714": 273, "9130": 273, "3563": 273, "131": 273, "6322": 273, "88": 273, "3253": 273, "80": 273, "4107": 273, "90": [273, 277], "0314": 273, "8495": 273, "78": 273, "5712": 273, "6052": 273, "2183": 273, "142": 273, "2331": 273, "1681": 273, "8471": 273, "6644": 273, "115": 273, "2660": 273, "89": 273, "4297": 273, "5509": 273, "27": 273, "3883": 273, "44": 273, "9216": 273, "8977": 273, "130": 273, "8837": 273, "9058": 273, "110": 273, "5285": 273, "6668": 273, "6617": 273, "4103": 273, "114": 273, "3868": 273, "87": 273, "7616": 273, "7753": 273, "3395": 273, "8698": 273, "0968": 273, "1020": 273, "134": 273, "0003": 273, "5420": 273, "119": 273, "3351": 273, "7738": 273, "1515": 273, "8721": 273, "69": 273, "7877": 273, "0343": 273, "7976": 273, "8820": 273, "126": 273, "8868": 273, "7279": 273, "2416": 273, "118": 273, "0816": 273, "95": 273, "5625": 273, "103": 273, "5655": 273, "1446": 273, "8175": 273, "2220": 273, "5810": 273, "5847": 273, "4763": 273, "7102": 273, "5170": 273, "5944": 273, "3752": 273, "6186": 273, "5279": 273, "5828": 273, "4731": 273, "4420": 273, "3426": 273, "6271": 273, "3732": 273, "4154": 273, "5121": 273, "4326": 273, "5450": 273, "5674": 273, "4952": 273, "6068": 273, "5628": 273, "3578": 273, "3267": 273, "6845": 273, "6106": 273, "5249": 273, "5779": 273, "4979": 273, "5589": 273, "5879": 273, "5523": 273, "4543": 273, "4563": 273, "5968": 273, "5322": 273, "6053": 273, "6176": 273, "6008": 273, "4561": 273, "4256": 273, "4695": 273, "4654": 273, "5881": 273, "4071": 273, "6236": 273, "6023": 273, "5724": 273, "6621": 273, "5386": 273, "4352": 273, "5922": 273, "6512": 273, "7498": 273, "3829": 273, "4641": 273, "5914": 273, "4768": 273, "4183": 273, "5869": 273, "7052": 273, "4787": 273, "4283": 273, "6367": 273, "4590": 273, "4615": 273, "4977": 273, "5333": 273, "4441": 273, "5708": 273, "7478": 273, "5310": 273, "5089": 273, "5937": 273, "2963": 273, "4295": 273, "4411": 273, "4158": 273, "6090": 273, "6406": 273, "5169": 273, "4072": 273, "4794": 273, "5371": 273, "6913": 273, "6281": 273, "3540": 273, "6166": 273, "5970": 273, "5496": 273, "4816": 273, "4926": 273, "4962": 273, "7173": 273, "6444": 273, "3962": 273, "5445": 273, "3929": 273, "5025": 273, "3769": 273, "2647": 273, "0369": 273, "1230": 273, "0659": 273, "0242": 273, "1555": 273, "2033": 273, "0797": 273, "0882": 273, "2867": 273, "1669": 273, "0143": 273, "0366": 273, "3470": 273, "0849": 273, "0559": 273, "0878": 273, "1082": 273, "0416": 273, "1089": 273, "0370": 273, "1723": 273, "1273": 273, "2060": 273, "0552": 273, "3023": 273, "1878": 273, "1071": 273, "0081": 273, "2171": 273, "1173": 273, "2679": 273, "0000e": 273, "00": 273, "2299e": 273, "7312e": 273, "1504e": 273, "9836e": 273, "2699e": 273, "5662e": 273, "6343e": 273, "3085e": 273, "1224e": 273, "6341e": 273, "6074e": 273, "5989e": 273, "7264e": 273, "8241e": 273, "4665e": 273, "4692e": 273, "1811e": 273, "9618e": 273, "8011e": 273, "4050e": 273, "6199e": 273, "8831e": 273, "3311e": 273, "4930e": 273, "1475e": 273, "4574e": 273, "2047e": 273, "4999e": 273, "6092e": 273, "9056e": 273, "adopt": 273, "necessarili": 273, "great": 273, "256": 273, "transform": [273, 274], "totensor": 273, "1307": 273, "3081": 273, "train_data": 273, "train_load": 273, "dataload": 273, "shuffl": 273, "test_load": 273, "yann": 273, "lecun": 273, "exdb": 273, "idx3": 273, "ubyt": 273, "gz": 273, "raw": 273, "extract": 273, "label": [273, 274, 276], "idx1": 273, "t10k": 273, "simplic": 273, "consid": [273, 277], "hidden_featur": 273, "output_featur": 273, "recurrent_cel": 273, "fc_out": 273, "s1": 273, "vo": 273, "stack": [273, 274], "independ": 273, "probabl": [273, 276], "sophist": 273, "don": 273, "care": 273, "tqdm": 273, "trang": 273, "epoch": [273, 276], "max_epoch": 273, "loss": 273, "target": 273, "zero_grad": 273, "nll_loss": 273, "backward": 273, "append": [273, 274], "item": 273, "mean_loss": 273, "eval": 273, "test_loss": 273, "no_grad": 273, "reduct": 273, "pred": 273, "argmax": 273, "keepdim": 273, "eq": 273, "view_a": 273, "len": 273, "32": 273, "lr": 273, "002": 273, "is_avail": 273, "cpu": 273, "run_train": 273, "training_loss": 273, "autograd": 273, "set_detect_anomali": 273, "print": 273, "impati": 273, "decreas": [273, 274], "noth": 273, "adam": 273, "tau_mem_inv_befor": 273, "detach": [273, 274], "v_th_befor": 273, "model_aft": 273, "tau_mem_inv_aft": 273, "v_th_after": 273, "plot": [273, 274], "timeconst": 273, "ax": 273, "subplot": 273, "figsiz": 273, "set_xlabel": 273, "legend": [273, 274], "0x7fe665b8efd0": 273, "0x7fe665b8a8e0": 273, "conclud": [273, 275], "mainli": [273, 277], "knowledg": [273, 275], "At": [273, 277], "moment": 273, "onli": [273, 274, 275, 277], "discretis": [273, 274], "limit": 273, "though": 273, "could": [273, 274], "public": 273, "resembl": 273, "ones": [273, 275, 277], "ml": 273, "challeng": 273, "techniqu": 273, "shortcut": 273, "account": 273, "naiv": 273, "involv": 273, "haven": 273, "jointli": 273, "consist": [274, 277], "wise": 274, "circuit": 274, "One": 274, "look": [274, 275, 276, 277], "regard": 274, "rnn": [274, 275], "exchang": 274, "restrict": 274, "art": 274, "conveni": 274, "eventu": 274, "goal": 274, "fulli": 274, "process": 274, "But": 274, "even": [274, 276], "curiou": 274, "closer": 274, "brain": 274, "investig": 274, "hit": [274, 275, 277], "press": [274, 275, 277], "live": [274, 275, 277], "aswel": 274, "cours": 274, "style": 274, "matplotlibrc": 274, "__version__": 274, "dev1": 274, "g56570c5e": 274, "capacitor": 274, "li": 274, "By": 274, "convent": 274, "place": 274, "grid": 274, "trace": 274, "voltage_trac": 274, "evolut": 274, "indic": 274, "vertic": 274, "ylabel": 274, "axvlin": 274, "color": 274, "line2d": 274, "0x7fdf5d93a0d0": 274, "influenc": [274, 275], "manipul": 274, "slider": 274, "ipywidget": 274, "interact": 274, "intslid": 274, "floatslid": 274, "functool": 274, "continuous_upd": 274, "tau_mem": 274, "min": 274, "tau_syn": 274, "t0": 274, "t1": 274, "num_neuron": 274, "modulenotfounderror": 274, "No": 274, "consequent": 274, "decai": [274, 277], "quickli": [274, 275], "stimul": 274, "success": 274, "lead": [274, 277], "increasingli": 274, "principl": 274, "arriv": [274, 276, 277], "helper": 274, "record": 274, "integrate_and_record_voltag": 274, "input_spike_train": 274, "repeat": 274, "t_0": 274, "t_1": 274, "millisecond": 274, "further": [274, 275, 276], "40": [274, 277], "150": 274, "lif_integr": 274, "lif_voltage_trac": 274, "axhlin": 274, "grei": 274, "realist": 275, "effect": 275, "design": 275, "seamlessli": [275, 277], "caveat": 275, "rememb": 275, "histori": 275, "handl": 275, "trivial": 275, "construct": 275, "wide": 275, "familiar": 275, "action": 275, "outer": 275, "inner": 275, "0768": 275, "grad_fn": 275, "addmmbackward0": 275, "perfect": 275, "store": [275, 276], "depth": 275, "next_stat": 275, "honestli": 275, "far": 275, "highli": 275, "suit": 275, "quickstart_tutori": 275, "complex": 275, "continu": 275, "load": 276, "backpropag": 276, "particularli": 276, "program": 276, "abseil": 276, "extens": 276, "cli": 276, "descript": 276, "exercis": 276, "counter": 276, "gravit": 276, "forc": 276, "upright": 276, "instal": 276, "robot": 276, "databas": 276, "000": 276, "32x32": 276, "classifi": 276, "pattern": 276, "correlation_experi": 276, "guillaum": 276, "franz": 276, "scherr": 276, "elia": 276, "hajek": 276, "darjan": 276, "robert": 276, "wolfgang": 276, "handwritten": 276, "verifi": 276, "overhead": 276, "parallelis": 276, "much": 276, "successfulli": 276, "juwel": 276, "correspond": 276, "speech_command": 276, "idea": 277, "behind": 277, "product": 277, "tabl": 277, "content": 277, "axi": 277, "shown": 277, "white": 277, "famou": 277, "efficaci": 277, "react": 277, "rare": 277, "than": 277, "exactli": 277, "someon": 277, "wouldn": 277, "updat": 277, "respond": 277, "memebran": 277, "electr": 277, "tension": 277, "chanc": 277, "fig_working_ap": 277, "peak": 277, "crucial": 277, "hardest": 277, "free": 277, "distinguish": 277, "lsnncell": 277, "lsnnrecurrentcel": 277, "remix": 277, "fit": 277, "tri": 277, "apart": 277, "plastic": 277, "plausibl": 277, "let": 277, "stdp": 277, "tsodyk": 277, "markram": 277, "port": 277, "replic": 277, "ann": 277, "architectur": 277, "section": 277}, "objects": {"": [[0, 0, 0, "-", "norse"]], "norse": [[1, 0, 0, "-", "benchmark"], [6, 0, 0, "-", "dataset"], [9, 0, 0, "-", "task"], [13, 0, 0, "-", "torch"], [158, 0, 0, "-", "utils"]], "norse.benchmark": [[2, 0, 0, "-", "benchmark"], [3, 0, 0, "-", "main"], [4, 0, 0, "-", "norse_lif"], [5, 0, 0, "-", "plot"]], "norse.dataset": [[7, 0, 0, "-", "memory"], [8, 0, 0, "-", "spiking_heidelberg"]], "norse.task": [[10, 0, 0, "-", "correlation_experiment"], [11, 0, 0, "-", "mnist"], [12, 0, 0, "-", "mnist_pl"]], "norse.torch": [[268, 0, 0, "module-7", "functional"], [85, 0, 0, "-", "models"], [267, 0, 0, "-", "module"], [144, 0, 0, "-", "utils"]], "norse.torch.functional": [[15, 0, 0, "-", "adjoint"], [268, 0, 0, "-", "coba_lif"], [26, 0, 0, "-", "correlation_sensor"], [27, 0, 0, "-", "decode"], [28, 0, 0, "-", "encode"], [29, 0, 0, "-", "filter"], [163, 0, 0, "-", "heaviside"], [268, 0, 0, "-", "iaf"], [268, 0, 0, "-", "izhikevich"], [268, 0, 0, "-", "leaky_integrator"], [34, 0, 0, "-", "leaky_integrator_box"], [35, 0, 0, "-", "lif"], [268, 0, 0, "-", "lif_adex"], [37, 0, 0, "-", "lif_adex_refrac"], [268, 0, 0, "-", "lif_box"], [39, 0, 0, "-", "lif_correlation"], [268, 0, 0, "-", "lif_ex"], [41, 0, 0, "-", "lif_mc"], [42, 0, 0, "-", "lif_mc_refrac"], [43, 0, 0, "-", "lif_refrac"], [203, 0, 0, "-", "lift"], [268, 0, 0, "-", "logical"], [46, 0, 0, "-", "lsnn"], [268, 0, 0, "-", "receptive_field"], [268, 0, 0, "-", "regularization"], [49, 0, 0, "-", "reset"], [50, 0, 0, "-", "spikes_to_times_decoder"], [51, 0, 0, "-", "stdp"], [52, 0, 0, "-", "stdp_sensor"], [53, 0, 0, "-", "superspike"], [54, 0, 0, "-", "test"], [83, 0, 0, "-", "threshold"], [84, 0, 0, "-", "tsodyks_makram"]], "norse.torch.functional.adjoint": [[16, 0, 0, "-", "lif_adjoint"], [17, 0, 0, "-", "lif_mc_adjoint"], [18, 0, 0, "-", "lif_mc_refrac_adjoint"], [19, 0, 0, "-", "lif_refrac_adjoint"], [20, 0, 0, "-", "lsnn_adjoint"], [21, 0, 0, "-", "test"]], "norse.torch.functional.adjoint.test": [[22, 0, 0, "-", "test_lif_adjoint"], [23, 0, 0, "-", "test_lif_refrac_adjoint"], [24, 0, 0, "-", "test_lsnn_adjoint"]], "norse.torch.functional.coba_lif": [[160, 1, 1, "", "CobaLIFFeedForwardState"], [161, 1, 1, "", "CobaLIFParameters"], [162, 3, 1, "", "coba_lif_feed_forward_step"]], "norse.torch.functional.coba_lif.CobaLIFFeedForwardState": [[160, 2, 1, "", "__init__"]], "norse.torch.functional.coba_lif.CobaLIFParameters": [[161, 2, 1, "", "__init__"]], "norse.torch.functional.iaf": [[164, 1, 1, "", "IAFFeedForwardState"], [165, 1, 1, "", "IAFParameters"], [166, 3, 1, "", "iaf_feed_forward_step"]], "norse.torch.functional.iaf.IAFFeedForwardState": [[164, 2, 1, "", "__init__"]], "norse.torch.functional.iaf.IAFParameters": [[165, 2, 1, "", "__init__"]], "norse.torch.functional.izhikevich": [[167, 1, 1, "", "IzhikevichParameters"], [168, 1, 1, "", "IzhikevichSpikingBehavior"], [169, 4, 1, "", "accomodation"], [170, 4, 1, "", "bistability"], [171, 4, 1, "", "class_1_exc"], [172, 4, 1, "", "class_2_exc"], [173, 4, 1, "", "dap"], [174, 4, 1, "", "inhibition_induced_bursting"], [175, 4, 1, "", "inhibition_induced_spiking"], [176, 4, 1, "", "integrator"], [177, 3, 1, "", "izhikevich_feed_forward_step"], [178, 4, 1, "", "mixed_mode"], [179, 4, 1, "", "phasic_bursting"], [180, 4, 1, "", "phasic_spiking"], [181, 4, 1, "", "rebound_burst"], [182, 4, 1, "", "rebound_spike"], [183, 4, 1, "", "resonator"], [184, 4, 1, "", "spike_frequency_adaptation"], [185, 4, 1, "", "spike_latency"], [186, 4, 1, "", "subthreshold_oscillation"], [187, 4, 1, "", "tonic_bursting"], [188, 4, 1, "", "tonic_spiking"]], "norse.torch.functional.izhikevich.IzhikevichParameters": [[167, 2, 1, "", "__init__"]], "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior": [[168, 2, 1, "", "__init__"]], "norse.torch.functional.leaky_integrator": [[189, 1, 1, "", "LIParameters"], [190, 1, 1, "", "LIState"], [191, 3, 1, "", "li_feed_forward_step"]], "norse.torch.functional.leaky_integrator.LIParameters": [[189, 2, 1, "", "__init__"]], "norse.torch.functional.leaky_integrator.LIState": [[190, 2, 1, "", "__init__"]], "norse.torch.functional.lif_adex": [[192, 1, 1, "", "LIFAdExFeedForwardState"], [193, 1, 1, "", "LIFAdExParameters"], [194, 3, 1, "", "lif_adex_current_encoder"], [195, 3, 1, "", "lif_adex_feed_forward_step"]], "norse.torch.functional.lif_adex.LIFAdExFeedForwardState": [[192, 2, 1, "", "__init__"]], "norse.torch.functional.lif_adex.LIFAdExParameters": [[193, 2, 1, "", "__init__"]], "norse.torch.functional.lif_box": [[196, 1, 1, "", "LIFBoxFeedForwardState"], [197, 1, 1, "", "LIFBoxParameters"], [198, 3, 1, "", "lif_box_feed_forward_step"]], "norse.torch.functional.lif_box.LIFBoxFeedForwardState": [[196, 2, 1, "", "__init__"]], "norse.torch.functional.lif_box.LIFBoxParameters": [[197, 2, 1, "", "__init__"]], "norse.torch.functional.lif_ex": [[199, 1, 1, "", "LIFExFeedForwardState"], [200, 1, 1, "", "LIFExParameters"], [201, 3, 1, "", "lif_ex_current_encoder"], [202, 3, 1, "", "lif_ex_feed_forward_step"]], "norse.torch.functional.lif_ex.LIFExFeedForwardState": [[199, 2, 1, "", "__init__"]], "norse.torch.functional.lif_ex.LIFExParameters": [[200, 2, 1, "", "__init__"]], "norse.torch.functional.logical": [[204, 3, 1, "", "logical_and"], [205, 3, 1, "", "logical_or"], [206, 3, 1, "", "logical_xor"], [207, 3, 1, "", "muller_c"], [208, 3, 1, "", "posedge_detector"]], "norse.torch.functional.receptive_field": [[209, 3, 1, "", "gaussian_kernel"], [210, 3, 1, "", "spatial_receptive_field"], [211, 3, 1, "", "spatial_receptive_fields_with_derivatives"], [212, 3, 1, "", "temporal_scale_distribution"]], "norse.torch.functional.regularization": [[213, 3, 1, "", "regularize_step"], [214, 3, 1, "", "spike_accumulator"], [215, 3, 1, "", "voltage_accumulator"]], "norse.torch.functional.test": [[55, 0, 0, "-", "test_coba_lif"], [56, 0, 0, "-", "test_decode"], [57, 0, 0, "-", "test_encode"], [58, 0, 0, "-", "test_exp_filter"], [59, 0, 0, "-", "test_heaviside"], [60, 0, 0, "-", "test_iaf"], [61, 0, 0, "-", "test_izhikevich"], [62, 0, 0, "-", "test_leaky_integrator"], [63, 0, 0, "-", "test_leaky_integrator_box"], [64, 0, 0, "-", "test_lif"], [65, 0, 0, "-", "test_lif_adex"], [66, 0, 0, "-", "test_lif_adex_refrac"], [67, 0, 0, "-", "test_lif_box"], [68, 0, 0, "-", "test_lif_ex"], [69, 0, 0, "-", "test_lif_mc"], [70, 0, 0, "-", "test_lif_mc_refrac"], [71, 0, 0, "-", "test_lif_refrac"], [72, 0, 0, "-", "test_lift"], [73, 0, 0, "-", "test_logical"], [74, 0, 0, "-", "test_lsnn"], [75, 0, 0, "-", "test_receptive_field"], [76, 0, 0, "-", "test_regularization"], [77, 0, 0, "-", "test_spikes_to_times_decoder"], [78, 0, 0, "-", "test_stdp"], [79, 0, 0, "-", "test_stdp_sensor"], [80, 0, 0, "-", "test_superspike"], [81, 0, 0, "-", "test_threshold"], [82, 0, 0, "-", "test_tsodyks_makram"]], "norse.torch.models": [[86, 0, 0, "-", "conv"], [87, 0, 0, "-", "mobilenet"], [88, 0, 0, "-", "test"], [92, 0, 0, "-", "vgg"]], "norse.torch.models.test": [[89, 0, 0, "-", "test_conv"], [90, 0, 0, "-", "test_mobilenet"], [91, 0, 0, "-", "test_vgg"]], "norse.torch.module": [[267, 0, 0, "-", "coba_lif"], [267, 0, 0, "-", "conv"], [267, 0, 0, "-", "encode"], [97, 0, 0, "-", "exp_filter"], [267, 0, 0, "-", "iaf"], [267, 0, 0, "-", "izhikevich"], [267, 0, 0, "-", "leaky_integrator"], [101, 0, 0, "-", "leaky_integrator_box"], [267, 0, 0, "-", "lif"], [267, 0, 0, "-", "lif_adex"], [104, 0, 0, "-", "lif_adex_refrac"], [267, 0, 0, "-", "lif_box"], [106, 0, 0, "-", "lif_correlation"], [267, 0, 0, "-", "lif_ex"], [267, 0, 0, "-", "lif_mc"], [267, 0, 0, "-", "lif_mc_refrac"], [267, 0, 0, "-", "lif_refrac"], [111, 0, 0, "-", "lift"], [267, 0, 0, "-", "lsnn"], [267, 0, 0, "-", "receptive_field"], [114, 0, 0, "-", "regularization"], [115, 0, 0, "-", "sequential"], [116, 0, 0, "-", "snn"], [117, 0, 0, "-", "spikes_to_times_decoder"], [118, 0, 0, "-", "test"]], "norse.torch.module.coba_lif": [[216, 1, 1, "", "CobaLIFCell"]], "norse.torch.module.coba_lif.CobaLIFCell": [[216, 2, 1, "", "__init__"]], "norse.torch.module.conv": [[217, 1, 1, "", "LConv2d"]], "norse.torch.module.conv.LConv2d": [[217, 2, 1, "", "__init__"]], "norse.torch.module.encode": [[218, 1, 1, "", "ConstantCurrentLIFEncoder"], [219, 1, 1, "", "PoissonEncoder"], [220, 1, 1, "", "PoissonEncoderStep"], [221, 1, 1, "", "PopulationEncoder"], [222, 1, 1, "", "SignedPoissonEncoder"], [223, 1, 1, "", "SpikeLatencyEncoder"], [224, 1, 1, "", "SpikeLatencyLIFEncoder"]], "norse.torch.module.encode.ConstantCurrentLIFEncoder": [[218, 2, 1, "", "__init__"]], "norse.torch.module.encode.PoissonEncoder": [[219, 2, 1, "", "__init__"]], "norse.torch.module.encode.PoissonEncoderStep": [[220, 2, 1, "", "__init__"]], "norse.torch.module.encode.PopulationEncoder": [[221, 2, 1, "", "__init__"]], "norse.torch.module.encode.SignedPoissonEncoder": [[222, 2, 1, "", "__init__"]], "norse.torch.module.encode.SpikeLatencyEncoder": [[223, 2, 1, "", "__init__"]], "norse.torch.module.encode.SpikeLatencyLIFEncoder": [[224, 2, 1, "", "__init__"]], "norse.torch.module.iaf": [[225, 1, 1, "", "IAFCell"], [226, 1, 1, "", "IAFFeedForwardState"], [227, 1, 1, "", "IAFParameters"]], "norse.torch.module.iaf.IAFCell": [[225, 2, 1, "", "__init__"]], "norse.torch.module.iaf.IAFFeedForwardState": [[226, 2, 1, "", "__init__"]], "norse.torch.module.iaf.IAFParameters": [[227, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich": [[228, 1, 1, "", "Izhikevich"], [229, 1, 1, "", "IzhikevichCell"], [230, 1, 1, "", "IzhikevichRecurrent"], [231, 1, 1, "", "IzhikevichRecurrentCell"], [232, 1, 1, "", "IzhikevichSpikingBehavior"], [233, 1, 1, "", "IzhikevichState"]], "norse.torch.module.izhikevich.Izhikevich": [[228, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichCell": [[229, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichRecurrent": [[230, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichRecurrentCell": [[231, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichSpikingBehavior": [[232, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichState": [[233, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator": [[234, 1, 1, "", "LI"], [235, 1, 1, "", "LICell"], [236, 1, 1, "", "LILinearCell"], [237, 1, 1, "", "LIParameters"], [238, 1, 1, "", "LIState"]], "norse.torch.module.leaky_integrator.LI": [[234, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LICell": [[235, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LILinearCell": [[236, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LIParameters": [[237, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LIState": [[238, 2, 1, "", "__init__"]], "norse.torch.module.lif": [[239, 1, 1, "", "LIF"], [240, 1, 1, "", "LIFCell"], [241, 1, 1, "", "LIFParameters"], [242, 1, 1, "", "LIFRecurrent"], [243, 1, 1, "", "LIFRecurrentCell"], [244, 1, 1, "", "LIFState"]], "norse.torch.module.lif.LIF": [[239, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFCell": [[240, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFParameters": [[241, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFRecurrent": [[242, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFRecurrentCell": [[243, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFState": [[244, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex": [[245, 1, 1, "", "LIFAdEx"], [246, 1, 1, "", "LIFAdExCell"], [247, 1, 1, "", "LIFAdExRecurrent"], [248, 1, 1, "", "LIFAdExRecurrentCell"]], "norse.torch.module.lif_adex.LIFAdEx": [[245, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex.LIFAdExCell": [[246, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex.LIFAdExRecurrent": [[247, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex.LIFAdExRecurrentCell": [[248, 2, 1, "", "__init__"]], "norse.torch.module.lif_box": [[249, 1, 1, "", "LIFBoxCell"], [250, 1, 1, "", "LIFBoxFeedForwardState"], [251, 1, 1, "", "LIFBoxParameters"]], "norse.torch.module.lif_box.LIFBoxCell": [[249, 2, 1, "", "__init__"]], "norse.torch.module.lif_box.LIFBoxFeedForwardState": [[250, 2, 1, "", "__init__"]], "norse.torch.module.lif_box.LIFBoxParameters": [[251, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex": [[252, 1, 1, "", "LIFEx"], [253, 1, 1, "", "LIFExCell"], [254, 1, 1, "", "LIFExRecurrent"], [255, 1, 1, "", "LIFExRecurrentCell"]], "norse.torch.module.lif_ex.LIFEx": [[252, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex.LIFExCell": [[253, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex.LIFExRecurrent": [[254, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex.LIFExRecurrentCell": [[255, 2, 1, "", "__init__"]], "norse.torch.module.lif_mc": [[256, 1, 1, "", "LIFMCRecurrentCell"]], "norse.torch.module.lif_mc.LIFMCRecurrentCell": [[256, 2, 1, "", "__init__"]], "norse.torch.module.lif_mc_refrac": [[257, 1, 1, "", "LIFMCRefracRecurrentCell"]], "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell": [[257, 2, 1, "", "__init__"]], "norse.torch.module.lif_refrac": [[258, 1, 1, "", "LIFRefracCell"], [259, 1, 1, "", "LIFRefracRecurrentCell"]], "norse.torch.module.lif_refrac.LIFRefracCell": [[258, 2, 1, "", "__init__"]], "norse.torch.module.lif_refrac.LIFRefracRecurrentCell": [[259, 2, 1, "", "__init__"]], "norse.torch.module.lsnn": [[260, 1, 1, "", "LSNN"], [261, 1, 1, "", "LSNNCell"], [262, 1, 1, "", "LSNNRecurrent"], [263, 1, 1, "", "LSNNRecurrentCell"]], "norse.torch.module.lsnn.LSNN": [[260, 2, 1, "", "__init__"]], "norse.torch.module.lsnn.LSNNCell": [[261, 2, 1, "", "__init__"]], "norse.torch.module.lsnn.LSNNRecurrent": [[262, 2, 1, "", "__init__"]], "norse.torch.module.lsnn.LSNNRecurrentCell": [[263, 2, 1, "", "__init__"]], "norse.torch.module.receptive_field": [[264, 1, 1, "", "SpatialReceptiveField2d"], [265, 1, 1, "", "TemporalReceptiveField"]], "norse.torch.module.receptive_field.SpatialReceptiveField2d": [[264, 2, 1, "", "__init__"]], "norse.torch.module.receptive_field.TemporalReceptiveField": [[265, 2, 1, "", "__init__"]], "norse.torch.module.test": [[119, 0, 0, "-", "test_coba"], [120, 0, 0, "-", "test_conv"], [121, 0, 0, "-", "test_encode"], [122, 0, 0, "-", "test_exp_filter"], [123, 0, 0, "-", "test_iaf"], [124, 0, 0, "-", "test_izhikevich"], [125, 0, 0, "-", "test_leaky_integrator"], [126, 0, 0, "-", "test_leaky_integrator_box"], [127, 0, 0, "-", "test_lif"], [128, 0, 0, "-", "test_lif_adex"], [129, 0, 0, "-", "test_lif_adex_refrac"], [130, 0, 0, "-", "test_lif_box"], [131, 0, 0, "-", "test_lif_correlation"], [132, 0, 0, "-", "test_lif_ex"], [133, 0, 0, "-", "test_lif_mc"], [134, 0, 0, "-", "test_lif_mc_refrac"], [135, 0, 0, "-", "test_lif_refrac"], [136, 0, 0, "-", "test_lift"], [137, 0, 0, "-", "test_lsnn"], [138, 0, 0, "-", "test_receptive_field"], [139, 0, 0, "-", "test_regularization"], [140, 0, 0, "-", "test_sequential"], [141, 0, 0, "-", "test_snn"], [142, 0, 0, "-", "test_spikes_to_times_decoder"], [143, 0, 0, "-", "test_training"]], "norse.torch.utils": [[145, 0, 0, "-", "clone"], [146, 0, 0, "-", "export_nir"], [147, 0, 0, "-", "import_nir"], [148, 0, 0, "-", "plot"], [150, 0, 0, "-", "pytree"], [151, 0, 0, "-", "state"], [152, 0, 0, "-", "tensorboard"], [154, 0, 0, "-", "test"]], "norse.torch.utils.plot": [[149, 0, 0, "-", "plot"]], "norse.torch.utils.tensorboard": [[153, 0, 0, "-", "tensorboard"]], "norse.torch.utils.test": [[155, 0, 0, "-", "test_nir_export"], [156, 0, 0, "-", "test_nir_import"], [157, 0, 0, "-", "test_tensorboard"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"nors": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277], "benchmark": [1, 2, 3, 4, 5], "main": 3, "norse_lif": 4, "plot": [5, 148, 149], "dataset": [6, 7, 8, 273], "memori": [7, 267, 268, 276], "spiking_heidelberg": 8, "task": [9, 10, 11, 12, 276], "correlation_experi": 10, "mnist": [11, 273, 276], "mnist_pl": 12, "torch": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268], "function": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 268], "adjoint": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "lif_adjoint": 16, "lif_mc_adjoint": 17, "lif_mc_refrac_adjoint": 18, "lif_refrac_adjoint": 19, "lsnn_adjoint": 20, "test": [21, 22, 23, 24, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 88, 89, 90, 91, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 154, 155, 156, 157, 273], "test_lif_adjoint": 22, "test_lif_refrac_adjoint": 23, "test_lsnn_adjoint": 24, "coba_lif": [25, 94, 160, 161, 162, 216], "correlation_sensor": 26, "decod": 27, "encod": [28, 96, 218, 219, 220, 221, 222, 223, 224, 267, 268], "filter": 29, "heavisid": [30, 163], "iaf": [31, 98, 164, 165, 166, 225, 226, 227, 268], "izhikevich": [32, 99, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 228, 229, 230, 231, 232, 233, 267, 268], "leaky_integr": [33, 100, 189, 190, 191, 234, 235, 236, 237, 238], "leaky_integrator_box": [34, 101], "lif": [35, 102, 239, 240, 241, 242, 243, 244, 267, 268, 273], "lif_adex": [36, 103, 192, 193, 194, 195, 245, 246, 247, 248], "lif_adex_refrac": [37, 104], "lif_box": [38, 105, 196, 197, 198, 249, 250, 251], "lif_correl": [39, 106], "lif_ex": [40, 107, 199, 200, 201, 202, 252, 253, 254, 255], "lif_mc": [41, 108, 256], "lif_mc_refrac": [42, 109, 257], "lif_refrac": [43, 110, 258, 259], "lift": [44, 111, 203], "logic": [45, 204, 205, 206, 207, 208, 268], "lsnn": [46, 112, 260, 261, 262, 263, 267, 268], "receptive_field": [47, 113, 209, 210, 211, 212, 264, 265], "regular": [48, 114, 213, 214, 215, 268], "reset": 49, "spikes_to_times_decod": [50, 117], "stdp": [51, 268], "stdp_sensor": 52, "superspik": 53, "test_coba_lif": 55, "test_decod": 56, "test_encod": [57, 121], "test_exp_filt": [58, 122], "test_heavisid": 59, "test_iaf": [60, 123], "test_izhikevich": [61, 124], "test_leaky_integr": [62, 125], "test_leaky_integrator_box": [63, 126], "test_lif": [64, 127], "test_lif_adex": [65, 128], "test_lif_adex_refrac": [66, 129], "test_lif_box": [67, 130], "test_lif_ex": [68, 132], "test_lif_mc": [69, 133], "test_lif_mc_refrac": [70, 134], "test_lif_refrac": [71, 135], "test_lift": [72, 136], "test_log": 73, "test_lsnn": [74, 137], "test_receptive_field": [75, 138], "test_regular": [76, 139], "test_spikes_to_times_decod": [77, 142], "test_stdp": 78, "test_stdp_sensor": 79, "test_superspik": 80, "test_threshold": 81, "test_tsodyks_makram": 82, "threshold": [83, 268], "tsodyks_makram": 84, "model": [85, 86, 87, 88, 89, 90, 91, 92, 267, 268, 270, 271, 273, 274, 275, 277], "conv": [86, 95, 217], "mobilenet": 87, "test_conv": [89, 120], "test_mobilenet": 90, "test_vgg": 91, "vgg": 92, "modul": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "exp_filt": 97, "sequenti": 115, "snn": [116, 273], "test_coba": 119, "test_lif_correl": 131, "test_sequenti": 140, "test_snn": 141, "test_train": 143, "util": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "clone": 145, "export_nir": 146, "import_nir": 147, "pytre": 150, "state": [151, 275, 277], "tensorboard": [152, 153], "test_nir_export": 155, "test_nir_import": 156, "test_tensorboard": 157, "complet": 159, "api": 159, "cobaliffeedforwardst": 160, "cobalifparamet": 161, "coba_lif_feed_forward_step": 162, "iaffeedforwardst": [164, 226], "iafparamet": [165, 227], "iaf_feed_forward_step": 166, "izhikevichparamet": 167, "izhikevichspikingbehavior": [168, 232], "accomod": 169, "bistabl": 170, "class_1_exc": 171, "class_2_exc": 172, "dap": 173, "inhibition_induced_burst": 174, "inhibition_induced_spik": 175, "integr": [176, 267, 268], "izhikevich_feed_forward_step": 177, "mixed_mod": 178, "phasic_burst": 179, "phasic_spik": 180, "rebound_burst": 181, "rebound_spik": 182, "reson": 183, "spike_frequency_adapt": 184, "spike_lat": 185, "subthreshold_oscil": 186, "tonic_burst": 187, "tonic_spik": 188, "liparamet": [189, 237], "listat": [190, 238], "li_feed_forward_step": 191, "lifadexfeedforwardst": 192, "lifadexparamet": 193, "lif_adex_current_encod": 194, "lif_adex_feed_forward_step": 195, "lifboxfeedforwardst": [196, 250], "lifboxparamet": [197, 251], "lif_box_feed_forward_step": 198, "lifexfeedforwardst": 199, "lifexparamet": 200, "lif_ex_current_encod": 201, "lif_ex_feed_forward_step": 202, "logical_and": 204, "logical_or": 205, "logical_xor": 206, "muller_c": 207, "posedge_detector": 208, "gaussian_kernel": 209, "spatial_receptive_field": 210, "spatial_receptive_fields_with_deriv": 211, "temporal_scale_distribut": 212, "regularize_step": 213, "spike_accumul": 214, "voltage_accumul": 215, "cobalifcel": 216, "lconv2d": 217, "constantcurrentlifencod": 218, "poissonencod": 219, "poissonencoderstep": 220, "populationencod": 221, "signedpoissonencod": 222, "spikelatencyencod": 223, "spikelatencylifencod": 224, "iafcel": 225, "izhikevichcel": 229, "izhikevichrecurr": 230, "izhikevichrecurrentcel": 231, "izhikevichst": 233, "li": 234, "licel": 235, "lilinearcel": 236, "lifcel": 240, "lifparamet": 241, "lifrecurr": 242, "lifrecurrentcel": 243, "lifstat": 244, "lifadex": 245, "lifadexcel": 246, "lifadexrecurr": 247, "lifadexrecurrentcel": 248, "lifboxcel": 249, "lifex": 252, "lifexcel": 253, "lifexrecurr": 254, "lifexrecurrentcel": 255, "lifmcrecurrentcel": 256, "lifmcrefracrecurrentcel": 257, "lifrefraccel": 258, "lifrefracrecurrentcel": 259, "lsnncell": 261, "lsnnrecurr": 262, "lsnnrecurrentcel": 263, "spatialreceptivefield2d": 264, "temporalreceptivefield": 265, "1": 266, "get": 266, "start": 266, "2": 266, "us": 266, "instal": [266, 272], "run": [266, 272, 276], "exampl": [266, 270, 273, 277], "3": 266, "spike": [266, 268, 273, 274], "convolut": [266, 267], "classifi": 266, "4": 266, "long": [266, 267, 268], "short": [266, 267, 268], "term": [266, 267, 268], "neural": [266, 273], "network": [266, 273], "why": 266, "similar": 266, "work": [266, 277], "5": 266, "contribut": 266, "6": 266, "credit": 266, "7": 266, "citat": 266, "8": 266, "licens": 266, "contain": 267, "neuron": [267, 268, 270, 273, 274, 275, 277], "fire": [267, 268], "leaki": [267, 268], "box": [267, 268], "conduct": [267, 268], "base": [267, 268], "adapt": [267, 268], "exponenti": [267, 268], "multicompartment": [267, 268], "refract": 267, "refractori": [267, 268], "recept": [267, 268], "field": [267, 268], "tempor": 268, "oper": 268, "mc": 268, "plastic": 268, "time": [268, 273, 277], "depend": [268, 272], "tsodyk": 268, "markram": 268, "tdp": 268, "about": 269, "contact": 269, "acknowledg": 269, "develop": 270, "document": 270, "architectur": 270, "import": 270, "shortcut": 270, "comput": 270, "graph": 270, "implement": 270, "hardwar": 271, "acceler": [271, 272], "nest": 271, "requir": 272, "pip": 272, "from": 272, "conda": 272, "docker": 272, "sourc": 272, "option": 272, "notebook": 272, "gpu": 272, "troubleshoot": 272, "common": 272, "problem": [272, 277], "importerror": 272, "norse_op": 272, "so": 272, "undefin": 272, "symbol": 272, "zn2at5addmmerkns_6tensores2_s2_rkn3c106scalares6": 272, "unsatisfiableerror": 272, "The": 272, "follow": 272, "specif": 272, "were": 272, "found": 272, "incompat": 272, "each": 272, "other": 272, "paramet": [273, 276], "learn": [273, 277], "defin": [273, 274], "vari": 273, "membran": 273, "constant": 273, "toi": 273, "train": 273, "small": 273, "recurr": 273, "load": 273, "defitinit": 273, "loop": 273, "evalu": 273, "conclus": 273, "introduct": 274, "system": 274, "simul": 274, "our": 274, "first": 274, "input": 274, "visual": 274, "voltag": 274, "quickstart": 275, "build": 275, "appli": 275, "bonu": 275, "predefin": 275, "cartpol": 276, "cifar10": 276, "correl": 276, "experi": 276, "pytorch": 276, "lightn": 276, "speech": 276, "command": 276, "recognit": 276, "terminologi": 277, "event": 277, "action": 277, "potenti": 277, "dynam": 277, "workflow": 277, "decid": 277, "plasitici": 277, "deep": 277}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"norse": [[0, "module-norse"]], "norse.benchmark": [[1, "module-norse.benchmark"]], "norse.benchmark.benchmark": [[2, "module-norse.benchmark.benchmark"]], "norse.benchmark.main": [[3, "module-norse.benchmark.main"]], "norse.benchmark.norse_lif": [[4, "module-norse.benchmark.norse_lif"]], "norse.benchmark.plot": [[5, "module-norse.benchmark.plot"]], "norse.dataset": [[6, "module-norse.dataset"]], "norse.dataset.memory": [[7, "module-norse.dataset.memory"]], "norse.dataset.spiking_heidelberg": [[8, "module-norse.dataset.spiking_heidelberg"]], "norse.task": [[9, "module-norse.task"]], "norse.task.correlation_experiment": [[10, "module-norse.task.correlation_experiment"]], "norse.task.mnist": [[11, "module-norse.task.mnist"]], "norse.task.mnist_pl": [[12, "module-norse.task.mnist_pl"]], "norse.torch": [[13, "module-norse.torch"], [267, "norse-torch"], [267, "id1"]], "norse.torch.functional": [[14, "module-norse.torch.functional"], [268, "norse-torch-functional"], [268, "id1"]], "norse.torch.functional.adjoint": [[15, "module-norse.torch.functional.adjoint"]], "norse.torch.functional.adjoint.lif_adjoint": [[16, "module-norse.torch.functional.adjoint.lif_adjoint"]], "norse.torch.functional.adjoint.lif_mc_adjoint": [[17, "module-norse.torch.functional.adjoint.lif_mc_adjoint"]], "norse.torch.functional.adjoint.lif_mc_refrac_adjoint": [[18, "module-norse.torch.functional.adjoint.lif_mc_refrac_adjoint"]], "norse.torch.functional.adjoint.lif_refrac_adjoint": [[19, "module-norse.torch.functional.adjoint.lif_refrac_adjoint"]], "norse.torch.functional.adjoint.lsnn_adjoint": [[20, "module-norse.torch.functional.adjoint.lsnn_adjoint"]], "norse.torch.functional.adjoint.test": [[21, "module-norse.torch.functional.adjoint.test"]], "norse.torch.functional.adjoint.test.test_lif_adjoint": [[22, "module-norse.torch.functional.adjoint.test.test_lif_adjoint"]], "norse.torch.functional.adjoint.test.test_lif_refrac_adjoint": [[23, "module-norse.torch.functional.adjoint.test.test_lif_refrac_adjoint"]], "norse.torch.functional.adjoint.test.test_lsnn_adjoint": [[24, "module-norse.torch.functional.adjoint.test.test_lsnn_adjoint"]], "norse.torch.functional.coba_lif": [[25, "module-norse.torch.functional.coba_lif"]], "norse.torch.functional.correlation_sensor": [[26, "module-norse.torch.functional.correlation_sensor"]], "norse.torch.functional.decode": [[27, "module-norse.torch.functional.decode"]], "norse.torch.functional.encode": [[28, "module-norse.torch.functional.encode"]], "norse.torch.functional.filter": [[29, "module-norse.torch.functional.filter"]], "norse.torch.functional.heaviside": [[30, "module-norse.torch.functional.heaviside"], [163, "module-norse.torch.functional.heaviside"]], "norse.torch.functional.iaf": [[31, "module-norse.torch.functional.iaf"]], "norse.torch.functional.izhikevich": [[32, "module-norse.torch.functional.izhikevich"]], "norse.torch.functional.leaky_integrator": [[33, "module-norse.torch.functional.leaky_integrator"]], "norse.torch.functional.leaky_integrator_box": [[34, "module-norse.torch.functional.leaky_integrator_box"]], "norse.torch.functional.lif": [[35, "module-norse.torch.functional.lif"]], "norse.torch.functional.lif_adex": [[36, "module-norse.torch.functional.lif_adex"]], "norse.torch.functional.lif_adex_refrac": [[37, "module-norse.torch.functional.lif_adex_refrac"]], "norse.torch.functional.lif_box": [[38, "module-norse.torch.functional.lif_box"]], "norse.torch.functional.lif_correlation": [[39, "module-norse.torch.functional.lif_correlation"]], "norse.torch.functional.lif_ex": [[40, "module-norse.torch.functional.lif_ex"]], "norse.torch.functional.lif_mc": [[41, "module-norse.torch.functional.lif_mc"]], "norse.torch.functional.lif_mc_refrac": [[42, "module-norse.torch.functional.lif_mc_refrac"]], "norse.torch.functional.lif_refrac": [[43, "module-norse.torch.functional.lif_refrac"]], "norse.torch.functional.lift": [[44, "module-norse.torch.functional.lift"], [203, "module-norse.torch.functional.lift"]], "norse.torch.functional.logical": [[45, "module-norse.torch.functional.logical"]], "norse.torch.functional.lsnn": [[46, "module-norse.torch.functional.lsnn"]], "norse.torch.functional.receptive_field": [[47, "module-norse.torch.functional.receptive_field"]], "norse.torch.functional.regularization": [[48, "module-norse.torch.functional.regularization"]], "norse.torch.functional.reset": [[49, "module-norse.torch.functional.reset"]], "norse.torch.functional.spikes_to_times_decoder": [[50, "module-norse.torch.functional.spikes_to_times_decoder"]], "norse.torch.functional.stdp": [[51, "module-norse.torch.functional.stdp"]], "norse.torch.functional.stdp_sensor": [[52, "module-norse.torch.functional.stdp_sensor"]], "norse.torch.functional.superspike": [[53, "module-norse.torch.functional.superspike"]], "norse.torch.functional.test": [[54, "module-norse.torch.functional.test"]], "norse.torch.functional.test.test_coba_lif": [[55, "module-norse.torch.functional.test.test_coba_lif"]], "norse.torch.functional.test.test_decode": [[56, "module-norse.torch.functional.test.test_decode"]], "norse.torch.functional.test.test_encode": [[57, "module-norse.torch.functional.test.test_encode"]], "norse.torch.functional.test.test_exp_filter": [[58, "module-norse.torch.functional.test.test_exp_filter"]], "norse.torch.functional.test.test_heaviside": [[59, "module-norse.torch.functional.test.test_heaviside"]], "norse.torch.functional.test.test_iaf": [[60, "module-norse.torch.functional.test.test_iaf"]], "norse.torch.functional.test.test_izhikevich": [[61, "module-norse.torch.functional.test.test_izhikevich"]], "norse.torch.functional.test.test_leaky_integrator": [[62, "module-norse.torch.functional.test.test_leaky_integrator"]], "norse.torch.functional.test.test_leaky_integrator_box": [[63, "module-norse.torch.functional.test.test_leaky_integrator_box"]], "norse.torch.functional.test.test_lif": [[64, "module-norse.torch.functional.test.test_lif"]], "norse.torch.functional.test.test_lif_adex": [[65, "module-norse.torch.functional.test.test_lif_adex"]], "norse.torch.functional.test.test_lif_adex_refrac": [[66, "module-norse.torch.functional.test.test_lif_adex_refrac"]], "norse.torch.functional.test.test_lif_box": [[67, "module-norse.torch.functional.test.test_lif_box"]], "norse.torch.functional.test.test_lif_ex": [[68, "module-norse.torch.functional.test.test_lif_ex"]], "norse.torch.functional.test.test_lif_mc": [[69, "module-norse.torch.functional.test.test_lif_mc"]], "norse.torch.functional.test.test_lif_mc_refrac": [[70, "module-norse.torch.functional.test.test_lif_mc_refrac"]], "norse.torch.functional.test.test_lif_refrac": [[71, "module-norse.torch.functional.test.test_lif_refrac"]], "norse.torch.functional.test.test_lift": [[72, "module-norse.torch.functional.test.test_lift"]], "norse.torch.functional.test.test_logical": [[73, "module-norse.torch.functional.test.test_logical"]], "norse.torch.functional.test.test_lsnn": [[74, "module-norse.torch.functional.test.test_lsnn"]], "norse.torch.functional.test.test_receptive_field": [[75, "module-norse.torch.functional.test.test_receptive_field"]], "norse.torch.functional.test.test_regularization": [[76, "module-norse.torch.functional.test.test_regularization"]], "norse.torch.functional.test.test_spikes_to_times_decoder": [[77, "module-norse.torch.functional.test.test_spikes_to_times_decoder"]], "norse.torch.functional.test.test_stdp": [[78, "module-norse.torch.functional.test.test_stdp"]], "norse.torch.functional.test.test_stdp_sensor": [[79, "module-norse.torch.functional.test.test_stdp_sensor"]], "norse.torch.functional.test.test_superspike": [[80, "module-norse.torch.functional.test.test_superspike"]], "norse.torch.functional.test.test_threshold": [[81, "module-norse.torch.functional.test.test_threshold"]], "norse.torch.functional.test.test_tsodyks_makram": [[82, "module-norse.torch.functional.test.test_tsodyks_makram"]], "norse.torch.functional.threshold": [[83, "module-norse.torch.functional.threshold"]], "norse.torch.functional.tsodyks_makram": [[84, "module-norse.torch.functional.tsodyks_makram"]], "norse.torch.models": [[85, "module-norse.torch.models"]], "norse.torch.models.conv": [[86, "module-norse.torch.models.conv"]], "norse.torch.models.mobilenet": [[87, "module-norse.torch.models.mobilenet"]], "norse.torch.models.test": [[88, "module-norse.torch.models.test"]], "norse.torch.models.test.test_conv": [[89, "module-norse.torch.models.test.test_conv"]], "norse.torch.models.test.test_mobilenet": [[90, "module-norse.torch.models.test.test_mobilenet"]], "norse.torch.models.test.test_vgg": [[91, "module-norse.torch.models.test.test_vgg"]], "norse.torch.models.vgg": [[92, "module-norse.torch.models.vgg"]], "norse.torch.module": [[93, "module-norse.torch.module"]], "norse.torch.module.coba_lif": [[94, "module-norse.torch.module.coba_lif"]], "norse.torch.module.conv": [[95, "module-norse.torch.module.conv"]], "norse.torch.module.encode": [[96, "module-norse.torch.module.encode"]], "norse.torch.module.exp_filter": [[97, "module-norse.torch.module.exp_filter"]], "norse.torch.module.iaf": [[98, "module-norse.torch.module.iaf"]], "norse.torch.module.izhikevich": [[99, "module-norse.torch.module.izhikevich"]], "norse.torch.module.leaky_integrator": [[100, "module-norse.torch.module.leaky_integrator"]], "norse.torch.module.leaky_integrator_box": [[101, "module-norse.torch.module.leaky_integrator_box"]], "norse.torch.module.lif": [[102, "module-norse.torch.module.lif"]], "norse.torch.module.lif_adex": [[103, "module-norse.torch.module.lif_adex"]], "norse.torch.module.lif_adex_refrac": [[104, "module-norse.torch.module.lif_adex_refrac"]], "norse.torch.module.lif_box": [[105, "module-norse.torch.module.lif_box"]], "norse.torch.module.lif_correlation": [[106, "module-norse.torch.module.lif_correlation"]], "norse.torch.module.lif_ex": [[107, "module-norse.torch.module.lif_ex"]], "norse.torch.module.lif_mc": [[108, "module-norse.torch.module.lif_mc"]], "norse.torch.module.lif_mc_refrac": [[109, "module-norse.torch.module.lif_mc_refrac"]], "norse.torch.module.lif_refrac": [[110, "module-norse.torch.module.lif_refrac"]], "norse.torch.module.lift": [[111, "module-norse.torch.module.lift"]], "norse.torch.module.lsnn": [[112, "module-norse.torch.module.lsnn"]], "norse.torch.module.receptive_field": [[113, "module-norse.torch.module.receptive_field"]], "norse.torch.module.regularization": [[114, "module-norse.torch.module.regularization"]], "norse.torch.module.sequential": [[115, "module-norse.torch.module.sequential"]], "norse.torch.module.snn": [[116, "module-norse.torch.module.snn"]], "norse.torch.module.spikes_to_times_decoder": [[117, "module-norse.torch.module.spikes_to_times_decoder"]], "norse.torch.module.test": [[118, "module-norse.torch.module.test"]], "norse.torch.module.test.test_coba": [[119, "module-norse.torch.module.test.test_coba"]], "norse.torch.module.test.test_conv": [[120, "module-norse.torch.module.test.test_conv"]], "norse.torch.module.test.test_encode": [[121, "module-norse.torch.module.test.test_encode"]], "norse.torch.module.test.test_exp_filter": [[122, "module-norse.torch.module.test.test_exp_filter"]], "norse.torch.module.test.test_iaf": [[123, "module-norse.torch.module.test.test_iaf"]], "norse.torch.module.test.test_izhikevich": [[124, "module-norse.torch.module.test.test_izhikevich"]], "norse.torch.module.test.test_leaky_integrator": [[125, "module-norse.torch.module.test.test_leaky_integrator"]], "norse.torch.module.test.test_leaky_integrator_box": [[126, "module-norse.torch.module.test.test_leaky_integrator_box"]], "norse.torch.module.test.test_lif": [[127, "module-norse.torch.module.test.test_lif"]], "norse.torch.module.test.test_lif_adex": [[128, "module-norse.torch.module.test.test_lif_adex"]], "norse.torch.module.test.test_lif_adex_refrac": [[129, "module-norse.torch.module.test.test_lif_adex_refrac"]], "norse.torch.module.test.test_lif_box": [[130, "module-norse.torch.module.test.test_lif_box"]], "norse.torch.module.test.test_lif_correlation": [[131, "module-norse.torch.module.test.test_lif_correlation"]], "norse.torch.module.test.test_lif_ex": [[132, "module-norse.torch.module.test.test_lif_ex"]], "norse.torch.module.test.test_lif_mc": [[133, "module-norse.torch.module.test.test_lif_mc"]], "norse.torch.module.test.test_lif_mc_refrac": [[134, "module-norse.torch.module.test.test_lif_mc_refrac"]], "norse.torch.module.test.test_lif_refrac": [[135, "module-norse.torch.module.test.test_lif_refrac"]], "norse.torch.module.test.test_lift": [[136, "module-norse.torch.module.test.test_lift"]], "norse.torch.module.test.test_lsnn": [[137, "module-norse.torch.module.test.test_lsnn"]], "norse.torch.module.test.test_receptive_field": [[138, "module-norse.torch.module.test.test_receptive_field"]], "norse.torch.module.test.test_regularization": [[139, "module-norse.torch.module.test.test_regularization"]], "norse.torch.module.test.test_sequential": [[140, "module-norse.torch.module.test.test_sequential"]], "norse.torch.module.test.test_snn": [[141, "module-norse.torch.module.test.test_snn"]], "norse.torch.module.test.test_spikes_to_times_decoder": [[142, "module-norse.torch.module.test.test_spikes_to_times_decoder"]], "norse.torch.module.test.test_training": [[143, "module-norse.torch.module.test.test_training"]], "norse.torch.utils": [[144, "module-norse.torch.utils"]], "norse.torch.utils.clone": [[145, "module-norse.torch.utils.clone"]], "norse.torch.utils.export_nir": [[146, "module-norse.torch.utils.export_nir"]], "norse.torch.utils.import_nir": [[147, "module-norse.torch.utils.import_nir"]], "norse.torch.utils.plot": [[148, "module-norse.torch.utils.plot"]], "norse.torch.utils.plot.plot": [[149, "module-norse.torch.utils.plot.plot"]], "norse.torch.utils.pytree": [[150, "module-norse.torch.utils.pytree"]], "norse.torch.utils.state": [[151, "module-norse.torch.utils.state"]], "norse.torch.utils.tensorboard": [[152, "module-norse.torch.utils.tensorboard"]], "norse.torch.utils.tensorboard.tensorboard": [[153, "module-norse.torch.utils.tensorboard.tensorboard"]], "norse.torch.utils.test": [[154, "module-norse.torch.utils.test"]], "norse.torch.utils.test.test_nir_export": [[155, "module-norse.torch.utils.test.test_nir_export"]], "norse.torch.utils.test.test_nir_import": [[156, "module-norse.torch.utils.test.test_nir_import"]], "norse.torch.utils.test.test_tensorboard": [[157, "module-norse.torch.utils.test.test_tensorboard"]], "norse.utils": [[158, "module-norse.utils"]], "Complete API": [[159, "complete-api"]], "norse.torch.functional.coba_lif.CobaLIFFeedForwardState": [[160, "norse-torch-functional-coba-lif-cobaliffeedforwardstate"]], "norse.torch.functional.coba_lif.CobaLIFParameters": [[161, "norse-torch-functional-coba-lif-cobalifparameters"]], "norse.torch.functional.coba_lif.coba_lif_feed_forward_step": [[162, "norse-torch-functional-coba-lif-coba-lif-feed-forward-step"]], "norse.torch.functional.iaf.IAFFeedForwardState": [[164, "norse-torch-functional-iaf-iaffeedforwardstate"]], "norse.torch.functional.iaf.IAFParameters": [[165, "norse-torch-functional-iaf-iafparameters"]], "norse.torch.functional.iaf.iaf_feed_forward_step": [[166, "norse-torch-functional-iaf-iaf-feed-forward-step"]], "norse.torch.functional.izhikevich.IzhikevichParameters": [[167, "norse-torch-functional-izhikevich-izhikevichparameters"]], "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior": [[168, "norse-torch-functional-izhikevich-izhikevichspikingbehavior"]], "norse.torch.functional.izhikevich.accomodation": [[169, "norse-torch-functional-izhikevich-accomodation"]], "norse.torch.functional.izhikevich.bistability": [[170, "norse-torch-functional-izhikevich-bistability"]], "norse.torch.functional.izhikevich.class_1_exc": [[171, "norse-torch-functional-izhikevich-class-1-exc"]], "norse.torch.functional.izhikevich.class_2_exc": [[172, "norse-torch-functional-izhikevich-class-2-exc"]], "norse.torch.functional.izhikevich.dap": [[173, "norse-torch-functional-izhikevich-dap"]], "norse.torch.functional.izhikevich.inhibition_induced_bursting": [[174, "norse-torch-functional-izhikevich-inhibition-induced-bursting"]], "norse.torch.functional.izhikevich.inhibition_induced_spiking": [[175, "norse-torch-functional-izhikevich-inhibition-induced-spiking"]], "norse.torch.functional.izhikevich.integrator": [[176, "norse-torch-functional-izhikevich-integrator"]], "norse.torch.functional.izhikevich.izhikevich_feed_forward_step": [[177, "norse-torch-functional-izhikevich-izhikevich-feed-forward-step"]], "norse.torch.functional.izhikevich.mixed_mode": [[178, "norse-torch-functional-izhikevich-mixed-mode"]], "norse.torch.functional.izhikevich.phasic_bursting": [[179, "norse-torch-functional-izhikevich-phasic-bursting"]], "norse.torch.functional.izhikevich.phasic_spiking": [[180, "norse-torch-functional-izhikevich-phasic-spiking"]], "norse.torch.functional.izhikevich.rebound_burst": [[181, "norse-torch-functional-izhikevich-rebound-burst"]], "norse.torch.functional.izhikevich.rebound_spike": [[182, "norse-torch-functional-izhikevich-rebound-spike"]], "norse.torch.functional.izhikevich.resonator": [[183, "norse-torch-functional-izhikevich-resonator"]], "norse.torch.functional.izhikevich.spike_frequency_adaptation": [[184, "norse-torch-functional-izhikevich-spike-frequency-adaptation"]], "norse.torch.functional.izhikevich.spike_latency": [[185, "norse-torch-functional-izhikevich-spike-latency"]], "norse.torch.functional.izhikevich.subthreshold_oscillation": [[186, "norse-torch-functional-izhikevich-subthreshold-oscillation"]], "norse.torch.functional.izhikevich.tonic_bursting": [[187, "norse-torch-functional-izhikevich-tonic-bursting"]], "norse.torch.functional.izhikevich.tonic_spiking": [[188, "norse-torch-functional-izhikevich-tonic-spiking"]], "norse.torch.functional.leaky_integrator.LIParameters": [[189, "norse-torch-functional-leaky-integrator-liparameters"]], "norse.torch.functional.leaky_integrator.LIState": [[190, "norse-torch-functional-leaky-integrator-listate"]], "norse.torch.functional.leaky_integrator.li_feed_forward_step": [[191, "norse-torch-functional-leaky-integrator-li-feed-forward-step"]], "norse.torch.functional.lif_adex.LIFAdExFeedForwardState": [[192, "norse-torch-functional-lif-adex-lifadexfeedforwardstate"]], "norse.torch.functional.lif_adex.LIFAdExParameters": [[193, "norse-torch-functional-lif-adex-lifadexparameters"]], "norse.torch.functional.lif_adex.lif_adex_current_encoder": [[194, "norse-torch-functional-lif-adex-lif-adex-current-encoder"]], "norse.torch.functional.lif_adex.lif_adex_feed_forward_step": [[195, "norse-torch-functional-lif-adex-lif-adex-feed-forward-step"]], "norse.torch.functional.lif_box.LIFBoxFeedForwardState": [[196, "norse-torch-functional-lif-box-lifboxfeedforwardstate"]], "norse.torch.functional.lif_box.LIFBoxParameters": [[197, "norse-torch-functional-lif-box-lifboxparameters"]], "norse.torch.functional.lif_box.lif_box_feed_forward_step": [[198, "norse-torch-functional-lif-box-lif-box-feed-forward-step"]], "norse.torch.functional.lif_ex.LIFExFeedForwardState": [[199, "norse-torch-functional-lif-ex-lifexfeedforwardstate"]], "norse.torch.functional.lif_ex.LIFExParameters": [[200, "norse-torch-functional-lif-ex-lifexparameters"]], "norse.torch.functional.lif_ex.lif_ex_current_encoder": [[201, "norse-torch-functional-lif-ex-lif-ex-current-encoder"]], "norse.torch.functional.lif_ex.lif_ex_feed_forward_step": [[202, "norse-torch-functional-lif-ex-lif-ex-feed-forward-step"]], "norse.torch.functional.logical.logical_and": [[204, "norse-torch-functional-logical-logical-and"]], "norse.torch.functional.logical.logical_or": [[205, "norse-torch-functional-logical-logical-or"]], "norse.torch.functional.logical.logical_xor": [[206, "norse-torch-functional-logical-logical-xor"]], "norse.torch.functional.logical.muller_c": [[207, "norse-torch-functional-logical-muller-c"]], "norse.torch.functional.logical.posedge_detector": [[208, "norse-torch-functional-logical-posedge-detector"]], "norse.torch.functional.receptive_field.gaussian_kernel": [[209, "norse-torch-functional-receptive-field-gaussian-kernel"]], "norse.torch.functional.receptive_field.spatial_receptive_field": [[210, "norse-torch-functional-receptive-field-spatial-receptive-field"]], "norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives": [[211, "norse-torch-functional-receptive-field-spatial-receptive-fields-with-derivatives"]], "norse.torch.functional.receptive_field.temporal_scale_distribution": [[212, "norse-torch-functional-receptive-field-temporal-scale-distribution"]], "norse.torch.functional.regularization.regularize_step": [[213, "norse-torch-functional-regularization-regularize-step"]], "norse.torch.functional.regularization.spike_accumulator": [[214, "norse-torch-functional-regularization-spike-accumulator"]], "norse.torch.functional.regularization.voltage_accumulator": [[215, "norse-torch-functional-regularization-voltage-accumulator"]], "norse.torch.module.coba_lif.CobaLIFCell": [[216, "norse-torch-module-coba-lif-cobalifcell"]], "norse.torch.module.conv.LConv2d": [[217, "norse-torch-module-conv-lconv2d"]], "norse.torch.module.encode.ConstantCurrentLIFEncoder": [[218, "norse-torch-module-encode-constantcurrentlifencoder"]], "norse.torch.module.encode.PoissonEncoder": [[219, "norse-torch-module-encode-poissonencoder"]], "norse.torch.module.encode.PoissonEncoderStep": [[220, "norse-torch-module-encode-poissonencoderstep"]], "norse.torch.module.encode.PopulationEncoder": [[221, "norse-torch-module-encode-populationencoder"]], "norse.torch.module.encode.SignedPoissonEncoder": [[222, "norse-torch-module-encode-signedpoissonencoder"]], "norse.torch.module.encode.SpikeLatencyEncoder": [[223, "norse-torch-module-encode-spikelatencyencoder"]], "norse.torch.module.encode.SpikeLatencyLIFEncoder": [[224, "norse-torch-module-encode-spikelatencylifencoder"]], "norse.torch.module.iaf.IAFCell": [[225, "norse-torch-module-iaf-iafcell"]], "norse.torch.module.iaf.IAFFeedForwardState": [[226, "norse-torch-module-iaf-iaffeedforwardstate"]], "norse.torch.module.iaf.IAFParameters": [[227, "norse-torch-module-iaf-iafparameters"]], "norse.torch.module.izhikevich.Izhikevich": [[228, "norse-torch-module-izhikevich-izhikevich"]], "norse.torch.module.izhikevich.IzhikevichCell": [[229, "norse-torch-module-izhikevich-izhikevichcell"]], "norse.torch.module.izhikevich.IzhikevichRecurrent": [[230, "norse-torch-module-izhikevich-izhikevichrecurrent"]], "norse.torch.module.izhikevich.IzhikevichRecurrentCell": [[231, "norse-torch-module-izhikevich-izhikevichrecurrentcell"]], "norse.torch.module.izhikevich.IzhikevichSpikingBehavior": [[232, "norse-torch-module-izhikevich-izhikevichspikingbehavior"]], "norse.torch.module.izhikevich.IzhikevichState": [[233, "norse-torch-module-izhikevich-izhikevichstate"]], "norse.torch.module.leaky_integrator.LI": [[234, "norse-torch-module-leaky-integrator-li"]], "norse.torch.module.leaky_integrator.LICell": [[235, "norse-torch-module-leaky-integrator-licell"]], "norse.torch.module.leaky_integrator.LILinearCell": [[236, "norse-torch-module-leaky-integrator-lilinearcell"]], "norse.torch.module.leaky_integrator.LIParameters": [[237, "norse-torch-module-leaky-integrator-liparameters"]], "norse.torch.module.leaky_integrator.LIState": [[238, "norse-torch-module-leaky-integrator-listate"]], "norse.torch.module.lif.LIF": [[239, "norse-torch-module-lif-lif"]], "norse.torch.module.lif.LIFCell": [[240, "norse-torch-module-lif-lifcell"]], "norse.torch.module.lif.LIFParameters": [[241, "norse-torch-module-lif-lifparameters"]], "norse.torch.module.lif.LIFRecurrent": [[242, "norse-torch-module-lif-lifrecurrent"]], "norse.torch.module.lif.LIFRecurrentCell": [[243, "norse-torch-module-lif-lifrecurrentcell"]], "norse.torch.module.lif.LIFState": [[244, "norse-torch-module-lif-lifstate"]], "norse.torch.module.lif_adex.LIFAdEx": [[245, "norse-torch-module-lif-adex-lifadex"]], "norse.torch.module.lif_adex.LIFAdExCell": [[246, "norse-torch-module-lif-adex-lifadexcell"]], "norse.torch.module.lif_adex.LIFAdExRecurrent": [[247, "norse-torch-module-lif-adex-lifadexrecurrent"]], "norse.torch.module.lif_adex.LIFAdExRecurrentCell": [[248, "norse-torch-module-lif-adex-lifadexrecurrentcell"]], "norse.torch.module.lif_box.LIFBoxCell": [[249, "norse-torch-module-lif-box-lifboxcell"]], "norse.torch.module.lif_box.LIFBoxFeedForwardState": [[250, "norse-torch-module-lif-box-lifboxfeedforwardstate"]], "norse.torch.module.lif_box.LIFBoxParameters": [[251, "norse-torch-module-lif-box-lifboxparameters"]], "norse.torch.module.lif_ex.LIFEx": [[252, "norse-torch-module-lif-ex-lifex"]], "norse.torch.module.lif_ex.LIFExCell": [[253, "norse-torch-module-lif-ex-lifexcell"]], "norse.torch.module.lif_ex.LIFExRecurrent": [[254, "norse-torch-module-lif-ex-lifexrecurrent"]], "norse.torch.module.lif_ex.LIFExRecurrentCell": [[255, "norse-torch-module-lif-ex-lifexrecurrentcell"]], "norse.torch.module.lif_mc.LIFMCRecurrentCell": [[256, "norse-torch-module-lif-mc-lifmcrecurrentcell"]], "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell": [[257, "norse-torch-module-lif-mc-refrac-lifmcrefracrecurrentcell"]], "norse.torch.module.lif_refrac.LIFRefracCell": [[258, "norse-torch-module-lif-refrac-lifrefraccell"]], "norse.torch.module.lif_refrac.LIFRefracRecurrentCell": [[259, "norse-torch-module-lif-refrac-lifrefracrecurrentcell"]], "norse.torch.module.lsnn.LSNN": [[260, "norse-torch-module-lsnn-lsnn"]], "norse.torch.module.lsnn.LSNNCell": [[261, "norse-torch-module-lsnn-lsnncell"]], "norse.torch.module.lsnn.LSNNRecurrent": [[262, "norse-torch-module-lsnn-lsnnrecurrent"]], "norse.torch.module.lsnn.LSNNRecurrentCell": [[263, "norse-torch-module-lsnn-lsnnrecurrentcell"]], "norse.torch.module.receptive_field.SpatialReceptiveField2d": [[264, "norse-torch-module-receptive-field-spatialreceptivefield2d"]], "norse.torch.module.receptive_field.TemporalReceptiveField": [[265, "norse-torch-module-receptive-field-temporalreceptivefield"]], "1. Getting started": [[266, "getting-started"]], "2. Using Norse": [[266, "using-norse"]], "2.1. Installation": [[266, "installation"]], "2.2. Running examples": [[266, "running-examples"]], "2.3. Example: Spiking convolutional classifier": [[266, "example-spiking-convolutional-classifier"]], "2.4. Example: Long short-term spiking neural networks": [[266, "example-long-short-term-spiking-neural-networks"]], "3. Why Norse?": [[266, "why-norse"]], "4. Similar work": [[266, "similar-work"]], "5. Contributing": [[266, "contributing"]], "6. Credits": [[266, "credits"]], "7. Citation": [[266, "citation"]], "8. License": [[266, "license"]], "Containers": [[267, "module-norse.torch.module"]], "Convolutions": [[267, "module-norse.torch.module.conv"]], "Encoding": [[267, "module-norse.torch.module.encode"], [268, "module-norse.torch.functional"]], "Neuron models": [[267, "neuron-models"], [268, "neuron-models"]], "Integrate-and-fire": [[267, "integrate-and-fire"]], "Izhikevich": [[267, "module-norse.torch.module.izhikevich"], [268, "module-norse.torch.functional.izhikevich"]], "Leaky integrator": [[267, "module-norse.torch.module.leaky_integrator"], [268, "module-norse.torch.functional.leaky_integrator"]], "Leaky integrate-and-fire (LIF)": [[267, "module-norse.torch.module.lif"], [268, "module-2"]], "LIF, box model": [[267, "module-norse.torch.module.lif_box"], [268, "lif-box-model"]], "LIF, conductance based": [[267, "module-norse.torch.module.coba_lif"], [268, "module-norse.torch.functional.coba_lif"]], "LIF, adaptive exponential": [[267, "module-norse.torch.module.lif_adex"], [268, "module-norse.torch.functional.lif_adex"]], "LIF, exponential": [[267, "module-norse.torch.module.lif_ex"], [268, "module-norse.torch.functional.lif_ex"]], "LIF, multicompartmental": [[267, "module-norse.torch.module.lif_mc"]], "LIF, multicompartmental with refraction": [[267, "module-norse.torch.module.lif_mc_refrac"]], "LIF, refractory": [[267, "module-norse.torch.module.lif_refrac"], [268, "module-4"]], "Long short-term memory (LSNN)": [[267, "module-norse.torch.module.lsnn"], [268, "module-5"]], "Receptive fields": [[267, "module-norse.torch.module.receptive_field"], [268, "module-norse.torch.functional.receptive_field"]], "Logical": [[268, "module-norse.torch.functional.logical"]], "Regularization": [[268, "module-norse.torch.functional.regularization"]], "Threshold functions": [[268, "module-0"]], "Temporal operations": [[268, "module-1"]], "Integrate-and-fire (IAF)": [[268, "module-norse.torch.functional.iaf"]], "LIF, multicompartmental (MC)": [[268, "module-3"]], "Plasticity models": [[268, "plasticity-models"]], "Spike-time dependent plasticity (STDP)": [[268, "module-6"]], "Tsodyks-Markram timing-dependent plasticity (TDP)": [[268, "module-7"]], "About Norse": [[269, "about-norse"]], "Contact": [[269, "contact"]], "Acknowledgements": [[269, "acknowledgements"]], "Development Documentation": [[270, "development-documentation"]], "Architecture of Norse": [[270, "architecture-of-norse"]], "Import shortcuts": [[270, "import-shortcuts"]], "Computational graphs for neuron models": [[270, "computational-graphs-for-neuron-models"]], "Example implementation": [[270, "example-implementation"]], "Hardware acceleration": [[271, "hardware-acceleration"]], "Accelerating Norse models with .to": [[271, "accelerating-norse-models-with-to"]], "Accelerating Norse nested models": [[271, "accelerating-norse-nested-models"]], "Installing Norse": [[272, "installing-norse"], [272, "id1"]], "Required dependencies": [[272, "required-dependencies"]], "Installing with pip": [[272, "installing-with-pip"]], "Installing from Conda": [[272, "installing-from-conda"]], "Installing with Docker": [[272, "installing-with-docker"]], "Installing from source": [[272, "installing-from-source"]], "Optional dependencies": [[272, "optional-dependencies"]], "Running Norse notebooks with Docker": [[272, "running-norse-notebooks-with-docker"]], "GPU acceleration in Docker": [[272, "gpu-acceleration-in-docker"]], "Installation troubleshooting": [[272, "installation-troubleshooting"]], "Common problems": [[272, "common-problems"]], "ImportError: \u2026 /norse_op.so: undefined symbol: ZN2at5addmmERKNS_6TensorES2_S2_RKN3c106ScalarES6": [[272, null]], "UnsatisfiableError: The following specifications were found to be incompatible with each other": [[272, null]], "Parameter learning in Spiking Neural Networks": [[273, "parameter-learning-in-spiking-neural-networks"]], "Defining a Network of LIF Neurons with varying membrane time-constants": [[273, "defining-a-network-of-lif-neurons-with-varying-membrane-time-constants"]], "Toy Example: Training a small recurrent SNN on MNIST": [[273, "toy-example-training-a-small-recurrent-snn-on-mnist"]], "Dataset Loading": [[273, "dataset-loading"]], "Model Defitinition": [[273, "model-defitinition"]], "Training and Test loop": [[273, "training-and-test-loop"]], "Model Evaluation": [[273, "model-evaluation"]], "Conclusions": [[273, "conclusions"]], "Introduction to spiking systems": [[274, "introduction-to-spiking-systems"]], "Simulating neurons": [[274, "simulating-neurons"]], "Defining our first neuron model": [[274, "defining-our-first-neuron-model"]], "Defining our input spikes": [[274, "defining-our-input-spikes"]], "Visualizing neuron voltage": [[274, "visualizing-neuron-voltage"]], "Our first Spiking Neuron": [[274, "our-first-spiking-neuron"]], "Quickstart": [[275, "quickstart"]], "Building Models in Norse": [[275, "building-models-in-norse"]], "Applying neuron models": [[275, "applying-neuron-models"]], "Bonus: Applying neuron models with predefined state": [[275, "bonus-applying-neuron-models-with-predefined-state"]], "Running Tasks": [[276, "running-tasks"]], "Parameters": [[276, "parameters"]], "Cartpole": [[276, "cartpole"]], "Cifar10": [[276, "cifar10"]], "Correlation experiment": [[276, "correlation-experiment"]], "Memory task": [[276, "memory-task"]], "MNIST": [[276, "mnist"]], "MNIST in PyTorch Lightning": [[276, "mnist-in-pytorch-lightning"]], "Speech Command recognition task": [[276, "speech-command-recognition-task"]], "Working with Norse": [[277, "working-with-norse"]], "Terminology": [[277, "terminology"]], "Events and action potentials": [[277, "events-and-action-potentials"]], "Neurons and neuron state": [[277, "neurons-and-neuron-state"]], "Neuron dynamics and time": [[277, "neuron-dynamics-and-time"]], "Norse workflow": [[277, "norse-workflow"]], "Deciding on neuron models": [[277, "deciding-on-neuron-models"]], "Deciding on learning/plasiticy models": [[277, "deciding-on-learning-plasiticy-models"]], "Examples of deep learning problems in Norse": [[277, "examples-of-deep-learning-problems-in-norse"]]}, "indexentries": {"module": [[0, "module-norse"], [1, "module-norse.benchmark"], [2, "module-norse.benchmark.benchmark"], [3, "module-norse.benchmark.main"], [4, "module-norse.benchmark.norse_lif"], [5, "module-norse.benchmark.plot"], [6, "module-norse.dataset"], [7, "module-norse.dataset.memory"], [8, "module-norse.dataset.spiking_heidelberg"], [9, "module-norse.task"], [10, "module-norse.task.correlation_experiment"], [11, "module-norse.task.mnist"], [12, "module-norse.task.mnist_pl"], [13, "module-norse.torch"], [14, "module-norse.torch.functional"], [15, "module-norse.torch.functional.adjoint"], [16, "module-norse.torch.functional.adjoint.lif_adjoint"], [17, "module-norse.torch.functional.adjoint.lif_mc_adjoint"], [18, "module-norse.torch.functional.adjoint.lif_mc_refrac_adjoint"], [19, "module-norse.torch.functional.adjoint.lif_refrac_adjoint"], [20, "module-norse.torch.functional.adjoint.lsnn_adjoint"], [21, "module-norse.torch.functional.adjoint.test"], [22, "module-norse.torch.functional.adjoint.test.test_lif_adjoint"], [23, "module-norse.torch.functional.adjoint.test.test_lif_refrac_adjoint"], [24, "module-norse.torch.functional.adjoint.test.test_lsnn_adjoint"], [25, "module-norse.torch.functional.coba_lif"], [26, "module-norse.torch.functional.correlation_sensor"], [27, "module-norse.torch.functional.decode"], [28, "module-norse.torch.functional.encode"], [29, "module-norse.torch.functional.filter"], [30, "module-norse.torch.functional.heaviside"], [31, "module-norse.torch.functional.iaf"], [32, "module-norse.torch.functional.izhikevich"], [33, "module-norse.torch.functional.leaky_integrator"], [34, "module-norse.torch.functional.leaky_integrator_box"], [35, "module-norse.torch.functional.lif"], [36, "module-norse.torch.functional.lif_adex"], [37, "module-norse.torch.functional.lif_adex_refrac"], [38, "module-norse.torch.functional.lif_box"], [39, "module-norse.torch.functional.lif_correlation"], [40, "module-norse.torch.functional.lif_ex"], [41, "module-norse.torch.functional.lif_mc"], [42, "module-norse.torch.functional.lif_mc_refrac"], [43, "module-norse.torch.functional.lif_refrac"], [44, "module-norse.torch.functional.lift"], [45, "module-norse.torch.functional.logical"], [46, "module-norse.torch.functional.lsnn"], [47, "module-norse.torch.functional.receptive_field"], [48, "module-norse.torch.functional.regularization"], [49, "module-norse.torch.functional.reset"], [50, "module-norse.torch.functional.spikes_to_times_decoder"], [51, "module-norse.torch.functional.stdp"], [52, "module-norse.torch.functional.stdp_sensor"], [53, "module-norse.torch.functional.superspike"], [54, "module-norse.torch.functional.test"], [55, "module-norse.torch.functional.test.test_coba_lif"], [56, "module-norse.torch.functional.test.test_decode"], [57, "module-norse.torch.functional.test.test_encode"], [58, "module-norse.torch.functional.test.test_exp_filter"], [59, "module-norse.torch.functional.test.test_heaviside"], [60, "module-norse.torch.functional.test.test_iaf"], [61, "module-norse.torch.functional.test.test_izhikevich"], [62, "module-norse.torch.functional.test.test_leaky_integrator"], [63, "module-norse.torch.functional.test.test_leaky_integrator_box"], [64, "module-norse.torch.functional.test.test_lif"], [65, "module-norse.torch.functional.test.test_lif_adex"], [66, "module-norse.torch.functional.test.test_lif_adex_refrac"], [67, "module-norse.torch.functional.test.test_lif_box"], [68, "module-norse.torch.functional.test.test_lif_ex"], [69, "module-norse.torch.functional.test.test_lif_mc"], [70, "module-norse.torch.functional.test.test_lif_mc_refrac"], [71, "module-norse.torch.functional.test.test_lif_refrac"], [72, "module-norse.torch.functional.test.test_lift"], [73, "module-norse.torch.functional.test.test_logical"], [74, "module-norse.torch.functional.test.test_lsnn"], [75, "module-norse.torch.functional.test.test_receptive_field"], [76, "module-norse.torch.functional.test.test_regularization"], [77, "module-norse.torch.functional.test.test_spikes_to_times_decoder"], [78, "module-norse.torch.functional.test.test_stdp"], [79, "module-norse.torch.functional.test.test_stdp_sensor"], [80, "module-norse.torch.functional.test.test_superspike"], [81, "module-norse.torch.functional.test.test_threshold"], [82, "module-norse.torch.functional.test.test_tsodyks_makram"], [83, "module-norse.torch.functional.threshold"], [84, "module-norse.torch.functional.tsodyks_makram"], [85, "module-norse.torch.models"], [86, "module-norse.torch.models.conv"], [87, "module-norse.torch.models.mobilenet"], [88, "module-norse.torch.models.test"], [89, "module-norse.torch.models.test.test_conv"], [90, "module-norse.torch.models.test.test_mobilenet"], [91, "module-norse.torch.models.test.test_vgg"], [92, "module-norse.torch.models.vgg"], [93, "module-norse.torch.module"], [94, "module-norse.torch.module.coba_lif"], [95, "module-norse.torch.module.conv"], [96, "module-norse.torch.module.encode"], [97, "module-norse.torch.module.exp_filter"], [98, "module-norse.torch.module.iaf"], [99, "module-norse.torch.module.izhikevich"], [100, "module-norse.torch.module.leaky_integrator"], [101, "module-norse.torch.module.leaky_integrator_box"], [102, "module-norse.torch.module.lif"], [103, "module-norse.torch.module.lif_adex"], [104, "module-norse.torch.module.lif_adex_refrac"], [105, "module-norse.torch.module.lif_box"], [106, "module-norse.torch.module.lif_correlation"], [107, "module-norse.torch.module.lif_ex"], [108, "module-norse.torch.module.lif_mc"], [109, "module-norse.torch.module.lif_mc_refrac"], [110, "module-norse.torch.module.lif_refrac"], [111, "module-norse.torch.module.lift"], [112, "module-norse.torch.module.lsnn"], [113, "module-norse.torch.module.receptive_field"], [114, "module-norse.torch.module.regularization"], [115, "module-norse.torch.module.sequential"], [116, "module-norse.torch.module.snn"], [117, "module-norse.torch.module.spikes_to_times_decoder"], [118, "module-norse.torch.module.test"], [119, "module-norse.torch.module.test.test_coba"], [120, "module-norse.torch.module.test.test_conv"], [121, "module-norse.torch.module.test.test_encode"], [122, "module-norse.torch.module.test.test_exp_filter"], [123, "module-norse.torch.module.test.test_iaf"], [124, "module-norse.torch.module.test.test_izhikevich"], [125, "module-norse.torch.module.test.test_leaky_integrator"], [126, "module-norse.torch.module.test.test_leaky_integrator_box"], [127, "module-norse.torch.module.test.test_lif"], [128, "module-norse.torch.module.test.test_lif_adex"], [129, "module-norse.torch.module.test.test_lif_adex_refrac"], [130, "module-norse.torch.module.test.test_lif_box"], [131, "module-norse.torch.module.test.test_lif_correlation"], [132, "module-norse.torch.module.test.test_lif_ex"], [133, "module-norse.torch.module.test.test_lif_mc"], [134, "module-norse.torch.module.test.test_lif_mc_refrac"], [135, "module-norse.torch.module.test.test_lif_refrac"], [136, "module-norse.torch.module.test.test_lift"], [137, "module-norse.torch.module.test.test_lsnn"], [138, "module-norse.torch.module.test.test_receptive_field"], [139, "module-norse.torch.module.test.test_regularization"], [140, "module-norse.torch.module.test.test_sequential"], [141, "module-norse.torch.module.test.test_snn"], [142, "module-norse.torch.module.test.test_spikes_to_times_decoder"], [143, "module-norse.torch.module.test.test_training"], [144, "module-norse.torch.utils"], [145, "module-norse.torch.utils.clone"], [146, "module-norse.torch.utils.export_nir"], [147, "module-norse.torch.utils.import_nir"], [148, "module-norse.torch.utils.plot"], [149, "module-norse.torch.utils.plot.plot"], [150, "module-norse.torch.utils.pytree"], [151, "module-norse.torch.utils.state"], [152, "module-norse.torch.utils.tensorboard"], [153, "module-norse.torch.utils.tensorboard.tensorboard"], [154, "module-norse.torch.utils.test"], [155, "module-norse.torch.utils.test.test_nir_export"], [156, "module-norse.torch.utils.test.test_nir_import"], [157, "module-norse.torch.utils.test.test_tensorboard"], [158, "module-norse.utils"], [163, "module-norse.torch.functional.heaviside"], [203, "module-norse.torch.functional.lift"], [267, "module-norse.torch.module"], [267, "module-norse.torch.module.coba_lif"], [267, "module-norse.torch.module.conv"], [267, "module-norse.torch.module.encode"], [267, "module-norse.torch.module.iaf"], [267, "module-norse.torch.module.izhikevich"], [267, "module-norse.torch.module.leaky_integrator"], [267, "module-norse.torch.module.lif"], [267, "module-norse.torch.module.lif_adex"], [267, "module-norse.torch.module.lif_box"], [267, "module-norse.torch.module.lif_ex"], [267, "module-norse.torch.module.lif_mc"], [267, "module-norse.torch.module.lif_mc_refrac"], [267, "module-norse.torch.module.lif_refrac"], [267, "module-norse.torch.module.lsnn"], [267, "module-norse.torch.module.receptive_field"], [268, "module-0"], [268, "module-1"], [268, "module-2"], [268, "module-3"], [268, "module-4"], [268, "module-5"], [268, "module-6"], [268, "module-7"], [268, "module-norse.torch.functional"], [268, "module-norse.torch.functional.coba_lif"], [268, "module-norse.torch.functional.iaf"], [268, "module-norse.torch.functional.izhikevich"], [268, "module-norse.torch.functional.leaky_integrator"], [268, "module-norse.torch.functional.lif_adex"], [268, "module-norse.torch.functional.lif_box"], [268, "module-norse.torch.functional.lif_ex"], [268, "module-norse.torch.functional.logical"], [268, "module-norse.torch.functional.receptive_field"], [268, "module-norse.torch.functional.regularization"]], "norse": [[0, "module-norse"]], "norse.benchmark": [[1, "module-norse.benchmark"]], "norse.benchmark.benchmark": [[2, "module-norse.benchmark.benchmark"]], "norse.benchmark.main": [[3, "module-norse.benchmark.main"]], "norse.benchmark.norse_lif": [[4, "module-norse.benchmark.norse_lif"]], "norse.benchmark.plot": [[5, "module-norse.benchmark.plot"]], "norse.dataset": [[6, "module-norse.dataset"]], "norse.dataset.memory": [[7, "module-norse.dataset.memory"]], "norse.dataset.spiking_heidelberg": [[8, "module-norse.dataset.spiking_heidelberg"]], "norse.task": [[9, "module-norse.task"]], "norse.task.correlation_experiment": [[10, "module-norse.task.correlation_experiment"]], "norse.task.mnist": [[11, "module-norse.task.mnist"]], "norse.task.mnist_pl": [[12, "module-norse.task.mnist_pl"]], "norse.torch": [[13, "module-norse.torch"]], "norse.torch.functional": [[14, "module-norse.torch.functional"], [268, "module-0"], [268, "module-1"], [268, "module-2"], [268, "module-3"], [268, "module-4"], [268, "module-5"], [268, "module-6"], [268, "module-7"], [268, "module-norse.torch.functional"]], "norse.torch.functional.adjoint": [[15, "module-norse.torch.functional.adjoint"]], "norse.torch.functional.adjoint.lif_adjoint": [[16, "module-norse.torch.functional.adjoint.lif_adjoint"]], "norse.torch.functional.adjoint.lif_mc_adjoint": [[17, "module-norse.torch.functional.adjoint.lif_mc_adjoint"]], "norse.torch.functional.adjoint.lif_mc_refrac_adjoint": [[18, "module-norse.torch.functional.adjoint.lif_mc_refrac_adjoint"]], "norse.torch.functional.adjoint.lif_refrac_adjoint": [[19, "module-norse.torch.functional.adjoint.lif_refrac_adjoint"]], "norse.torch.functional.adjoint.lsnn_adjoint": [[20, "module-norse.torch.functional.adjoint.lsnn_adjoint"]], "norse.torch.functional.adjoint.test": [[21, "module-norse.torch.functional.adjoint.test"]], "norse.torch.functional.adjoint.test.test_lif_adjoint": [[22, "module-norse.torch.functional.adjoint.test.test_lif_adjoint"]], "norse.torch.functional.adjoint.test.test_lif_refrac_adjoint": [[23, "module-norse.torch.functional.adjoint.test.test_lif_refrac_adjoint"]], "norse.torch.functional.adjoint.test.test_lsnn_adjoint": [[24, "module-norse.torch.functional.adjoint.test.test_lsnn_adjoint"]], "norse.torch.functional.coba_lif": [[25, "module-norse.torch.functional.coba_lif"], [268, "module-norse.torch.functional.coba_lif"]], "norse.torch.functional.correlation_sensor": [[26, "module-norse.torch.functional.correlation_sensor"]], "norse.torch.functional.decode": [[27, "module-norse.torch.functional.decode"]], "norse.torch.functional.encode": [[28, "module-norse.torch.functional.encode"]], "norse.torch.functional.filter": [[29, "module-norse.torch.functional.filter"]], "norse.torch.functional.heaviside": [[30, "module-norse.torch.functional.heaviside"], [163, "module-norse.torch.functional.heaviside"]], "norse.torch.functional.iaf": [[31, "module-norse.torch.functional.iaf"], [268, "module-norse.torch.functional.iaf"]], "norse.torch.functional.izhikevich": [[32, "module-norse.torch.functional.izhikevich"], [268, "module-norse.torch.functional.izhikevich"]], "norse.torch.functional.leaky_integrator": [[33, "module-norse.torch.functional.leaky_integrator"], [268, "module-norse.torch.functional.leaky_integrator"]], "norse.torch.functional.leaky_integrator_box": [[34, "module-norse.torch.functional.leaky_integrator_box"]], "norse.torch.functional.lif": [[35, "module-norse.torch.functional.lif"]], "norse.torch.functional.lif_adex": [[36, "module-norse.torch.functional.lif_adex"], [268, "module-norse.torch.functional.lif_adex"]], "norse.torch.functional.lif_adex_refrac": [[37, "module-norse.torch.functional.lif_adex_refrac"]], "norse.torch.functional.lif_box": [[38, "module-norse.torch.functional.lif_box"], [268, "module-norse.torch.functional.lif_box"]], "norse.torch.functional.lif_correlation": [[39, "module-norse.torch.functional.lif_correlation"]], "norse.torch.functional.lif_ex": [[40, "module-norse.torch.functional.lif_ex"], [268, "module-norse.torch.functional.lif_ex"]], "norse.torch.functional.lif_mc": [[41, "module-norse.torch.functional.lif_mc"]], "norse.torch.functional.lif_mc_refrac": [[42, "module-norse.torch.functional.lif_mc_refrac"]], "norse.torch.functional.lif_refrac": [[43, "module-norse.torch.functional.lif_refrac"]], "norse.torch.functional.lift": [[44, "module-norse.torch.functional.lift"], [203, "module-norse.torch.functional.lift"]], "norse.torch.functional.logical": [[45, "module-norse.torch.functional.logical"], [268, "module-norse.torch.functional.logical"]], "norse.torch.functional.lsnn": [[46, "module-norse.torch.functional.lsnn"]], "norse.torch.functional.receptive_field": [[47, "module-norse.torch.functional.receptive_field"], [268, "module-norse.torch.functional.receptive_field"]], "norse.torch.functional.regularization": [[48, "module-norse.torch.functional.regularization"], [268, "module-norse.torch.functional.regularization"]], "norse.torch.functional.reset": [[49, "module-norse.torch.functional.reset"]], "norse.torch.functional.spikes_to_times_decoder": [[50, "module-norse.torch.functional.spikes_to_times_decoder"]], "norse.torch.functional.stdp": [[51, "module-norse.torch.functional.stdp"]], "norse.torch.functional.stdp_sensor": [[52, "module-norse.torch.functional.stdp_sensor"]], "norse.torch.functional.superspike": [[53, "module-norse.torch.functional.superspike"]], "norse.torch.functional.test": [[54, "module-norse.torch.functional.test"]], "norse.torch.functional.test.test_coba_lif": [[55, "module-norse.torch.functional.test.test_coba_lif"]], "norse.torch.functional.test.test_decode": [[56, "module-norse.torch.functional.test.test_decode"]], "norse.torch.functional.test.test_encode": [[57, "module-norse.torch.functional.test.test_encode"]], "norse.torch.functional.test.test_exp_filter": [[58, "module-norse.torch.functional.test.test_exp_filter"]], "norse.torch.functional.test.test_heaviside": [[59, "module-norse.torch.functional.test.test_heaviside"]], "norse.torch.functional.test.test_iaf": [[60, "module-norse.torch.functional.test.test_iaf"]], "norse.torch.functional.test.test_izhikevich": [[61, "module-norse.torch.functional.test.test_izhikevich"]], "norse.torch.functional.test.test_leaky_integrator": [[62, "module-norse.torch.functional.test.test_leaky_integrator"]], "norse.torch.functional.test.test_leaky_integrator_box": [[63, "module-norse.torch.functional.test.test_leaky_integrator_box"]], "norse.torch.functional.test.test_lif": [[64, "module-norse.torch.functional.test.test_lif"]], "norse.torch.functional.test.test_lif_adex": [[65, "module-norse.torch.functional.test.test_lif_adex"]], "norse.torch.functional.test.test_lif_adex_refrac": [[66, "module-norse.torch.functional.test.test_lif_adex_refrac"]], "norse.torch.functional.test.test_lif_box": [[67, "module-norse.torch.functional.test.test_lif_box"]], "norse.torch.functional.test.test_lif_ex": [[68, "module-norse.torch.functional.test.test_lif_ex"]], "norse.torch.functional.test.test_lif_mc": [[69, "module-norse.torch.functional.test.test_lif_mc"]], "norse.torch.functional.test.test_lif_mc_refrac": [[70, "module-norse.torch.functional.test.test_lif_mc_refrac"]], "norse.torch.functional.test.test_lif_refrac": [[71, "module-norse.torch.functional.test.test_lif_refrac"]], "norse.torch.functional.test.test_lift": [[72, "module-norse.torch.functional.test.test_lift"]], "norse.torch.functional.test.test_logical": [[73, "module-norse.torch.functional.test.test_logical"]], "norse.torch.functional.test.test_lsnn": [[74, "module-norse.torch.functional.test.test_lsnn"]], "norse.torch.functional.test.test_receptive_field": [[75, "module-norse.torch.functional.test.test_receptive_field"]], "norse.torch.functional.test.test_regularization": [[76, "module-norse.torch.functional.test.test_regularization"]], "norse.torch.functional.test.test_spikes_to_times_decoder": [[77, "module-norse.torch.functional.test.test_spikes_to_times_decoder"]], "norse.torch.functional.test.test_stdp": [[78, "module-norse.torch.functional.test.test_stdp"]], "norse.torch.functional.test.test_stdp_sensor": [[79, "module-norse.torch.functional.test.test_stdp_sensor"]], "norse.torch.functional.test.test_superspike": [[80, "module-norse.torch.functional.test.test_superspike"]], "norse.torch.functional.test.test_threshold": [[81, "module-norse.torch.functional.test.test_threshold"]], "norse.torch.functional.test.test_tsodyks_makram": [[82, "module-norse.torch.functional.test.test_tsodyks_makram"]], "norse.torch.functional.threshold": [[83, "module-norse.torch.functional.threshold"]], "norse.torch.functional.tsodyks_makram": [[84, "module-norse.torch.functional.tsodyks_makram"]], "norse.torch.models": [[85, "module-norse.torch.models"]], "norse.torch.models.conv": [[86, "module-norse.torch.models.conv"]], "norse.torch.models.mobilenet": [[87, "module-norse.torch.models.mobilenet"]], "norse.torch.models.test": [[88, "module-norse.torch.models.test"]], "norse.torch.models.test.test_conv": [[89, "module-norse.torch.models.test.test_conv"]], "norse.torch.models.test.test_mobilenet": [[90, "module-norse.torch.models.test.test_mobilenet"]], "norse.torch.models.test.test_vgg": [[91, "module-norse.torch.models.test.test_vgg"]], "norse.torch.models.vgg": [[92, "module-norse.torch.models.vgg"]], "norse.torch.module": [[93, "module-norse.torch.module"], [267, "module-norse.torch.module"]], "norse.torch.module.coba_lif": [[94, "module-norse.torch.module.coba_lif"], [267, "module-norse.torch.module.coba_lif"]], "norse.torch.module.conv": [[95, "module-norse.torch.module.conv"], [267, "module-norse.torch.module.conv"]], "norse.torch.module.encode": [[96, "module-norse.torch.module.encode"], [267, "module-norse.torch.module.encode"]], "norse.torch.module.exp_filter": [[97, "module-norse.torch.module.exp_filter"]], "norse.torch.module.iaf": [[98, "module-norse.torch.module.iaf"], [267, "module-norse.torch.module.iaf"]], "norse.torch.module.izhikevich": [[99, "module-norse.torch.module.izhikevich"], [267, "module-norse.torch.module.izhikevich"]], "norse.torch.module.leaky_integrator": [[100, "module-norse.torch.module.leaky_integrator"], [267, "module-norse.torch.module.leaky_integrator"]], "norse.torch.module.leaky_integrator_box": [[101, "module-norse.torch.module.leaky_integrator_box"]], "norse.torch.module.lif": [[102, "module-norse.torch.module.lif"], [267, "module-norse.torch.module.lif"]], "norse.torch.module.lif_adex": [[103, "module-norse.torch.module.lif_adex"], [267, "module-norse.torch.module.lif_adex"]], "norse.torch.module.lif_adex_refrac": [[104, "module-norse.torch.module.lif_adex_refrac"]], "norse.torch.module.lif_box": [[105, "module-norse.torch.module.lif_box"], [267, "module-norse.torch.module.lif_box"]], "norse.torch.module.lif_correlation": [[106, "module-norse.torch.module.lif_correlation"]], "norse.torch.module.lif_ex": [[107, "module-norse.torch.module.lif_ex"], [267, "module-norse.torch.module.lif_ex"]], "norse.torch.module.lif_mc": [[108, "module-norse.torch.module.lif_mc"], [267, "module-norse.torch.module.lif_mc"]], "norse.torch.module.lif_mc_refrac": [[109, "module-norse.torch.module.lif_mc_refrac"], [267, "module-norse.torch.module.lif_mc_refrac"]], "norse.torch.module.lif_refrac": [[110, "module-norse.torch.module.lif_refrac"], [267, "module-norse.torch.module.lif_refrac"]], "norse.torch.module.lift": [[111, "module-norse.torch.module.lift"]], "norse.torch.module.lsnn": [[112, "module-norse.torch.module.lsnn"], [267, "module-norse.torch.module.lsnn"]], "norse.torch.module.receptive_field": [[113, "module-norse.torch.module.receptive_field"], [267, "module-norse.torch.module.receptive_field"]], "norse.torch.module.regularization": [[114, "module-norse.torch.module.regularization"]], "norse.torch.module.sequential": [[115, "module-norse.torch.module.sequential"]], "norse.torch.module.snn": [[116, "module-norse.torch.module.snn"]], "norse.torch.module.spikes_to_times_decoder": [[117, "module-norse.torch.module.spikes_to_times_decoder"]], "norse.torch.module.test": [[118, "module-norse.torch.module.test"]], "norse.torch.module.test.test_coba": [[119, "module-norse.torch.module.test.test_coba"]], "norse.torch.module.test.test_conv": [[120, "module-norse.torch.module.test.test_conv"]], "norse.torch.module.test.test_encode": [[121, "module-norse.torch.module.test.test_encode"]], "norse.torch.module.test.test_exp_filter": [[122, "module-norse.torch.module.test.test_exp_filter"]], "norse.torch.module.test.test_iaf": [[123, "module-norse.torch.module.test.test_iaf"]], "norse.torch.module.test.test_izhikevich": [[124, "module-norse.torch.module.test.test_izhikevich"]], "norse.torch.module.test.test_leaky_integrator": [[125, "module-norse.torch.module.test.test_leaky_integrator"]], "norse.torch.module.test.test_leaky_integrator_box": [[126, "module-norse.torch.module.test.test_leaky_integrator_box"]], "norse.torch.module.test.test_lif": [[127, "module-norse.torch.module.test.test_lif"]], "norse.torch.module.test.test_lif_adex": [[128, "module-norse.torch.module.test.test_lif_adex"]], "norse.torch.module.test.test_lif_adex_refrac": [[129, "module-norse.torch.module.test.test_lif_adex_refrac"]], "norse.torch.module.test.test_lif_box": [[130, "module-norse.torch.module.test.test_lif_box"]], "norse.torch.module.test.test_lif_correlation": [[131, "module-norse.torch.module.test.test_lif_correlation"]], "norse.torch.module.test.test_lif_ex": [[132, "module-norse.torch.module.test.test_lif_ex"]], "norse.torch.module.test.test_lif_mc": [[133, "module-norse.torch.module.test.test_lif_mc"]], "norse.torch.module.test.test_lif_mc_refrac": [[134, "module-norse.torch.module.test.test_lif_mc_refrac"]], "norse.torch.module.test.test_lif_refrac": [[135, "module-norse.torch.module.test.test_lif_refrac"]], "norse.torch.module.test.test_lift": [[136, "module-norse.torch.module.test.test_lift"]], "norse.torch.module.test.test_lsnn": [[137, "module-norse.torch.module.test.test_lsnn"]], "norse.torch.module.test.test_receptive_field": [[138, "module-norse.torch.module.test.test_receptive_field"]], "norse.torch.module.test.test_regularization": [[139, "module-norse.torch.module.test.test_regularization"]], "norse.torch.module.test.test_sequential": [[140, "module-norse.torch.module.test.test_sequential"]], "norse.torch.module.test.test_snn": [[141, "module-norse.torch.module.test.test_snn"]], "norse.torch.module.test.test_spikes_to_times_decoder": [[142, "module-norse.torch.module.test.test_spikes_to_times_decoder"]], "norse.torch.module.test.test_training": [[143, "module-norse.torch.module.test.test_training"]], "norse.torch.utils": [[144, "module-norse.torch.utils"]], "norse.torch.utils.clone": [[145, "module-norse.torch.utils.clone"]], "norse.torch.utils.export_nir": [[146, "module-norse.torch.utils.export_nir"]], "norse.torch.utils.import_nir": [[147, "module-norse.torch.utils.import_nir"]], "norse.torch.utils.plot": [[148, "module-norse.torch.utils.plot"]], "norse.torch.utils.plot.plot": [[149, "module-norse.torch.utils.plot.plot"]], "norse.torch.utils.pytree": [[150, "module-norse.torch.utils.pytree"]], "norse.torch.utils.state": [[151, "module-norse.torch.utils.state"]], "norse.torch.utils.tensorboard": [[152, "module-norse.torch.utils.tensorboard"]], "norse.torch.utils.tensorboard.tensorboard": [[153, "module-norse.torch.utils.tensorboard.tensorboard"]], "norse.torch.utils.test": [[154, "module-norse.torch.utils.test"]], "norse.torch.utils.test.test_nir_export": [[155, "module-norse.torch.utils.test.test_nir_export"]], "norse.torch.utils.test.test_nir_import": [[156, "module-norse.torch.utils.test.test_nir_import"]], "norse.torch.utils.test.test_tensorboard": [[157, "module-norse.torch.utils.test.test_tensorboard"]], "norse.utils": [[158, "module-norse.utils"]], "cobaliffeedforwardstate (class in norse.torch.functional.coba_lif)": [[160, "norse.torch.functional.coba_lif.CobaLIFFeedForwardState"]], "__init__() (norse.torch.functional.coba_lif.cobaliffeedforwardstate method)": [[160, "norse.torch.functional.coba_lif.CobaLIFFeedForwardState.__init__"]], "cobalifparameters (class in norse.torch.functional.coba_lif)": [[161, "norse.torch.functional.coba_lif.CobaLIFParameters"]], "__init__() (norse.torch.functional.coba_lif.cobalifparameters method)": [[161, "norse.torch.functional.coba_lif.CobaLIFParameters.__init__"]], "coba_lif_feed_forward_step() (in module norse.torch.functional.coba_lif)": [[162, "norse.torch.functional.coba_lif.coba_lif_feed_forward_step"]], "iaffeedforwardstate (class in norse.torch.functional.iaf)": [[164, "norse.torch.functional.iaf.IAFFeedForwardState"]], "__init__() (norse.torch.functional.iaf.iaffeedforwardstate method)": [[164, "norse.torch.functional.iaf.IAFFeedForwardState.__init__"]], "iafparameters (class in norse.torch.functional.iaf)": [[165, "norse.torch.functional.iaf.IAFParameters"]], "__init__() (norse.torch.functional.iaf.iafparameters method)": [[165, "norse.torch.functional.iaf.IAFParameters.__init__"]], "iaf_feed_forward_step() (in module norse.torch.functional.iaf)": [[166, "norse.torch.functional.iaf.iaf_feed_forward_step"]], "izhikevichparameters (class in norse.torch.functional.izhikevich)": [[167, "norse.torch.functional.izhikevich.IzhikevichParameters"]], "__init__() (norse.torch.functional.izhikevich.izhikevichparameters method)": [[167, "norse.torch.functional.izhikevich.IzhikevichParameters.__init__"]], "izhikevichspikingbehavior (class in norse.torch.functional.izhikevich)": [[168, "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior"]], "__init__() (norse.torch.functional.izhikevich.izhikevichspikingbehavior method)": [[168, "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior.__init__"]], "accomodation (in module norse.torch.functional.izhikevich)": [[169, "norse.torch.functional.izhikevich.accomodation"]], "bistability (in module norse.torch.functional.izhikevich)": [[170, "norse.torch.functional.izhikevich.bistability"]], "class_1_exc (in module norse.torch.functional.izhikevich)": [[171, "norse.torch.functional.izhikevich.class_1_exc"]], "class_2_exc (in module norse.torch.functional.izhikevich)": [[172, "norse.torch.functional.izhikevich.class_2_exc"]], "dap (in module norse.torch.functional.izhikevich)": [[173, "norse.torch.functional.izhikevich.dap"]], "inhibition_induced_bursting (in module norse.torch.functional.izhikevich)": [[174, "norse.torch.functional.izhikevich.inhibition_induced_bursting"]], "inhibition_induced_spiking (in module norse.torch.functional.izhikevich)": [[175, "norse.torch.functional.izhikevich.inhibition_induced_spiking"]], "integrator (in module norse.torch.functional.izhikevich)": [[176, "norse.torch.functional.izhikevich.integrator"]], "izhikevich_feed_forward_step() (in module norse.torch.functional.izhikevich)": [[177, "norse.torch.functional.izhikevich.izhikevich_feed_forward_step"]], "mixed_mode (in module norse.torch.functional.izhikevich)": [[178, "norse.torch.functional.izhikevich.mixed_mode"]], "phasic_bursting (in module norse.torch.functional.izhikevich)": [[179, "norse.torch.functional.izhikevich.phasic_bursting"]], "phasic_spiking (in module norse.torch.functional.izhikevich)": [[180, "norse.torch.functional.izhikevich.phasic_spiking"]], "rebound_burst (in module norse.torch.functional.izhikevich)": [[181, "norse.torch.functional.izhikevich.rebound_burst"]], "rebound_spike (in module norse.torch.functional.izhikevich)": [[182, "norse.torch.functional.izhikevich.rebound_spike"]], "resonator (in module norse.torch.functional.izhikevich)": [[183, "norse.torch.functional.izhikevich.resonator"]], "spike_frequency_adaptation (in module norse.torch.functional.izhikevich)": [[184, "norse.torch.functional.izhikevich.spike_frequency_adaptation"]], "spike_latency (in module norse.torch.functional.izhikevich)": [[185, "norse.torch.functional.izhikevich.spike_latency"]], "subthreshold_oscillation (in module norse.torch.functional.izhikevich)": [[186, "norse.torch.functional.izhikevich.subthreshold_oscillation"]], "tonic_bursting (in module norse.torch.functional.izhikevich)": [[187, "norse.torch.functional.izhikevich.tonic_bursting"]], "tonic_spiking (in module norse.torch.functional.izhikevich)": [[188, "norse.torch.functional.izhikevich.tonic_spiking"]], "liparameters (class in norse.torch.functional.leaky_integrator)": [[189, "norse.torch.functional.leaky_integrator.LIParameters"]], "__init__() (norse.torch.functional.leaky_integrator.liparameters method)": [[189, "norse.torch.functional.leaky_integrator.LIParameters.__init__"]], "listate (class in norse.torch.functional.leaky_integrator)": [[190, "norse.torch.functional.leaky_integrator.LIState"]], "__init__() (norse.torch.functional.leaky_integrator.listate method)": [[190, "norse.torch.functional.leaky_integrator.LIState.__init__"]], "li_feed_forward_step() (in module norse.torch.functional.leaky_integrator)": [[191, "norse.torch.functional.leaky_integrator.li_feed_forward_step"]], "lifadexfeedforwardstate (class in norse.torch.functional.lif_adex)": [[192, "norse.torch.functional.lif_adex.LIFAdExFeedForwardState"]], "__init__() (norse.torch.functional.lif_adex.lifadexfeedforwardstate method)": [[192, "norse.torch.functional.lif_adex.LIFAdExFeedForwardState.__init__"]], "lifadexparameters (class in norse.torch.functional.lif_adex)": [[193, "norse.torch.functional.lif_adex.LIFAdExParameters"]], "__init__() (norse.torch.functional.lif_adex.lifadexparameters method)": [[193, "norse.torch.functional.lif_adex.LIFAdExParameters.__init__"]], "lif_adex_current_encoder() (in module norse.torch.functional.lif_adex)": [[194, "norse.torch.functional.lif_adex.lif_adex_current_encoder"]], "lif_adex_feed_forward_step() (in module norse.torch.functional.lif_adex)": [[195, "norse.torch.functional.lif_adex.lif_adex_feed_forward_step"]], "lifboxfeedforwardstate (class in norse.torch.functional.lif_box)": [[196, "norse.torch.functional.lif_box.LIFBoxFeedForwardState"]], "__init__() (norse.torch.functional.lif_box.lifboxfeedforwardstate method)": [[196, "norse.torch.functional.lif_box.LIFBoxFeedForwardState.__init__"]], "lifboxparameters (class in norse.torch.functional.lif_box)": [[197, "norse.torch.functional.lif_box.LIFBoxParameters"]], "__init__() (norse.torch.functional.lif_box.lifboxparameters method)": [[197, "norse.torch.functional.lif_box.LIFBoxParameters.__init__"]], "lif_box_feed_forward_step() (in module norse.torch.functional.lif_box)": [[198, "norse.torch.functional.lif_box.lif_box_feed_forward_step"]], "lifexfeedforwardstate (class in norse.torch.functional.lif_ex)": [[199, "norse.torch.functional.lif_ex.LIFExFeedForwardState"]], "__init__() (norse.torch.functional.lif_ex.lifexfeedforwardstate method)": [[199, "norse.torch.functional.lif_ex.LIFExFeedForwardState.__init__"]], "lifexparameters (class in norse.torch.functional.lif_ex)": [[200, "norse.torch.functional.lif_ex.LIFExParameters"]], "__init__() (norse.torch.functional.lif_ex.lifexparameters method)": [[200, "norse.torch.functional.lif_ex.LIFExParameters.__init__"]], "lif_ex_current_encoder() (in module norse.torch.functional.lif_ex)": [[201, "norse.torch.functional.lif_ex.lif_ex_current_encoder"]], "lif_ex_feed_forward_step() (in module norse.torch.functional.lif_ex)": [[202, "norse.torch.functional.lif_ex.lif_ex_feed_forward_step"]], "logical_and() (in module norse.torch.functional.logical)": [[204, "norse.torch.functional.logical.logical_and"]], "logical_or() (in module norse.torch.functional.logical)": [[205, "norse.torch.functional.logical.logical_or"]], "logical_xor() (in module norse.torch.functional.logical)": [[206, "norse.torch.functional.logical.logical_xor"]], "muller_c() (in module norse.torch.functional.logical)": [[207, "norse.torch.functional.logical.muller_c"]], "posedge_detector() (in module norse.torch.functional.logical)": [[208, "norse.torch.functional.logical.posedge_detector"]], "gaussian_kernel() (in module norse.torch.functional.receptive_field)": [[209, "norse.torch.functional.receptive_field.gaussian_kernel"]], "spatial_receptive_field() (in module norse.torch.functional.receptive_field)": [[210, "norse.torch.functional.receptive_field.spatial_receptive_field"]], "spatial_receptive_fields_with_derivatives() (in module norse.torch.functional.receptive_field)": [[211, "norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives"]], "temporal_scale_distribution() (in module norse.torch.functional.receptive_field)": [[212, "norse.torch.functional.receptive_field.temporal_scale_distribution"]], "regularize_step() (in module norse.torch.functional.regularization)": [[213, "norse.torch.functional.regularization.regularize_step"]], "spike_accumulator() (in module norse.torch.functional.regularization)": [[214, "norse.torch.functional.regularization.spike_accumulator"]], "voltage_accumulator() (in module norse.torch.functional.regularization)": [[215, "norse.torch.functional.regularization.voltage_accumulator"]], "cobalifcell (class in norse.torch.module.coba_lif)": [[216, "norse.torch.module.coba_lif.CobaLIFCell"]], "__init__() (norse.torch.module.coba_lif.cobalifcell method)": [[216, "norse.torch.module.coba_lif.CobaLIFCell.__init__"]], "lconv2d (class in norse.torch.module.conv)": [[217, "norse.torch.module.conv.LConv2d"]], "__init__() (norse.torch.module.conv.lconv2d method)": [[217, "norse.torch.module.conv.LConv2d.__init__"]], "constantcurrentlifencoder (class in norse.torch.module.encode)": [[218, "norse.torch.module.encode.ConstantCurrentLIFEncoder"]], "__init__() (norse.torch.module.encode.constantcurrentlifencoder method)": [[218, "norse.torch.module.encode.ConstantCurrentLIFEncoder.__init__"]], "poissonencoder (class in norse.torch.module.encode)": [[219, "norse.torch.module.encode.PoissonEncoder"]], "__init__() (norse.torch.module.encode.poissonencoder method)": [[219, "norse.torch.module.encode.PoissonEncoder.__init__"]], "poissonencoderstep (class in norse.torch.module.encode)": [[220, "norse.torch.module.encode.PoissonEncoderStep"]], "__init__() (norse.torch.module.encode.poissonencoderstep method)": [[220, "norse.torch.module.encode.PoissonEncoderStep.__init__"]], "populationencoder (class in norse.torch.module.encode)": [[221, "norse.torch.module.encode.PopulationEncoder"]], "__init__() (norse.torch.module.encode.populationencoder method)": [[221, "norse.torch.module.encode.PopulationEncoder.__init__"]], "signedpoissonencoder (class in norse.torch.module.encode)": [[222, "norse.torch.module.encode.SignedPoissonEncoder"]], "__init__() (norse.torch.module.encode.signedpoissonencoder method)": [[222, "norse.torch.module.encode.SignedPoissonEncoder.__init__"]], "spikelatencyencoder (class in norse.torch.module.encode)": [[223, "norse.torch.module.encode.SpikeLatencyEncoder"]], "__init__() (norse.torch.module.encode.spikelatencyencoder method)": [[223, "norse.torch.module.encode.SpikeLatencyEncoder.__init__"]], "spikelatencylifencoder (class in norse.torch.module.encode)": [[224, "norse.torch.module.encode.SpikeLatencyLIFEncoder"]], "__init__() (norse.torch.module.encode.spikelatencylifencoder method)": [[224, "norse.torch.module.encode.SpikeLatencyLIFEncoder.__init__"]], "iafcell (class in norse.torch.module.iaf)": [[225, "norse.torch.module.iaf.IAFCell"]], "__init__() (norse.torch.module.iaf.iafcell method)": [[225, "norse.torch.module.iaf.IAFCell.__init__"]], "iaffeedforwardstate (class in norse.torch.module.iaf)": [[226, "norse.torch.module.iaf.IAFFeedForwardState"]], "__init__() (norse.torch.module.iaf.iaffeedforwardstate method)": [[226, "norse.torch.module.iaf.IAFFeedForwardState.__init__"]], "iafparameters (class in norse.torch.module.iaf)": [[227, "norse.torch.module.iaf.IAFParameters"]], "__init__() (norse.torch.module.iaf.iafparameters method)": [[227, "norse.torch.module.iaf.IAFParameters.__init__"]], "izhikevich (class in norse.torch.module.izhikevich)": [[228, "norse.torch.module.izhikevich.Izhikevich"]], "__init__() (norse.torch.module.izhikevich.izhikevich method)": [[228, "norse.torch.module.izhikevich.Izhikevich.__init__"]], "izhikevichcell (class in norse.torch.module.izhikevich)": [[229, "norse.torch.module.izhikevich.IzhikevichCell"]], "__init__() (norse.torch.module.izhikevich.izhikevichcell method)": [[229, "norse.torch.module.izhikevich.IzhikevichCell.__init__"]], "izhikevichrecurrent (class in norse.torch.module.izhikevich)": [[230, "norse.torch.module.izhikevich.IzhikevichRecurrent"]], "__init__() (norse.torch.module.izhikevich.izhikevichrecurrent method)": [[230, "norse.torch.module.izhikevich.IzhikevichRecurrent.__init__"]], "izhikevichrecurrentcell (class in norse.torch.module.izhikevich)": [[231, "norse.torch.module.izhikevich.IzhikevichRecurrentCell"]], "__init__() (norse.torch.module.izhikevich.izhikevichrecurrentcell method)": [[231, "norse.torch.module.izhikevich.IzhikevichRecurrentCell.__init__"]], "izhikevichspikingbehavior (class in norse.torch.module.izhikevich)": [[232, "norse.torch.module.izhikevich.IzhikevichSpikingBehavior"]], "__init__() (norse.torch.module.izhikevich.izhikevichspikingbehavior method)": [[232, "norse.torch.module.izhikevich.IzhikevichSpikingBehavior.__init__"]], "izhikevichstate (class in norse.torch.module.izhikevich)": [[233, "norse.torch.module.izhikevich.IzhikevichState"]], "__init__() (norse.torch.module.izhikevich.izhikevichstate method)": [[233, "norse.torch.module.izhikevich.IzhikevichState.__init__"]], "li (class in norse.torch.module.leaky_integrator)": [[234, "norse.torch.module.leaky_integrator.LI"]], "__init__() (norse.torch.module.leaky_integrator.li method)": [[234, "norse.torch.module.leaky_integrator.LI.__init__"]], "licell (class in norse.torch.module.leaky_integrator)": [[235, "norse.torch.module.leaky_integrator.LICell"]], "__init__() (norse.torch.module.leaky_integrator.licell method)": [[235, "norse.torch.module.leaky_integrator.LICell.__init__"]], "lilinearcell (class in norse.torch.module.leaky_integrator)": [[236, "norse.torch.module.leaky_integrator.LILinearCell"]], "__init__() (norse.torch.module.leaky_integrator.lilinearcell method)": [[236, "norse.torch.module.leaky_integrator.LILinearCell.__init__"]], "liparameters (class in norse.torch.module.leaky_integrator)": [[237, "norse.torch.module.leaky_integrator.LIParameters"]], "__init__() (norse.torch.module.leaky_integrator.liparameters method)": [[237, "norse.torch.module.leaky_integrator.LIParameters.__init__"]], "listate (class in norse.torch.module.leaky_integrator)": [[238, "norse.torch.module.leaky_integrator.LIState"]], "__init__() (norse.torch.module.leaky_integrator.listate method)": [[238, "norse.torch.module.leaky_integrator.LIState.__init__"]], "lif (class in norse.torch.module.lif)": [[239, "norse.torch.module.lif.LIF"]], "__init__() (norse.torch.module.lif.lif method)": [[239, "norse.torch.module.lif.LIF.__init__"]], "lifcell (class in norse.torch.module.lif)": [[240, "norse.torch.module.lif.LIFCell"]], "__init__() (norse.torch.module.lif.lifcell method)": [[240, "norse.torch.module.lif.LIFCell.__init__"]], "lifparameters (class in norse.torch.module.lif)": [[241, "norse.torch.module.lif.LIFParameters"]], "__init__() (norse.torch.module.lif.lifparameters method)": [[241, "norse.torch.module.lif.LIFParameters.__init__"]], "lifrecurrent (class in norse.torch.module.lif)": [[242, "norse.torch.module.lif.LIFRecurrent"]], "__init__() (norse.torch.module.lif.lifrecurrent method)": [[242, "norse.torch.module.lif.LIFRecurrent.__init__"]], "lifrecurrentcell (class in norse.torch.module.lif)": [[243, "norse.torch.module.lif.LIFRecurrentCell"]], "__init__() (norse.torch.module.lif.lifrecurrentcell method)": [[243, "norse.torch.module.lif.LIFRecurrentCell.__init__"]], "lifstate (class in norse.torch.module.lif)": [[244, "norse.torch.module.lif.LIFState"]], "__init__() (norse.torch.module.lif.lifstate method)": [[244, "norse.torch.module.lif.LIFState.__init__"]], "lifadex (class in norse.torch.module.lif_adex)": [[245, "norse.torch.module.lif_adex.LIFAdEx"]], "__init__() (norse.torch.module.lif_adex.lifadex method)": [[245, "norse.torch.module.lif_adex.LIFAdEx.__init__"]], "lifadexcell (class in norse.torch.module.lif_adex)": [[246, "norse.torch.module.lif_adex.LIFAdExCell"]], "__init__() (norse.torch.module.lif_adex.lifadexcell method)": [[246, "norse.torch.module.lif_adex.LIFAdExCell.__init__"]], "lifadexrecurrent (class in norse.torch.module.lif_adex)": [[247, "norse.torch.module.lif_adex.LIFAdExRecurrent"]], "__init__() (norse.torch.module.lif_adex.lifadexrecurrent method)": [[247, "norse.torch.module.lif_adex.LIFAdExRecurrent.__init__"]], "lifadexrecurrentcell (class in norse.torch.module.lif_adex)": [[248, "norse.torch.module.lif_adex.LIFAdExRecurrentCell"]], "__init__() (norse.torch.module.lif_adex.lifadexrecurrentcell method)": [[248, "norse.torch.module.lif_adex.LIFAdExRecurrentCell.__init__"]], "lifboxcell (class in norse.torch.module.lif_box)": [[249, "norse.torch.module.lif_box.LIFBoxCell"]], "__init__() (norse.torch.module.lif_box.lifboxcell method)": [[249, "norse.torch.module.lif_box.LIFBoxCell.__init__"]], "lifboxfeedforwardstate (class in norse.torch.module.lif_box)": [[250, "norse.torch.module.lif_box.LIFBoxFeedForwardState"]], "__init__() (norse.torch.module.lif_box.lifboxfeedforwardstate method)": [[250, "norse.torch.module.lif_box.LIFBoxFeedForwardState.__init__"]], "lifboxparameters (class in norse.torch.module.lif_box)": [[251, "norse.torch.module.lif_box.LIFBoxParameters"]], "__init__() (norse.torch.module.lif_box.lifboxparameters method)": [[251, "norse.torch.module.lif_box.LIFBoxParameters.__init__"]], "lifex (class in norse.torch.module.lif_ex)": [[252, "norse.torch.module.lif_ex.LIFEx"]], "__init__() (norse.torch.module.lif_ex.lifex method)": [[252, "norse.torch.module.lif_ex.LIFEx.__init__"]], "lifexcell (class in norse.torch.module.lif_ex)": [[253, "norse.torch.module.lif_ex.LIFExCell"]], "__init__() (norse.torch.module.lif_ex.lifexcell method)": [[253, "norse.torch.module.lif_ex.LIFExCell.__init__"]], "lifexrecurrent (class in norse.torch.module.lif_ex)": [[254, "norse.torch.module.lif_ex.LIFExRecurrent"]], "__init__() (norse.torch.module.lif_ex.lifexrecurrent method)": [[254, "norse.torch.module.lif_ex.LIFExRecurrent.__init__"]], "lifexrecurrentcell (class in norse.torch.module.lif_ex)": [[255, "norse.torch.module.lif_ex.LIFExRecurrentCell"]], "__init__() (norse.torch.module.lif_ex.lifexrecurrentcell method)": [[255, "norse.torch.module.lif_ex.LIFExRecurrentCell.__init__"]], "lifmcrecurrentcell (class in norse.torch.module.lif_mc)": [[256, "norse.torch.module.lif_mc.LIFMCRecurrentCell"]], "__init__() (norse.torch.module.lif_mc.lifmcrecurrentcell method)": [[256, "norse.torch.module.lif_mc.LIFMCRecurrentCell.__init__"]], "lifmcrefracrecurrentcell (class in norse.torch.module.lif_mc_refrac)": [[257, "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell"]], "__init__() (norse.torch.module.lif_mc_refrac.lifmcrefracrecurrentcell method)": [[257, "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell.__init__"]], "lifrefraccell (class in norse.torch.module.lif_refrac)": [[258, "norse.torch.module.lif_refrac.LIFRefracCell"]], "__init__() (norse.torch.module.lif_refrac.lifrefraccell method)": [[258, "norse.torch.module.lif_refrac.LIFRefracCell.__init__"]], "lifrefracrecurrentcell (class in norse.torch.module.lif_refrac)": [[259, "norse.torch.module.lif_refrac.LIFRefracRecurrentCell"]], "__init__() (norse.torch.module.lif_refrac.lifrefracrecurrentcell method)": [[259, "norse.torch.module.lif_refrac.LIFRefracRecurrentCell.__init__"]], "lsnn (class in norse.torch.module.lsnn)": [[260, "norse.torch.module.lsnn.LSNN"]], "__init__() (norse.torch.module.lsnn.lsnn method)": [[260, "norse.torch.module.lsnn.LSNN.__init__"]], "lsnncell (class in norse.torch.module.lsnn)": [[261, "norse.torch.module.lsnn.LSNNCell"]], "__init__() (norse.torch.module.lsnn.lsnncell method)": [[261, "norse.torch.module.lsnn.LSNNCell.__init__"]], "lsnnrecurrent (class in norse.torch.module.lsnn)": [[262, "norse.torch.module.lsnn.LSNNRecurrent"]], "__init__() (norse.torch.module.lsnn.lsnnrecurrent method)": [[262, "norse.torch.module.lsnn.LSNNRecurrent.__init__"]], "lsnnrecurrentcell (class in norse.torch.module.lsnn)": [[263, "norse.torch.module.lsnn.LSNNRecurrentCell"]], "__init__() (norse.torch.module.lsnn.lsnnrecurrentcell method)": [[263, "norse.torch.module.lsnn.LSNNRecurrentCell.__init__"]], "spatialreceptivefield2d (class in norse.torch.module.receptive_field)": [[264, "norse.torch.module.receptive_field.SpatialReceptiveField2d"]], "__init__() (norse.torch.module.receptive_field.spatialreceptivefield2d method)": [[264, "norse.torch.module.receptive_field.SpatialReceptiveField2d.__init__"]], "temporalreceptivefield (class in norse.torch.module.receptive_field)": [[265, "norse.torch.module.receptive_field.TemporalReceptiveField"]], "__init__() (norse.torch.module.receptive_field.temporalreceptivefield method)": [[265, "norse.torch.module.receptive_field.TemporalReceptiveField.__init__"]]}})