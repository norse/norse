Search.setIndex({"alltitles": {"1. Getting started": [[267, null]], "2. Using Norse": [[267, "using-norse"]], "2.1. Installation": [[267, "installation"]], "2.2. Running examples": [[267, "running-examples"]], "2.3. Example: Spiking convolutional classifier": [[267, "example-spiking-convolutional-classifier"]], "2.4. Example: Long short-term spiking neural networks": [[267, "example-long-short-term-spiking-neural-networks"]], "3. Why Norse?": [[267, "why-norse"]], "4. Similar work": [[267, "similar-work"]], "5. Contributing": [[267, "contributing"]], "6. Credits": [[267, "credits"]], "7. Citation": [[267, "citation"]], "8. License": [[267, "license"]], "About Norse": [[270, null]], "Accelerating Norse models with .to": [[272, "accelerating-norse-models-with-to"]], "Accelerating Norse nested models": [[272, "accelerating-norse-nested-models"]], "Acknowledgements": [[270, "acknowledgements"]], "Applying neuron models": [[276, "applying-neuron-models"]], "Architecture of Norse": [[271, "architecture-of-norse"]], "Bonus: Applying neuron models with predefined state": [[276, "bonus-applying-neuron-models-with-predefined-state"]], "Building Models in Norse": [[276, "building-models-in-norse"]], "Cartpole": [[277, "cartpole"]], "Cifar10": [[277, "cifar10"]], "Common problems": [[273, "common-problems"]], "Complete API": [[160, null]], "Computational graphs for neuron models": [[271, "computational-graphs-for-neuron-models"]], "Conclusions": [[274, "conclusions"]], "Contact": [[270, "contact"]], "Containers": [[268, "module-norse.torch.module"]], "Convolutions": [[268, "module-norse.torch.module.conv"]], "Correlation experiment": [[277, "correlation-experiment"]], "Dataset Loading": [[274, "dataset-loading"]], "Deciding on learning/plasiticy models": [[278, "deciding-on-learning-plasiticy-models"]], "Deciding on neuron models": [[278, "deciding-on-neuron-models"]], "Defining a Network of LIF Neurons with varying membrane time-constants": [[274, "defining-a-network-of-lif-neurons-with-varying-membrane-time-constants"]], "Defining our first neuron model": [[275, "defining-our-first-neuron-model"]], "Defining our input spikes": [[275, "defining-our-input-spikes"]], "Development Documentation": [[271, null]], "Encoding": [[268, "module-norse.torch.module.encode"], [269, "module-norse.torch.functional"]], "Events and action potentials": [[278, "events-and-action-potentials"]], "Example implementation": [[271, "example-implementation"]], "Examples of deep learning problems in Norse": [[278, "examples-of-deep-learning-problems-in-norse"]], "GPU acceleration in Docker": [[273, "gpu-acceleration-in-docker"]], "Hardware acceleration": [[272, null]], "Import shortcuts": [[271, "import-shortcuts"]], "ImportError: \u2026 /norse_op.so: undefined symbol: ZN2at5addmmERKNS_6TensorES2_S2_RKN3c106ScalarES6": [[273, null]], "Installation troubleshooting": [[273, "installation-troubleshooting"]], "Installing Norse": [[273, null], [273, "id1"]], "Installing from Conda": [[273, "installing-from-conda"]], "Installing from source": [[273, "installing-from-source"]], "Installing with Docker": [[273, "installing-with-docker"]], "Installing with pip": [[273, "installing-with-pip"]], "Integrate-and-fire": [[268, "integrate-and-fire"]], "Integrate-and-fire (IAF)": [[269, "module-norse.torch.functional.iaf"]], "Introduction to spiking systems": [[275, null]], "Izhikevich": [[268, "module-norse.torch.module.izhikevich"], [269, "module-norse.torch.functional.izhikevich"]], "LIF, adaptive exponential": [[268, "module-norse.torch.module.lif_adex"], [269, "module-norse.torch.functional.lif_adex"]], "LIF, box model": [[268, "module-norse.torch.module.lif_box"], [269, "lif-box-model"]], "LIF, conductance based": [[268, "module-norse.torch.module.coba_lif"], [269, "module-norse.torch.functional.coba_lif"]], "LIF, exponential": [[268, "module-norse.torch.module.lif_ex"], [269, "module-norse.torch.functional.lif_ex"]], "LIF, multicompartmental": [[268, "module-norse.torch.module.lif_mc"]], "LIF, multicompartmental (MC)": [[269, "module-3"]], "LIF, multicompartmental with refraction": [[268, "module-norse.torch.module.lif_mc_refrac"]], "LIF, refractory": [[268, "module-norse.torch.module.lif_refrac"], [269, "module-4"]], "Leaky integrate-and-fire (LIF)": [[268, "module-norse.torch.module.lif"], [269, "module-2"]], "Leaky integrator": [[268, "module-norse.torch.module.leaky_integrator"], [269, "module-norse.torch.functional.leaky_integrator"]], "Logical": [[269, "module-norse.torch.functional.logical"]], "Long short-term memory (LSNN)": [[268, "module-norse.torch.module.lsnn"], [269, "module-5"]], "MNIST": [[277, "mnist"]], "MNIST in PyTorch Lightning": [[277, "mnist-in-pytorch-lightning"]], "Memory task": [[277, "memory-task"]], "Model Defitinition": [[274, "model-defitinition"]], "Model Evaluation": [[274, "model-evaluation"]], "Neuron dynamics and time": [[278, "neuron-dynamics-and-time"]], "Neuron models": [[268, "neuron-models"], [269, "neuron-models"]], "Neurons and neuron state": [[278, "neurons-and-neuron-state"]], "Norse workflow": [[278, "norse-workflow"]], "Optional dependencies": [[273, "optional-dependencies"]], "Our first Spiking Neuron": [[275, "our-first-spiking-neuron"]], "Parameter learning in Spiking Neural Networks": [[274, null]], "Parameters": [[277, "parameters"]], "Plasticity models": [[269, "plasticity-models"]], "Quickstart": [[276, null]], "Receptive fields": [[268, "module-norse.torch.module.receptive_field"], [269, "module-norse.torch.functional.receptive_field"]], "Regularization": [[269, "module-norse.torch.functional.regularization"]], "Required dependencies": [[273, "required-dependencies"]], "Running Norse notebooks with Docker": [[273, "running-norse-notebooks-with-docker"]], "Running Tasks": [[277, null]], "Simulating neurons": [[275, "simulating-neurons"]], "Speech Command recognition task": [[277, "speech-command-recognition-task"]], "Spike-time dependent plasticity (STDP)": [[269, "module-6"]], "Temporal operations": [[269, "module-1"]], "Terminology": [[278, "terminology"]], "Threshold functions": [[269, "module-0"]], "Toy Example: Training a small recurrent SNN on MNIST": [[274, "toy-example-training-a-small-recurrent-snn-on-mnist"]], "Training and Test loop": [[274, "training-and-test-loop"]], "Tsodyks-Markram timing-dependent plasticity (TDP)": [[269, "module-7"]], "UnsatisfiableError: The following specifications were found to be incompatible with each other": [[273, null]], "Visualizing neuron voltage": [[275, "visualizing-neuron-voltage"]], "Working with Norse": [[278, null]], "norse": [[0, null]], "norse.benchmark": [[1, null]], "norse.benchmark.benchmark": [[2, null]], "norse.benchmark.main": [[3, null]], "norse.benchmark.norse_lif": [[4, null]], "norse.benchmark.plot": [[5, null]], "norse.dataset": [[6, null]], "norse.dataset.memory": [[7, null]], "norse.dataset.spiking_heidelberg": [[8, null]], "norse.task": [[9, null]], "norse.task.correlation_experiment": [[10, null]], "norse.task.mnist": [[11, null]], "norse.task.mnist_pl": [[12, null]], "norse.torch": [[13, null], [268, null], [268, "id1"]], "norse.torch.functional": [[14, null], [269, null], [269, "id1"]], "norse.torch.functional.adjoint": [[15, null]], "norse.torch.functional.adjoint.lif_adjoint": [[16, null]], "norse.torch.functional.adjoint.lif_mc_adjoint": [[17, null]], "norse.torch.functional.adjoint.lif_mc_refrac_adjoint": [[18, null]], "norse.torch.functional.adjoint.lif_refrac_adjoint": [[19, null]], "norse.torch.functional.adjoint.lsnn_adjoint": [[20, null]], "norse.torch.functional.adjoint.test": [[21, null]], "norse.torch.functional.adjoint.test.test_lif_adjoint": [[22, null]], "norse.torch.functional.adjoint.test.test_lif_refrac_adjoint": [[23, null]], "norse.torch.functional.adjoint.test.test_lsnn_adjoint": [[24, null]], "norse.torch.functional.coba_lif": [[25, null]], "norse.torch.functional.coba_lif.CobaLIFFeedForwardState": [[161, null]], "norse.torch.functional.coba_lif.CobaLIFParameters": [[162, null]], "norse.torch.functional.coba_lif.coba_lif_feed_forward_step": [[163, null]], "norse.torch.functional.correlation_sensor": [[26, null]], "norse.torch.functional.decode": [[27, null]], "norse.torch.functional.encode": [[28, null]], "norse.torch.functional.filter": [[29, null]], "norse.torch.functional.heaviside": [[30, null], [164, null]], "norse.torch.functional.iaf": [[31, null]], "norse.torch.functional.iaf.IAFFeedForwardState": [[165, null]], "norse.torch.functional.iaf.IAFParameters": [[166, null]], "norse.torch.functional.iaf.iaf_feed_forward_step": [[167, null]], "norse.torch.functional.izhikevich": [[32, null]], "norse.torch.functional.izhikevich.IzhikevichParameters": [[168, null]], "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior": [[169, null]], "norse.torch.functional.izhikevich.accomodation": [[170, null]], "norse.torch.functional.izhikevich.bistability": [[171, null]], "norse.torch.functional.izhikevich.class_1_exc": [[172, null]], "norse.torch.functional.izhikevich.class_2_exc": [[173, null]], "norse.torch.functional.izhikevich.dap": [[174, null]], "norse.torch.functional.izhikevich.inhibition_induced_bursting": [[175, null]], "norse.torch.functional.izhikevich.inhibition_induced_spiking": [[176, null]], "norse.torch.functional.izhikevich.integrator": [[177, null]], "norse.torch.functional.izhikevich.izhikevich_feed_forward_step": [[178, null]], "norse.torch.functional.izhikevich.mixed_mode": [[179, null]], "norse.torch.functional.izhikevich.phasic_bursting": [[180, null]], "norse.torch.functional.izhikevich.phasic_spiking": [[181, null]], "norse.torch.functional.izhikevich.rebound_burst": [[182, null]], "norse.torch.functional.izhikevich.rebound_spike": [[183, null]], "norse.torch.functional.izhikevich.resonator": [[184, null]], "norse.torch.functional.izhikevich.spike_frequency_adaptation": [[185, null]], "norse.torch.functional.izhikevich.spike_latency": [[186, null]], "norse.torch.functional.izhikevich.subthreshold_oscillation": [[187, null]], "norse.torch.functional.izhikevich.tonic_bursting": [[188, null]], "norse.torch.functional.izhikevich.tonic_spiking": [[189, null]], "norse.torch.functional.leaky_integrator": [[33, null]], "norse.torch.functional.leaky_integrator.LIParameters": [[190, null]], "norse.torch.functional.leaky_integrator.LIState": [[191, null]], "norse.torch.functional.leaky_integrator.li_feed_forward_step": [[192, null]], "norse.torch.functional.leaky_integrator_box": [[34, null]], "norse.torch.functional.lif": [[35, null]], "norse.torch.functional.lif_adex": [[36, null]], "norse.torch.functional.lif_adex.LIFAdExFeedForwardState": [[193, null]], "norse.torch.functional.lif_adex.LIFAdExParameters": [[194, null]], "norse.torch.functional.lif_adex.lif_adex_current_encoder": [[195, null]], "norse.torch.functional.lif_adex.lif_adex_feed_forward_step": [[196, null]], "norse.torch.functional.lif_adex_refrac": [[37, null]], "norse.torch.functional.lif_box": [[38, null]], "norse.torch.functional.lif_box.LIFBoxFeedForwardState": [[197, null]], "norse.torch.functional.lif_box.LIFBoxParameters": [[198, null]], "norse.torch.functional.lif_box.lif_box_feed_forward_step": [[199, null]], "norse.torch.functional.lif_correlation": [[39, null]], "norse.torch.functional.lif_ex": [[40, null]], "norse.torch.functional.lif_ex.LIFExFeedForwardState": [[200, null]], "norse.torch.functional.lif_ex.LIFExParameters": [[201, null]], "norse.torch.functional.lif_ex.lif_ex_current_encoder": [[202, null]], "norse.torch.functional.lif_ex.lif_ex_feed_forward_step": [[203, null]], "norse.torch.functional.lif_mc": [[41, null]], "norse.torch.functional.lif_mc_refrac": [[42, null]], "norse.torch.functional.lif_refrac": [[43, null]], "norse.torch.functional.lift": [[44, null], [204, null]], "norse.torch.functional.logical": [[45, null]], "norse.torch.functional.logical.logical_and": [[205, null]], "norse.torch.functional.logical.logical_or": [[206, null]], "norse.torch.functional.logical.logical_xor": [[207, null]], "norse.torch.functional.logical.muller_c": [[208, null]], "norse.torch.functional.logical.posedge_detector": [[209, null]], "norse.torch.functional.lsnn": [[46, null]], "norse.torch.functional.parameter": [[47, null]], "norse.torch.functional.receptive_field": [[48, null]], "norse.torch.functional.receptive_field.gaussian_kernel": [[210, null]], "norse.torch.functional.receptive_field.spatial_receptive_field": [[211, null]], "norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives": [[212, null]], "norse.torch.functional.receptive_field.temporal_scale_distribution": [[213, null]], "norse.torch.functional.regularization": [[49, null]], "norse.torch.functional.regularization.regularize_step": [[214, null]], "norse.torch.functional.regularization.spike_accumulator": [[215, null]], "norse.torch.functional.regularization.voltage_accumulator": [[216, null]], "norse.torch.functional.reset": [[50, null]], "norse.torch.functional.spikes_to_times_decoder": [[51, null]], "norse.torch.functional.stdp": [[52, null]], "norse.torch.functional.stdp_sensor": [[53, null]], "norse.torch.functional.superspike": [[54, null]], "norse.torch.functional.test": [[55, null]], "norse.torch.functional.test.test_coba_lif": [[56, null]], "norse.torch.functional.test.test_decode": [[57, null]], "norse.torch.functional.test.test_encode": [[58, null]], "norse.torch.functional.test.test_exp_filter": [[59, null]], "norse.torch.functional.test.test_heaviside": [[60, null]], "norse.torch.functional.test.test_iaf": [[61, null]], "norse.torch.functional.test.test_izhikevich": [[62, null]], "norse.torch.functional.test.test_leaky_integrator": [[63, null]], "norse.torch.functional.test.test_leaky_integrator_box": [[64, null]], "norse.torch.functional.test.test_lif": [[65, null]], "norse.torch.functional.test.test_lif_adex": [[66, null]], "norse.torch.functional.test.test_lif_adex_refrac": [[67, null]], "norse.torch.functional.test.test_lif_box": [[68, null]], "norse.torch.functional.test.test_lif_ex": [[69, null]], "norse.torch.functional.test.test_lif_mc": [[70, null]], "norse.torch.functional.test.test_lif_mc_refrac": [[71, null]], "norse.torch.functional.test.test_lif_refrac": [[72, null]], "norse.torch.functional.test.test_lift": [[73, null]], "norse.torch.functional.test.test_logical": [[74, null]], "norse.torch.functional.test.test_lsnn": [[75, null]], "norse.torch.functional.test.test_receptive_field": [[76, null]], "norse.torch.functional.test.test_regularization": [[77, null]], "norse.torch.functional.test.test_spikes_to_times_decoder": [[78, null]], "norse.torch.functional.test.test_stdp": [[79, null]], "norse.torch.functional.test.test_stdp_sensor": [[80, null]], "norse.torch.functional.test.test_superspike": [[81, null]], "norse.torch.functional.test.test_threshold": [[82, null]], "norse.torch.functional.test.test_tsodyks_makram": [[83, null]], "norse.torch.functional.threshold": [[84, null]], "norse.torch.functional.tsodyks_makram": [[85, null]], "norse.torch.models": [[86, null]], "norse.torch.models.conv": [[87, null]], "norse.torch.models.mobilenet": [[88, null]], "norse.torch.models.test": [[89, null]], "norse.torch.models.test.test_conv": [[90, null]], "norse.torch.models.test.test_mobilenet": [[91, null]], "norse.torch.models.test.test_vgg": [[92, null]], "norse.torch.models.vgg": [[93, null]], "norse.torch.module": [[94, null]], "norse.torch.module.coba_lif": [[95, null]], "norse.torch.module.coba_lif.CobaLIFCell": [[217, null]], "norse.torch.module.conv": [[96, null]], "norse.torch.module.conv.LConv2d": [[218, null]], "norse.torch.module.encode": [[97, null]], "norse.torch.module.encode.ConstantCurrentLIFEncoder": [[219, null]], "norse.torch.module.encode.PoissonEncoder": [[220, null]], "norse.torch.module.encode.PoissonEncoderStep": [[221, null]], "norse.torch.module.encode.PopulationEncoder": [[222, null]], "norse.torch.module.encode.SignedPoissonEncoder": [[223, null]], "norse.torch.module.encode.SpikeLatencyEncoder": [[224, null]], "norse.torch.module.encode.SpikeLatencyLIFEncoder": [[225, null]], "norse.torch.module.exp_filter": [[98, null]], "norse.torch.module.iaf": [[99, null]], "norse.torch.module.iaf.IAFCell": [[226, null]], "norse.torch.module.iaf.IAFFeedForwardState": [[227, null]], "norse.torch.module.iaf.IAFParameters": [[228, null]], "norse.torch.module.izhikevich": [[100, null]], "norse.torch.module.izhikevich.Izhikevich": [[229, null]], "norse.torch.module.izhikevich.IzhikevichCell": [[230, null]], "norse.torch.module.izhikevich.IzhikevichRecurrent": [[231, null]], "norse.torch.module.izhikevich.IzhikevichRecurrentCell": [[232, null]], "norse.torch.module.izhikevich.IzhikevichSpikingBehavior": [[233, null]], "norse.torch.module.izhikevich.IzhikevichState": [[234, null]], "norse.torch.module.leaky_integrator": [[101, null]], "norse.torch.module.leaky_integrator.LI": [[235, null]], "norse.torch.module.leaky_integrator.LICell": [[236, null]], "norse.torch.module.leaky_integrator.LILinearCell": [[237, null]], "norse.torch.module.leaky_integrator.LIParameters": [[238, null]], "norse.torch.module.leaky_integrator.LIState": [[239, null]], "norse.torch.module.leaky_integrator_box": [[102, null]], "norse.torch.module.lif": [[103, null]], "norse.torch.module.lif.LIF": [[240, null]], "norse.torch.module.lif.LIFCell": [[241, null]], "norse.torch.module.lif.LIFParameters": [[242, null]], "norse.torch.module.lif.LIFRecurrent": [[243, null]], "norse.torch.module.lif.LIFRecurrentCell": [[244, null]], "norse.torch.module.lif.LIFState": [[245, null]], "norse.torch.module.lif_adex": [[104, null]], "norse.torch.module.lif_adex.LIFAdEx": [[246, null]], "norse.torch.module.lif_adex.LIFAdExCell": [[247, null]], "norse.torch.module.lif_adex.LIFAdExRecurrent": [[248, null]], "norse.torch.module.lif_adex.LIFAdExRecurrentCell": [[249, null]], "norse.torch.module.lif_adex_refrac": [[105, null]], "norse.torch.module.lif_box": [[106, null]], "norse.torch.module.lif_box.LIFBoxCell": [[250, null]], "norse.torch.module.lif_box.LIFBoxFeedForwardState": [[251, null]], "norse.torch.module.lif_box.LIFBoxParameters": [[252, null]], "norse.torch.module.lif_correlation": [[107, null]], "norse.torch.module.lif_ex": [[108, null]], "norse.torch.module.lif_ex.LIFEx": [[253, null]], "norse.torch.module.lif_ex.LIFExCell": [[254, null]], "norse.torch.module.lif_ex.LIFExRecurrent": [[255, null]], "norse.torch.module.lif_ex.LIFExRecurrentCell": [[256, null]], "norse.torch.module.lif_mc": [[109, null]], "norse.torch.module.lif_mc.LIFMCRecurrentCell": [[257, null]], "norse.torch.module.lif_mc_refrac": [[110, null]], "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell": [[258, null]], "norse.torch.module.lif_refrac": [[111, null]], "norse.torch.module.lif_refrac.LIFRefracCell": [[259, null]], "norse.torch.module.lif_refrac.LIFRefracRecurrentCell": [[260, null]], "norse.torch.module.lift": [[112, null]], "norse.torch.module.lsnn": [[113, null]], "norse.torch.module.lsnn.LSNN": [[261, null]], "norse.torch.module.lsnn.LSNNCell": [[262, null]], "norse.torch.module.lsnn.LSNNRecurrent": [[263, null]], "norse.torch.module.lsnn.LSNNRecurrentCell": [[264, null]], "norse.torch.module.receptive_field": [[114, null]], "norse.torch.module.receptive_field.SpatialReceptiveField2d": [[265, null]], "norse.torch.module.receptive_field.TemporalReceptiveField": [[266, null]], "norse.torch.module.regularization": [[115, null]], "norse.torch.module.sequential": [[116, null]], "norse.torch.module.snn": [[117, null]], "norse.torch.module.spikes_to_times_decoder": [[118, null]], "norse.torch.module.test": [[119, null]], "norse.torch.module.test.test_coba": [[120, null]], "norse.torch.module.test.test_conv": [[121, null]], "norse.torch.module.test.test_encode": [[122, null]], "norse.torch.module.test.test_exp_filter": [[123, null]], "norse.torch.module.test.test_iaf": [[124, null]], "norse.torch.module.test.test_izhikevich": [[125, null]], "norse.torch.module.test.test_leaky_integrator": [[126, null]], "norse.torch.module.test.test_leaky_integrator_box": [[127, null]], "norse.torch.module.test.test_lif": [[128, null]], "norse.torch.module.test.test_lif_adex": [[129, null]], "norse.torch.module.test.test_lif_adex_refrac": [[130, null]], "norse.torch.module.test.test_lif_box": [[131, null]], "norse.torch.module.test.test_lif_correlation": [[132, null]], "norse.torch.module.test.test_lif_ex": [[133, null]], "norse.torch.module.test.test_lif_mc": [[134, null]], "norse.torch.module.test.test_lif_mc_refrac": [[135, null]], "norse.torch.module.test.test_lif_refrac": [[136, null]], "norse.torch.module.test.test_lift": [[137, null]], "norse.torch.module.test.test_lsnn": [[138, null]], "norse.torch.module.test.test_receptive_field": [[139, null]], "norse.torch.module.test.test_regularization": [[140, null]], "norse.torch.module.test.test_sequential": [[141, null]], "norse.torch.module.test.test_snn": [[142, null]], "norse.torch.module.test.test_spikes_to_times_decoder": [[143, null]], "norse.torch.module.test.test_training": [[144, null]], "norse.torch.utils": [[145, null]], "norse.torch.utils.clone": [[146, null]], "norse.torch.utils.export_nir": [[147, null]], "norse.torch.utils.import_nir": [[148, null]], "norse.torch.utils.plot": [[149, null]], "norse.torch.utils.plot.plot": [[150, null]], "norse.torch.utils.pytree": [[151, null]], "norse.torch.utils.state": [[152, null]], "norse.torch.utils.tensorboard": [[153, null]], "norse.torch.utils.tensorboard.tensorboard": [[154, null]], "norse.torch.utils.test": [[155, null]], "norse.torch.utils.test.test_nir_export": [[156, null]], "norse.torch.utils.test.test_nir_import": [[157, null]], "norse.torch.utils.test.test_tensorboard": [[158, null]], "norse.utils": [[159, null]]}, "docnames": ["_autosummary/norse", "_autosummary/norse.benchmark", "_autosummary/norse.benchmark.benchmark", "_autosummary/norse.benchmark.main", "_autosummary/norse.benchmark.norse_lif", "_autosummary/norse.benchmark.plot", "_autosummary/norse.dataset", "_autosummary/norse.dataset.memory", "_autosummary/norse.dataset.spiking_heidelberg", "_autosummary/norse.task", "_autosummary/norse.task.correlation_experiment", "_autosummary/norse.task.mnist", "_autosummary/norse.task.mnist_pl", "_autosummary/norse.torch", "_autosummary/norse.torch.functional", "_autosummary/norse.torch.functional.adjoint", "_autosummary/norse.torch.functional.adjoint.lif_adjoint", "_autosummary/norse.torch.functional.adjoint.lif_mc_adjoint", "_autosummary/norse.torch.functional.adjoint.lif_mc_refrac_adjoint", "_autosummary/norse.torch.functional.adjoint.lif_refrac_adjoint", "_autosummary/norse.torch.functional.adjoint.lsnn_adjoint", "_autosummary/norse.torch.functional.adjoint.test", "_autosummary/norse.torch.functional.adjoint.test.test_lif_adjoint", "_autosummary/norse.torch.functional.adjoint.test.test_lif_refrac_adjoint", "_autosummary/norse.torch.functional.adjoint.test.test_lsnn_adjoint", "_autosummary/norse.torch.functional.coba_lif", "_autosummary/norse.torch.functional.correlation_sensor", "_autosummary/norse.torch.functional.decode", "_autosummary/norse.torch.functional.encode", "_autosummary/norse.torch.functional.filter", "_autosummary/norse.torch.functional.heaviside", "_autosummary/norse.torch.functional.iaf", "_autosummary/norse.torch.functional.izhikevich", "_autosummary/norse.torch.functional.leaky_integrator", "_autosummary/norse.torch.functional.leaky_integrator_box", "_autosummary/norse.torch.functional.lif", "_autosummary/norse.torch.functional.lif_adex", "_autosummary/norse.torch.functional.lif_adex_refrac", "_autosummary/norse.torch.functional.lif_box", "_autosummary/norse.torch.functional.lif_correlation", "_autosummary/norse.torch.functional.lif_ex", "_autosummary/norse.torch.functional.lif_mc", "_autosummary/norse.torch.functional.lif_mc_refrac", "_autosummary/norse.torch.functional.lif_refrac", "_autosummary/norse.torch.functional.lift", "_autosummary/norse.torch.functional.logical", "_autosummary/norse.torch.functional.lsnn", "_autosummary/norse.torch.functional.parameter", "_autosummary/norse.torch.functional.receptive_field", "_autosummary/norse.torch.functional.regularization", "_autosummary/norse.torch.functional.reset", "_autosummary/norse.torch.functional.spikes_to_times_decoder", "_autosummary/norse.torch.functional.stdp", "_autosummary/norse.torch.functional.stdp_sensor", "_autosummary/norse.torch.functional.superspike", "_autosummary/norse.torch.functional.test", "_autosummary/norse.torch.functional.test.test_coba_lif", "_autosummary/norse.torch.functional.test.test_decode", "_autosummary/norse.torch.functional.test.test_encode", "_autosummary/norse.torch.functional.test.test_exp_filter", "_autosummary/norse.torch.functional.test.test_heaviside", "_autosummary/norse.torch.functional.test.test_iaf", "_autosummary/norse.torch.functional.test.test_izhikevich", "_autosummary/norse.torch.functional.test.test_leaky_integrator", "_autosummary/norse.torch.functional.test.test_leaky_integrator_box", "_autosummary/norse.torch.functional.test.test_lif", "_autosummary/norse.torch.functional.test.test_lif_adex", "_autosummary/norse.torch.functional.test.test_lif_adex_refrac", "_autosummary/norse.torch.functional.test.test_lif_box", "_autosummary/norse.torch.functional.test.test_lif_ex", "_autosummary/norse.torch.functional.test.test_lif_mc", "_autosummary/norse.torch.functional.test.test_lif_mc_refrac", "_autosummary/norse.torch.functional.test.test_lif_refrac", "_autosummary/norse.torch.functional.test.test_lift", "_autosummary/norse.torch.functional.test.test_logical", "_autosummary/norse.torch.functional.test.test_lsnn", "_autosummary/norse.torch.functional.test.test_receptive_field", "_autosummary/norse.torch.functional.test.test_regularization", "_autosummary/norse.torch.functional.test.test_spikes_to_times_decoder", "_autosummary/norse.torch.functional.test.test_stdp", "_autosummary/norse.torch.functional.test.test_stdp_sensor", "_autosummary/norse.torch.functional.test.test_superspike", "_autosummary/norse.torch.functional.test.test_threshold", "_autosummary/norse.torch.functional.test.test_tsodyks_makram", "_autosummary/norse.torch.functional.threshold", "_autosummary/norse.torch.functional.tsodyks_makram", "_autosummary/norse.torch.models", "_autosummary/norse.torch.models.conv", "_autosummary/norse.torch.models.mobilenet", "_autosummary/norse.torch.models.test", "_autosummary/norse.torch.models.test.test_conv", "_autosummary/norse.torch.models.test.test_mobilenet", "_autosummary/norse.torch.models.test.test_vgg", "_autosummary/norse.torch.models.vgg", "_autosummary/norse.torch.module", "_autosummary/norse.torch.module.coba_lif", "_autosummary/norse.torch.module.conv", "_autosummary/norse.torch.module.encode", "_autosummary/norse.torch.module.exp_filter", "_autosummary/norse.torch.module.iaf", "_autosummary/norse.torch.module.izhikevich", "_autosummary/norse.torch.module.leaky_integrator", "_autosummary/norse.torch.module.leaky_integrator_box", "_autosummary/norse.torch.module.lif", "_autosummary/norse.torch.module.lif_adex", "_autosummary/norse.torch.module.lif_adex_refrac", "_autosummary/norse.torch.module.lif_box", "_autosummary/norse.torch.module.lif_correlation", "_autosummary/norse.torch.module.lif_ex", "_autosummary/norse.torch.module.lif_mc", "_autosummary/norse.torch.module.lif_mc_refrac", "_autosummary/norse.torch.module.lif_refrac", "_autosummary/norse.torch.module.lift", "_autosummary/norse.torch.module.lsnn", "_autosummary/norse.torch.module.receptive_field", "_autosummary/norse.torch.module.regularization", "_autosummary/norse.torch.module.sequential", "_autosummary/norse.torch.module.snn", "_autosummary/norse.torch.module.spikes_to_times_decoder", "_autosummary/norse.torch.module.test", "_autosummary/norse.torch.module.test.test_coba", "_autosummary/norse.torch.module.test.test_conv", "_autosummary/norse.torch.module.test.test_encode", "_autosummary/norse.torch.module.test.test_exp_filter", "_autosummary/norse.torch.module.test.test_iaf", "_autosummary/norse.torch.module.test.test_izhikevich", "_autosummary/norse.torch.module.test.test_leaky_integrator", "_autosummary/norse.torch.module.test.test_leaky_integrator_box", "_autosummary/norse.torch.module.test.test_lif", "_autosummary/norse.torch.module.test.test_lif_adex", "_autosummary/norse.torch.module.test.test_lif_adex_refrac", "_autosummary/norse.torch.module.test.test_lif_box", "_autosummary/norse.torch.module.test.test_lif_correlation", "_autosummary/norse.torch.module.test.test_lif_ex", "_autosummary/norse.torch.module.test.test_lif_mc", "_autosummary/norse.torch.module.test.test_lif_mc_refrac", "_autosummary/norse.torch.module.test.test_lif_refrac", "_autosummary/norse.torch.module.test.test_lift", "_autosummary/norse.torch.module.test.test_lsnn", "_autosummary/norse.torch.module.test.test_receptive_field", "_autosummary/norse.torch.module.test.test_regularization", "_autosummary/norse.torch.module.test.test_sequential", "_autosummary/norse.torch.module.test.test_snn", "_autosummary/norse.torch.module.test.test_spikes_to_times_decoder", "_autosummary/norse.torch.module.test.test_training", "_autosummary/norse.torch.utils", "_autosummary/norse.torch.utils.clone", "_autosummary/norse.torch.utils.export_nir", "_autosummary/norse.torch.utils.import_nir", "_autosummary/norse.torch.utils.plot", "_autosummary/norse.torch.utils.plot.plot", "_autosummary/norse.torch.utils.pytree", "_autosummary/norse.torch.utils.state", "_autosummary/norse.torch.utils.tensorboard", "_autosummary/norse.torch.utils.tensorboard.tensorboard", "_autosummary/norse.torch.utils.test", "_autosummary/norse.torch.utils.test.test_nir_export", "_autosummary/norse.torch.utils.test.test_nir_import", "_autosummary/norse.torch.utils.test.test_tensorboard", "_autosummary/norse.utils", "api", "generated/norse.torch.functional.coba_lif.CobaLIFFeedForwardState", "generated/norse.torch.functional.coba_lif.CobaLIFParameters", "generated/norse.torch.functional.coba_lif.coba_lif_feed_forward_step", "generated/norse.torch.functional.heaviside", "generated/norse.torch.functional.iaf.IAFFeedForwardState", "generated/norse.torch.functional.iaf.IAFParameters", "generated/norse.torch.functional.iaf.iaf_feed_forward_step", "generated/norse.torch.functional.izhikevich.IzhikevichParameters", "generated/norse.torch.functional.izhikevich.IzhikevichSpikingBehavior", "generated/norse.torch.functional.izhikevich.accomodation", "generated/norse.torch.functional.izhikevich.bistability", "generated/norse.torch.functional.izhikevich.class_1_exc", "generated/norse.torch.functional.izhikevich.class_2_exc", "generated/norse.torch.functional.izhikevich.dap", "generated/norse.torch.functional.izhikevich.inhibition_induced_bursting", "generated/norse.torch.functional.izhikevich.inhibition_induced_spiking", "generated/norse.torch.functional.izhikevich.integrator", "generated/norse.torch.functional.izhikevich.izhikevich_feed_forward_step", "generated/norse.torch.functional.izhikevich.mixed_mode", "generated/norse.torch.functional.izhikevich.phasic_bursting", "generated/norse.torch.functional.izhikevich.phasic_spiking", "generated/norse.torch.functional.izhikevich.rebound_burst", "generated/norse.torch.functional.izhikevich.rebound_spike", "generated/norse.torch.functional.izhikevich.resonator", "generated/norse.torch.functional.izhikevich.spike_frequency_adaptation", "generated/norse.torch.functional.izhikevich.spike_latency", "generated/norse.torch.functional.izhikevich.subthreshold_oscillation", "generated/norse.torch.functional.izhikevich.tonic_bursting", "generated/norse.torch.functional.izhikevich.tonic_spiking", "generated/norse.torch.functional.leaky_integrator.LIParameters", "generated/norse.torch.functional.leaky_integrator.LIState", "generated/norse.torch.functional.leaky_integrator.li_feed_forward_step", "generated/norse.torch.functional.lif_adex.LIFAdExFeedForwardState", "generated/norse.torch.functional.lif_adex.LIFAdExParameters", "generated/norse.torch.functional.lif_adex.lif_adex_current_encoder", "generated/norse.torch.functional.lif_adex.lif_adex_feed_forward_step", "generated/norse.torch.functional.lif_box.LIFBoxFeedForwardState", "generated/norse.torch.functional.lif_box.LIFBoxParameters", "generated/norse.torch.functional.lif_box.lif_box_feed_forward_step", "generated/norse.torch.functional.lif_ex.LIFExFeedForwardState", "generated/norse.torch.functional.lif_ex.LIFExParameters", "generated/norse.torch.functional.lif_ex.lif_ex_current_encoder", "generated/norse.torch.functional.lif_ex.lif_ex_feed_forward_step", "generated/norse.torch.functional.lift", "generated/norse.torch.functional.logical.logical_and", "generated/norse.torch.functional.logical.logical_or", "generated/norse.torch.functional.logical.logical_xor", "generated/norse.torch.functional.logical.muller_c", "generated/norse.torch.functional.logical.posedge_detector", "generated/norse.torch.functional.receptive_field.gaussian_kernel", "generated/norse.torch.functional.receptive_field.spatial_receptive_field", "generated/norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives", "generated/norse.torch.functional.receptive_field.temporal_scale_distribution", "generated/norse.torch.functional.regularization.regularize_step", "generated/norse.torch.functional.regularization.spike_accumulator", "generated/norse.torch.functional.regularization.voltage_accumulator", "generated/norse.torch.module.coba_lif.CobaLIFCell", "generated/norse.torch.module.conv.LConv2d", "generated/norse.torch.module.encode.ConstantCurrentLIFEncoder", "generated/norse.torch.module.encode.PoissonEncoder", "generated/norse.torch.module.encode.PoissonEncoderStep", "generated/norse.torch.module.encode.PopulationEncoder", "generated/norse.torch.module.encode.SignedPoissonEncoder", "generated/norse.torch.module.encode.SpikeLatencyEncoder", "generated/norse.torch.module.encode.SpikeLatencyLIFEncoder", "generated/norse.torch.module.iaf.IAFCell", "generated/norse.torch.module.iaf.IAFFeedForwardState", "generated/norse.torch.module.iaf.IAFParameters", "generated/norse.torch.module.izhikevich.Izhikevich", "generated/norse.torch.module.izhikevich.IzhikevichCell", "generated/norse.torch.module.izhikevich.IzhikevichRecurrent", "generated/norse.torch.module.izhikevich.IzhikevichRecurrentCell", "generated/norse.torch.module.izhikevich.IzhikevichSpikingBehavior", "generated/norse.torch.module.izhikevich.IzhikevichState", "generated/norse.torch.module.leaky_integrator.LI", "generated/norse.torch.module.leaky_integrator.LICell", "generated/norse.torch.module.leaky_integrator.LILinearCell", "generated/norse.torch.module.leaky_integrator.LIParameters", "generated/norse.torch.module.leaky_integrator.LIState", "generated/norse.torch.module.lif.LIF", "generated/norse.torch.module.lif.LIFCell", "generated/norse.torch.module.lif.LIFParameters", "generated/norse.torch.module.lif.LIFRecurrent", "generated/norse.torch.module.lif.LIFRecurrentCell", "generated/norse.torch.module.lif.LIFState", "generated/norse.torch.module.lif_adex.LIFAdEx", "generated/norse.torch.module.lif_adex.LIFAdExCell", "generated/norse.torch.module.lif_adex.LIFAdExRecurrent", "generated/norse.torch.module.lif_adex.LIFAdExRecurrentCell", "generated/norse.torch.module.lif_box.LIFBoxCell", "generated/norse.torch.module.lif_box.LIFBoxFeedForwardState", "generated/norse.torch.module.lif_box.LIFBoxParameters", "generated/norse.torch.module.lif_ex.LIFEx", "generated/norse.torch.module.lif_ex.LIFExCell", "generated/norse.torch.module.lif_ex.LIFExRecurrent", "generated/norse.torch.module.lif_ex.LIFExRecurrentCell", "generated/norse.torch.module.lif_mc.LIFMCRecurrentCell", "generated/norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell", "generated/norse.torch.module.lif_refrac.LIFRefracCell", "generated/norse.torch.module.lif_refrac.LIFRefracRecurrentCell", "generated/norse.torch.module.lsnn.LSNN", "generated/norse.torch.module.lsnn.LSNNCell", "generated/norse.torch.module.lsnn.LSNNRecurrent", "generated/norse.torch.module.lsnn.LSNNRecurrentCell", "generated/norse.torch.module.receptive_field.SpatialReceptiveField2d", "generated/norse.torch.module.receptive_field.TemporalReceptiveField", "index", "norse.torch", "norse.torch.functional", "pages/about", "pages/development", "pages/hardware", "pages/installing", "pages/parameters", "pages/spiking", "pages/started", "pages/tasks", "pages/working"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/norse.rst", "_autosummary/norse.benchmark.rst", "_autosummary/norse.benchmark.benchmark.rst", "_autosummary/norse.benchmark.main.rst", "_autosummary/norse.benchmark.norse_lif.rst", "_autosummary/norse.benchmark.plot.rst", "_autosummary/norse.dataset.rst", "_autosummary/norse.dataset.memory.rst", "_autosummary/norse.dataset.spiking_heidelberg.rst", "_autosummary/norse.task.rst", "_autosummary/norse.task.correlation_experiment.rst", "_autosummary/norse.task.mnist.rst", "_autosummary/norse.task.mnist_pl.rst", "_autosummary/norse.torch.rst", "_autosummary/norse.torch.functional.rst", "_autosummary/norse.torch.functional.adjoint.rst", "_autosummary/norse.torch.functional.adjoint.lif_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.lif_mc_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.lif_mc_refrac_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.lif_refrac_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.lsnn_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.test.rst", "_autosummary/norse.torch.functional.adjoint.test.test_lif_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.test.test_lif_refrac_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.test.test_lsnn_adjoint.rst", "_autosummary/norse.torch.functional.coba_lif.rst", "_autosummary/norse.torch.functional.correlation_sensor.rst", "_autosummary/norse.torch.functional.decode.rst", "_autosummary/norse.torch.functional.encode.rst", "_autosummary/norse.torch.functional.filter.rst", "_autosummary/norse.torch.functional.heaviside.rst", "_autosummary/norse.torch.functional.iaf.rst", "_autosummary/norse.torch.functional.izhikevich.rst", "_autosummary/norse.torch.functional.leaky_integrator.rst", "_autosummary/norse.torch.functional.leaky_integrator_box.rst", "_autosummary/norse.torch.functional.lif.rst", "_autosummary/norse.torch.functional.lif_adex.rst", "_autosummary/norse.torch.functional.lif_adex_refrac.rst", "_autosummary/norse.torch.functional.lif_box.rst", "_autosummary/norse.torch.functional.lif_correlation.rst", "_autosummary/norse.torch.functional.lif_ex.rst", "_autosummary/norse.torch.functional.lif_mc.rst", "_autosummary/norse.torch.functional.lif_mc_refrac.rst", "_autosummary/norse.torch.functional.lif_refrac.rst", "_autosummary/norse.torch.functional.lift.rst", "_autosummary/norse.torch.functional.logical.rst", "_autosummary/norse.torch.functional.lsnn.rst", "_autosummary/norse.torch.functional.parameter.rst", "_autosummary/norse.torch.functional.receptive_field.rst", "_autosummary/norse.torch.functional.regularization.rst", "_autosummary/norse.torch.functional.reset.rst", "_autosummary/norse.torch.functional.spikes_to_times_decoder.rst", "_autosummary/norse.torch.functional.stdp.rst", "_autosummary/norse.torch.functional.stdp_sensor.rst", "_autosummary/norse.torch.functional.superspike.rst", "_autosummary/norse.torch.functional.test.rst", "_autosummary/norse.torch.functional.test.test_coba_lif.rst", "_autosummary/norse.torch.functional.test.test_decode.rst", "_autosummary/norse.torch.functional.test.test_encode.rst", "_autosummary/norse.torch.functional.test.test_exp_filter.rst", "_autosummary/norse.torch.functional.test.test_heaviside.rst", "_autosummary/norse.torch.functional.test.test_iaf.rst", "_autosummary/norse.torch.functional.test.test_izhikevich.rst", "_autosummary/norse.torch.functional.test.test_leaky_integrator.rst", "_autosummary/norse.torch.functional.test.test_leaky_integrator_box.rst", "_autosummary/norse.torch.functional.test.test_lif.rst", "_autosummary/norse.torch.functional.test.test_lif_adex.rst", "_autosummary/norse.torch.functional.test.test_lif_adex_refrac.rst", "_autosummary/norse.torch.functional.test.test_lif_box.rst", "_autosummary/norse.torch.functional.test.test_lif_ex.rst", "_autosummary/norse.torch.functional.test.test_lif_mc.rst", "_autosummary/norse.torch.functional.test.test_lif_mc_refrac.rst", "_autosummary/norse.torch.functional.test.test_lif_refrac.rst", "_autosummary/norse.torch.functional.test.test_lift.rst", "_autosummary/norse.torch.functional.test.test_logical.rst", "_autosummary/norse.torch.functional.test.test_lsnn.rst", "_autosummary/norse.torch.functional.test.test_receptive_field.rst", "_autosummary/norse.torch.functional.test.test_regularization.rst", "_autosummary/norse.torch.functional.test.test_spikes_to_times_decoder.rst", "_autosummary/norse.torch.functional.test.test_stdp.rst", "_autosummary/norse.torch.functional.test.test_stdp_sensor.rst", "_autosummary/norse.torch.functional.test.test_superspike.rst", "_autosummary/norse.torch.functional.test.test_threshold.rst", "_autosummary/norse.torch.functional.test.test_tsodyks_makram.rst", "_autosummary/norse.torch.functional.threshold.rst", "_autosummary/norse.torch.functional.tsodyks_makram.rst", "_autosummary/norse.torch.models.rst", "_autosummary/norse.torch.models.conv.rst", "_autosummary/norse.torch.models.mobilenet.rst", "_autosummary/norse.torch.models.test.rst", "_autosummary/norse.torch.models.test.test_conv.rst", "_autosummary/norse.torch.models.test.test_mobilenet.rst", "_autosummary/norse.torch.models.test.test_vgg.rst", "_autosummary/norse.torch.models.vgg.rst", "_autosummary/norse.torch.module.rst", "_autosummary/norse.torch.module.coba_lif.rst", "_autosummary/norse.torch.module.conv.rst", "_autosummary/norse.torch.module.encode.rst", "_autosummary/norse.torch.module.exp_filter.rst", "_autosummary/norse.torch.module.iaf.rst", "_autosummary/norse.torch.module.izhikevich.rst", "_autosummary/norse.torch.module.leaky_integrator.rst", "_autosummary/norse.torch.module.leaky_integrator_box.rst", "_autosummary/norse.torch.module.lif.rst", "_autosummary/norse.torch.module.lif_adex.rst", "_autosummary/norse.torch.module.lif_adex_refrac.rst", "_autosummary/norse.torch.module.lif_box.rst", "_autosummary/norse.torch.module.lif_correlation.rst", "_autosummary/norse.torch.module.lif_ex.rst", "_autosummary/norse.torch.module.lif_mc.rst", "_autosummary/norse.torch.module.lif_mc_refrac.rst", "_autosummary/norse.torch.module.lif_refrac.rst", "_autosummary/norse.torch.module.lift.rst", "_autosummary/norse.torch.module.lsnn.rst", "_autosummary/norse.torch.module.receptive_field.rst", "_autosummary/norse.torch.module.regularization.rst", "_autosummary/norse.torch.module.sequential.rst", "_autosummary/norse.torch.module.snn.rst", "_autosummary/norse.torch.module.spikes_to_times_decoder.rst", "_autosummary/norse.torch.module.test.rst", "_autosummary/norse.torch.module.test.test_coba.rst", "_autosummary/norse.torch.module.test.test_conv.rst", "_autosummary/norse.torch.module.test.test_encode.rst", "_autosummary/norse.torch.module.test.test_exp_filter.rst", "_autosummary/norse.torch.module.test.test_iaf.rst", "_autosummary/norse.torch.module.test.test_izhikevich.rst", "_autosummary/norse.torch.module.test.test_leaky_integrator.rst", "_autosummary/norse.torch.module.test.test_leaky_integrator_box.rst", "_autosummary/norse.torch.module.test.test_lif.rst", "_autosummary/norse.torch.module.test.test_lif_adex.rst", "_autosummary/norse.torch.module.test.test_lif_adex_refrac.rst", "_autosummary/norse.torch.module.test.test_lif_box.rst", "_autosummary/norse.torch.module.test.test_lif_correlation.rst", "_autosummary/norse.torch.module.test.test_lif_ex.rst", "_autosummary/norse.torch.module.test.test_lif_mc.rst", "_autosummary/norse.torch.module.test.test_lif_mc_refrac.rst", "_autosummary/norse.torch.module.test.test_lif_refrac.rst", "_autosummary/norse.torch.module.test.test_lift.rst", "_autosummary/norse.torch.module.test.test_lsnn.rst", "_autosummary/norse.torch.module.test.test_receptive_field.rst", "_autosummary/norse.torch.module.test.test_regularization.rst", "_autosummary/norse.torch.module.test.test_sequential.rst", "_autosummary/norse.torch.module.test.test_snn.rst", "_autosummary/norse.torch.module.test.test_spikes_to_times_decoder.rst", "_autosummary/norse.torch.module.test.test_training.rst", "_autosummary/norse.torch.utils.rst", "_autosummary/norse.torch.utils.clone.rst", "_autosummary/norse.torch.utils.export_nir.rst", "_autosummary/norse.torch.utils.import_nir.rst", "_autosummary/norse.torch.utils.plot.rst", "_autosummary/norse.torch.utils.plot.plot.rst", "_autosummary/norse.torch.utils.pytree.rst", "_autosummary/norse.torch.utils.state.rst", "_autosummary/norse.torch.utils.tensorboard.rst", "_autosummary/norse.torch.utils.tensorboard.tensorboard.rst", "_autosummary/norse.torch.utils.test.rst", "_autosummary/norse.torch.utils.test.test_nir_export.rst", "_autosummary/norse.torch.utils.test.test_nir_import.rst", "_autosummary/norse.torch.utils.test.test_tensorboard.rst", "_autosummary/norse.utils.rst", "api.rst", "generated/norse.torch.functional.coba_lif.CobaLIFFeedForwardState.rst", "generated/norse.torch.functional.coba_lif.CobaLIFParameters.rst", "generated/norse.torch.functional.coba_lif.coba_lif_feed_forward_step.rst", "generated/norse.torch.functional.heaviside.rst", "generated/norse.torch.functional.iaf.IAFFeedForwardState.rst", "generated/norse.torch.functional.iaf.IAFParameters.rst", "generated/norse.torch.functional.iaf.iaf_feed_forward_step.rst", "generated/norse.torch.functional.izhikevich.IzhikevichParameters.rst", "generated/norse.torch.functional.izhikevich.IzhikevichSpikingBehavior.rst", "generated/norse.torch.functional.izhikevich.accomodation.rst", "generated/norse.torch.functional.izhikevich.bistability.rst", "generated/norse.torch.functional.izhikevich.class_1_exc.rst", "generated/norse.torch.functional.izhikevich.class_2_exc.rst", "generated/norse.torch.functional.izhikevich.dap.rst", "generated/norse.torch.functional.izhikevich.inhibition_induced_bursting.rst", "generated/norse.torch.functional.izhikevich.inhibition_induced_spiking.rst", "generated/norse.torch.functional.izhikevich.integrator.rst", "generated/norse.torch.functional.izhikevich.izhikevich_feed_forward_step.rst", "generated/norse.torch.functional.izhikevich.mixed_mode.rst", "generated/norse.torch.functional.izhikevich.phasic_bursting.rst", "generated/norse.torch.functional.izhikevich.phasic_spiking.rst", "generated/norse.torch.functional.izhikevich.rebound_burst.rst", "generated/norse.torch.functional.izhikevich.rebound_spike.rst", "generated/norse.torch.functional.izhikevich.resonator.rst", "generated/norse.torch.functional.izhikevich.spike_frequency_adaptation.rst", "generated/norse.torch.functional.izhikevich.spike_latency.rst", "generated/norse.torch.functional.izhikevich.subthreshold_oscillation.rst", "generated/norse.torch.functional.izhikevich.tonic_bursting.rst", "generated/norse.torch.functional.izhikevich.tonic_spiking.rst", "generated/norse.torch.functional.leaky_integrator.LIParameters.rst", "generated/norse.torch.functional.leaky_integrator.LIState.rst", "generated/norse.torch.functional.leaky_integrator.li_feed_forward_step.rst", "generated/norse.torch.functional.lif_adex.LIFAdExFeedForwardState.rst", "generated/norse.torch.functional.lif_adex.LIFAdExParameters.rst", "generated/norse.torch.functional.lif_adex.lif_adex_current_encoder.rst", "generated/norse.torch.functional.lif_adex.lif_adex_feed_forward_step.rst", "generated/norse.torch.functional.lif_box.LIFBoxFeedForwardState.rst", "generated/norse.torch.functional.lif_box.LIFBoxParameters.rst", "generated/norse.torch.functional.lif_box.lif_box_feed_forward_step.rst", "generated/norse.torch.functional.lif_ex.LIFExFeedForwardState.rst", "generated/norse.torch.functional.lif_ex.LIFExParameters.rst", "generated/norse.torch.functional.lif_ex.lif_ex_current_encoder.rst", "generated/norse.torch.functional.lif_ex.lif_ex_feed_forward_step.rst", "generated/norse.torch.functional.lift.rst", "generated/norse.torch.functional.logical.logical_and.rst", "generated/norse.torch.functional.logical.logical_or.rst", "generated/norse.torch.functional.logical.logical_xor.rst", "generated/norse.torch.functional.logical.muller_c.rst", "generated/norse.torch.functional.logical.posedge_detector.rst", "generated/norse.torch.functional.receptive_field.gaussian_kernel.rst", "generated/norse.torch.functional.receptive_field.spatial_receptive_field.rst", "generated/norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives.rst", "generated/norse.torch.functional.receptive_field.temporal_scale_distribution.rst", "generated/norse.torch.functional.regularization.regularize_step.rst", "generated/norse.torch.functional.regularization.spike_accumulator.rst", "generated/norse.torch.functional.regularization.voltage_accumulator.rst", "generated/norse.torch.module.coba_lif.CobaLIFCell.rst", "generated/norse.torch.module.conv.LConv2d.rst", "generated/norse.torch.module.encode.ConstantCurrentLIFEncoder.rst", "generated/norse.torch.module.encode.PoissonEncoder.rst", "generated/norse.torch.module.encode.PoissonEncoderStep.rst", "generated/norse.torch.module.encode.PopulationEncoder.rst", "generated/norse.torch.module.encode.SignedPoissonEncoder.rst", "generated/norse.torch.module.encode.SpikeLatencyEncoder.rst", "generated/norse.torch.module.encode.SpikeLatencyLIFEncoder.rst", "generated/norse.torch.module.iaf.IAFCell.rst", "generated/norse.torch.module.iaf.IAFFeedForwardState.rst", "generated/norse.torch.module.iaf.IAFParameters.rst", "generated/norse.torch.module.izhikevich.Izhikevich.rst", "generated/norse.torch.module.izhikevich.IzhikevichCell.rst", "generated/norse.torch.module.izhikevich.IzhikevichRecurrent.rst", "generated/norse.torch.module.izhikevich.IzhikevichRecurrentCell.rst", "generated/norse.torch.module.izhikevich.IzhikevichSpikingBehavior.rst", "generated/norse.torch.module.izhikevich.IzhikevichState.rst", "generated/norse.torch.module.leaky_integrator.LI.rst", "generated/norse.torch.module.leaky_integrator.LICell.rst", "generated/norse.torch.module.leaky_integrator.LILinearCell.rst", "generated/norse.torch.module.leaky_integrator.LIParameters.rst", "generated/norse.torch.module.leaky_integrator.LIState.rst", "generated/norse.torch.module.lif.LIF.rst", "generated/norse.torch.module.lif.LIFCell.rst", "generated/norse.torch.module.lif.LIFParameters.rst", "generated/norse.torch.module.lif.LIFRecurrent.rst", "generated/norse.torch.module.lif.LIFRecurrentCell.rst", "generated/norse.torch.module.lif.LIFState.rst", "generated/norse.torch.module.lif_adex.LIFAdEx.rst", "generated/norse.torch.module.lif_adex.LIFAdExCell.rst", "generated/norse.torch.module.lif_adex.LIFAdExRecurrent.rst", "generated/norse.torch.module.lif_adex.LIFAdExRecurrentCell.rst", "generated/norse.torch.module.lif_box.LIFBoxCell.rst", "generated/norse.torch.module.lif_box.LIFBoxFeedForwardState.rst", "generated/norse.torch.module.lif_box.LIFBoxParameters.rst", "generated/norse.torch.module.lif_ex.LIFEx.rst", "generated/norse.torch.module.lif_ex.LIFExCell.rst", "generated/norse.torch.module.lif_ex.LIFExRecurrent.rst", "generated/norse.torch.module.lif_ex.LIFExRecurrentCell.rst", "generated/norse.torch.module.lif_mc.LIFMCRecurrentCell.rst", "generated/norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell.rst", "generated/norse.torch.module.lif_refrac.LIFRefracCell.rst", "generated/norse.torch.module.lif_refrac.LIFRefracRecurrentCell.rst", "generated/norse.torch.module.lsnn.LSNN.rst", "generated/norse.torch.module.lsnn.LSNNCell.rst", "generated/norse.torch.module.lsnn.LSNNRecurrent.rst", "generated/norse.torch.module.lsnn.LSNNRecurrentCell.rst", "generated/norse.torch.module.receptive_field.SpatialReceptiveField2d.rst", "generated/norse.torch.module.receptive_field.TemporalReceptiveField.rst", "index.rst", "norse.torch.rst", "norse.torch.functional.rst", "pages/about.rst", "pages/development.md", "pages/hardware.rst", "pages/installing.md", "pages/parameters.ipynb", "pages/spiking.ipynb", "pages/started.ipynb", "pages/tasks.rst", "pages/working.ipynb"], "indexentries": {"__init__() (norse.torch.functional.coba_lif.cobaliffeedforwardstate method)": [[161, "norse.torch.functional.coba_lif.CobaLIFFeedForwardState.__init__", false]], "__init__() (norse.torch.functional.coba_lif.cobalifparameters method)": [[162, "norse.torch.functional.coba_lif.CobaLIFParameters.__init__", false]], "__init__() (norse.torch.functional.iaf.iaffeedforwardstate method)": [[165, "norse.torch.functional.iaf.IAFFeedForwardState.__init__", false]], "__init__() (norse.torch.functional.iaf.iafparameters method)": [[166, "norse.torch.functional.iaf.IAFParameters.__init__", false]], "__init__() (norse.torch.functional.izhikevich.izhikevichparameters method)": [[168, "norse.torch.functional.izhikevich.IzhikevichParameters.__init__", false]], "__init__() (norse.torch.functional.izhikevich.izhikevichspikingbehavior method)": [[169, "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior.__init__", false]], "__init__() (norse.torch.functional.leaky_integrator.liparameters method)": [[190, "norse.torch.functional.leaky_integrator.LIParameters.__init__", false]], "__init__() (norse.torch.functional.leaky_integrator.listate method)": [[191, "norse.torch.functional.leaky_integrator.LIState.__init__", false]], "__init__() (norse.torch.functional.lif_adex.lifadexfeedforwardstate method)": [[193, "norse.torch.functional.lif_adex.LIFAdExFeedForwardState.__init__", false]], "__init__() (norse.torch.functional.lif_adex.lifadexparameters method)": [[194, "norse.torch.functional.lif_adex.LIFAdExParameters.__init__", false]], "__init__() (norse.torch.functional.lif_box.lifboxfeedforwardstate method)": [[197, "norse.torch.functional.lif_box.LIFBoxFeedForwardState.__init__", false]], "__init__() (norse.torch.functional.lif_box.lifboxparameters method)": [[198, "norse.torch.functional.lif_box.LIFBoxParameters.__init__", false]], "__init__() (norse.torch.functional.lif_ex.lifexfeedforwardstate method)": [[200, "norse.torch.functional.lif_ex.LIFExFeedForwardState.__init__", false]], "__init__() (norse.torch.functional.lif_ex.lifexparameters method)": [[201, "norse.torch.functional.lif_ex.LIFExParameters.__init__", false]], "__init__() (norse.torch.module.coba_lif.cobalifcell method)": [[217, "norse.torch.module.coba_lif.CobaLIFCell.__init__", false]], "__init__() (norse.torch.module.conv.lconv2d method)": [[218, "norse.torch.module.conv.LConv2d.__init__", false]], "__init__() (norse.torch.module.encode.constantcurrentlifencoder method)": [[219, "norse.torch.module.encode.ConstantCurrentLIFEncoder.__init__", false]], "__init__() (norse.torch.module.encode.poissonencoder method)": [[220, "norse.torch.module.encode.PoissonEncoder.__init__", false]], "__init__() (norse.torch.module.encode.poissonencoderstep method)": [[221, "norse.torch.module.encode.PoissonEncoderStep.__init__", false]], "__init__() (norse.torch.module.encode.populationencoder method)": [[222, "norse.torch.module.encode.PopulationEncoder.__init__", false]], "__init__() (norse.torch.module.encode.signedpoissonencoder method)": [[223, "norse.torch.module.encode.SignedPoissonEncoder.__init__", false]], "__init__() (norse.torch.module.encode.spikelatencyencoder method)": [[224, "norse.torch.module.encode.SpikeLatencyEncoder.__init__", false]], "__init__() (norse.torch.module.encode.spikelatencylifencoder method)": [[225, "norse.torch.module.encode.SpikeLatencyLIFEncoder.__init__", false]], "__init__() (norse.torch.module.iaf.iafcell method)": [[226, "norse.torch.module.iaf.IAFCell.__init__", false]], "__init__() (norse.torch.module.iaf.iaffeedforwardstate method)": [[227, "norse.torch.module.iaf.IAFFeedForwardState.__init__", false]], "__init__() (norse.torch.module.iaf.iafparameters method)": [[228, "norse.torch.module.iaf.IAFParameters.__init__", false]], "__init__() (norse.torch.module.izhikevich.izhikevich method)": [[229, "norse.torch.module.izhikevich.Izhikevich.__init__", false]], "__init__() (norse.torch.module.izhikevich.izhikevichcell method)": [[230, "norse.torch.module.izhikevich.IzhikevichCell.__init__", false]], "__init__() (norse.torch.module.izhikevich.izhikevichrecurrent method)": [[231, "norse.torch.module.izhikevich.IzhikevichRecurrent.__init__", false]], "__init__() (norse.torch.module.izhikevich.izhikevichrecurrentcell method)": [[232, "norse.torch.module.izhikevich.IzhikevichRecurrentCell.__init__", false]], "__init__() (norse.torch.module.izhikevich.izhikevichspikingbehavior method)": [[233, "norse.torch.module.izhikevich.IzhikevichSpikingBehavior.__init__", false]], "__init__() (norse.torch.module.izhikevich.izhikevichstate method)": [[234, "norse.torch.module.izhikevich.IzhikevichState.__init__", false]], "__init__() (norse.torch.module.leaky_integrator.li method)": [[235, "norse.torch.module.leaky_integrator.LI.__init__", false]], "__init__() (norse.torch.module.leaky_integrator.licell method)": [[236, "norse.torch.module.leaky_integrator.LICell.__init__", false]], "__init__() (norse.torch.module.leaky_integrator.lilinearcell method)": [[237, "norse.torch.module.leaky_integrator.LILinearCell.__init__", false]], "__init__() (norse.torch.module.leaky_integrator.liparameters method)": [[238, "norse.torch.module.leaky_integrator.LIParameters.__init__", false]], "__init__() (norse.torch.module.leaky_integrator.listate method)": [[239, "norse.torch.module.leaky_integrator.LIState.__init__", false]], "__init__() (norse.torch.module.lif.lif method)": [[240, "norse.torch.module.lif.LIF.__init__", false]], "__init__() (norse.torch.module.lif.lifcell method)": [[241, "norse.torch.module.lif.LIFCell.__init__", false]], "__init__() (norse.torch.module.lif.lifparameters method)": [[242, "norse.torch.module.lif.LIFParameters.__init__", false]], "__init__() (norse.torch.module.lif.lifrecurrent method)": [[243, "norse.torch.module.lif.LIFRecurrent.__init__", false]], "__init__() (norse.torch.module.lif.lifrecurrentcell method)": [[244, "norse.torch.module.lif.LIFRecurrentCell.__init__", false]], "__init__() (norse.torch.module.lif.lifstate method)": [[245, "norse.torch.module.lif.LIFState.__init__", false]], "__init__() (norse.torch.module.lif_adex.lifadex method)": [[246, "norse.torch.module.lif_adex.LIFAdEx.__init__", false]], "__init__() (norse.torch.module.lif_adex.lifadexcell method)": [[247, "norse.torch.module.lif_adex.LIFAdExCell.__init__", false]], "__init__() (norse.torch.module.lif_adex.lifadexrecurrent method)": [[248, "norse.torch.module.lif_adex.LIFAdExRecurrent.__init__", false]], "__init__() (norse.torch.module.lif_adex.lifadexrecurrentcell method)": [[249, "norse.torch.module.lif_adex.LIFAdExRecurrentCell.__init__", false]], "__init__() (norse.torch.module.lif_box.lifboxcell method)": [[250, "norse.torch.module.lif_box.LIFBoxCell.__init__", false]], "__init__() (norse.torch.module.lif_box.lifboxfeedforwardstate method)": [[251, "norse.torch.module.lif_box.LIFBoxFeedForwardState.__init__", false]], "__init__() (norse.torch.module.lif_box.lifboxparameters method)": [[252, "norse.torch.module.lif_box.LIFBoxParameters.__init__", false]], "__init__() (norse.torch.module.lif_ex.lifex method)": [[253, "norse.torch.module.lif_ex.LIFEx.__init__", false]], "__init__() (norse.torch.module.lif_ex.lifexcell method)": [[254, "norse.torch.module.lif_ex.LIFExCell.__init__", false]], "__init__() (norse.torch.module.lif_ex.lifexrecurrent method)": [[255, "norse.torch.module.lif_ex.LIFExRecurrent.__init__", false]], "__init__() (norse.torch.module.lif_ex.lifexrecurrentcell method)": [[256, "norse.torch.module.lif_ex.LIFExRecurrentCell.__init__", false]], "__init__() (norse.torch.module.lif_mc.lifmcrecurrentcell method)": [[257, "norse.torch.module.lif_mc.LIFMCRecurrentCell.__init__", false]], "__init__() (norse.torch.module.lif_mc_refrac.lifmcrefracrecurrentcell method)": [[258, "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell.__init__", false]], "__init__() (norse.torch.module.lif_refrac.lifrefraccell method)": [[259, "norse.torch.module.lif_refrac.LIFRefracCell.__init__", false]], "__init__() (norse.torch.module.lif_refrac.lifrefracrecurrentcell method)": [[260, "norse.torch.module.lif_refrac.LIFRefracRecurrentCell.__init__", false]], "__init__() (norse.torch.module.lsnn.lsnn method)": [[261, "norse.torch.module.lsnn.LSNN.__init__", false]], "__init__() (norse.torch.module.lsnn.lsnncell method)": [[262, "norse.torch.module.lsnn.LSNNCell.__init__", false]], "__init__() (norse.torch.module.lsnn.lsnnrecurrent method)": [[263, "norse.torch.module.lsnn.LSNNRecurrent.__init__", false]], "__init__() (norse.torch.module.lsnn.lsnnrecurrentcell method)": [[264, "norse.torch.module.lsnn.LSNNRecurrentCell.__init__", false]], "__init__() (norse.torch.module.receptive_field.spatialreceptivefield2d method)": [[265, "norse.torch.module.receptive_field.SpatialReceptiveField2d.__init__", false]], "__init__() (norse.torch.module.receptive_field.temporalreceptivefield method)": [[266, "norse.torch.module.receptive_field.TemporalReceptiveField.__init__", false]], "accomodation (in module norse.torch.functional.izhikevich)": [[170, "norse.torch.functional.izhikevich.accomodation", false]], "bistability (in module norse.torch.functional.izhikevich)": [[171, "norse.torch.functional.izhikevich.bistability", false]], "class_1_exc (in module norse.torch.functional.izhikevich)": [[172, "norse.torch.functional.izhikevich.class_1_exc", false]], "class_2_exc (in module norse.torch.functional.izhikevich)": [[173, "norse.torch.functional.izhikevich.class_2_exc", false]], "coba_lif_feed_forward_step() (in module norse.torch.functional.coba_lif)": [[163, "norse.torch.functional.coba_lif.coba_lif_feed_forward_step", false]], "cobalifcell (class in norse.torch.module.coba_lif)": [[217, "norse.torch.module.coba_lif.CobaLIFCell", false]], "cobaliffeedforwardstate (class in norse.torch.functional.coba_lif)": [[161, "norse.torch.functional.coba_lif.CobaLIFFeedForwardState", false]], "cobalifparameters (class in norse.torch.functional.coba_lif)": [[162, "norse.torch.functional.coba_lif.CobaLIFParameters", false]], "constantcurrentlifencoder (class in norse.torch.module.encode)": [[219, "norse.torch.module.encode.ConstantCurrentLIFEncoder", false]], "dap (in module norse.torch.functional.izhikevich)": [[174, "norse.torch.functional.izhikevich.dap", false]], "gaussian_kernel() (in module norse.torch.functional.receptive_field)": [[210, "norse.torch.functional.receptive_field.gaussian_kernel", false]], "iaf_feed_forward_step() (in module norse.torch.functional.iaf)": [[167, "norse.torch.functional.iaf.iaf_feed_forward_step", false]], "iafcell (class in norse.torch.module.iaf)": [[226, "norse.torch.module.iaf.IAFCell", false]], "iaffeedforwardstate (class in norse.torch.functional.iaf)": [[165, "norse.torch.functional.iaf.IAFFeedForwardState", false]], "iaffeedforwardstate (class in norse.torch.module.iaf)": [[227, "norse.torch.module.iaf.IAFFeedForwardState", false]], "iafparameters (class in norse.torch.functional.iaf)": [[166, "norse.torch.functional.iaf.IAFParameters", false]], "iafparameters (class in norse.torch.module.iaf)": [[228, "norse.torch.module.iaf.IAFParameters", false]], "inhibition_induced_bursting (in module norse.torch.functional.izhikevich)": [[175, "norse.torch.functional.izhikevich.inhibition_induced_bursting", false]], "inhibition_induced_spiking (in module norse.torch.functional.izhikevich)": [[176, "norse.torch.functional.izhikevich.inhibition_induced_spiking", false]], "integrator (in module norse.torch.functional.izhikevich)": [[177, "norse.torch.functional.izhikevich.integrator", false]], "izhikevich (class in norse.torch.module.izhikevich)": [[229, "norse.torch.module.izhikevich.Izhikevich", false]], "izhikevich_feed_forward_step() (in module norse.torch.functional.izhikevich)": [[178, "norse.torch.functional.izhikevich.izhikevich_feed_forward_step", false]], "izhikevichcell (class in norse.torch.module.izhikevich)": [[230, "norse.torch.module.izhikevich.IzhikevichCell", false]], "izhikevichparameters (class in norse.torch.functional.izhikevich)": [[168, "norse.torch.functional.izhikevich.IzhikevichParameters", false]], "izhikevichrecurrent (class in norse.torch.module.izhikevich)": [[231, "norse.torch.module.izhikevich.IzhikevichRecurrent", false]], "izhikevichrecurrentcell (class in norse.torch.module.izhikevich)": [[232, "norse.torch.module.izhikevich.IzhikevichRecurrentCell", false]], "izhikevichspikingbehavior (class in norse.torch.functional.izhikevich)": [[169, "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior", false]], "izhikevichspikingbehavior (class in norse.torch.module.izhikevich)": [[233, "norse.torch.module.izhikevich.IzhikevichSpikingBehavior", false]], "izhikevichstate (class in norse.torch.module.izhikevich)": [[234, "norse.torch.module.izhikevich.IzhikevichState", false]], "lconv2d (class in norse.torch.module.conv)": [[218, "norse.torch.module.conv.LConv2d", false]], "li (class in norse.torch.module.leaky_integrator)": [[235, "norse.torch.module.leaky_integrator.LI", false]], "li_feed_forward_step() (in module norse.torch.functional.leaky_integrator)": [[192, "norse.torch.functional.leaky_integrator.li_feed_forward_step", false]], "licell (class in norse.torch.module.leaky_integrator)": [[236, "norse.torch.module.leaky_integrator.LICell", false]], "lif (class in norse.torch.module.lif)": [[240, "norse.torch.module.lif.LIF", false]], "lif_adex_current_encoder() (in module norse.torch.functional.lif_adex)": [[195, "norse.torch.functional.lif_adex.lif_adex_current_encoder", false]], "lif_adex_feed_forward_step() (in module norse.torch.functional.lif_adex)": [[196, "norse.torch.functional.lif_adex.lif_adex_feed_forward_step", false]], "lif_box_feed_forward_step() (in module norse.torch.functional.lif_box)": [[199, "norse.torch.functional.lif_box.lif_box_feed_forward_step", false]], "lif_ex_current_encoder() (in module norse.torch.functional.lif_ex)": [[202, "norse.torch.functional.lif_ex.lif_ex_current_encoder", false]], "lif_ex_feed_forward_step() (in module norse.torch.functional.lif_ex)": [[203, "norse.torch.functional.lif_ex.lif_ex_feed_forward_step", false]], "lifadex (class in norse.torch.module.lif_adex)": [[246, "norse.torch.module.lif_adex.LIFAdEx", false]], "lifadexcell (class in norse.torch.module.lif_adex)": [[247, "norse.torch.module.lif_adex.LIFAdExCell", false]], "lifadexfeedforwardstate (class in norse.torch.functional.lif_adex)": [[193, "norse.torch.functional.lif_adex.LIFAdExFeedForwardState", false]], "lifadexparameters (class in norse.torch.functional.lif_adex)": [[194, "norse.torch.functional.lif_adex.LIFAdExParameters", false]], "lifadexrecurrent (class in norse.torch.module.lif_adex)": [[248, "norse.torch.module.lif_adex.LIFAdExRecurrent", false]], "lifadexrecurrentcell (class in norse.torch.module.lif_adex)": [[249, "norse.torch.module.lif_adex.LIFAdExRecurrentCell", false]], "lifboxcell (class in norse.torch.module.lif_box)": [[250, "norse.torch.module.lif_box.LIFBoxCell", false]], "lifboxfeedforwardstate (class in norse.torch.functional.lif_box)": [[197, "norse.torch.functional.lif_box.LIFBoxFeedForwardState", false]], "lifboxfeedforwardstate (class in norse.torch.module.lif_box)": [[251, "norse.torch.module.lif_box.LIFBoxFeedForwardState", false]], "lifboxparameters (class in norse.torch.functional.lif_box)": [[198, "norse.torch.functional.lif_box.LIFBoxParameters", false]], "lifboxparameters (class in norse.torch.module.lif_box)": [[252, "norse.torch.module.lif_box.LIFBoxParameters", false]], "lifcell (class in norse.torch.module.lif)": [[241, "norse.torch.module.lif.LIFCell", false]], "lifex (class in norse.torch.module.lif_ex)": [[253, "norse.torch.module.lif_ex.LIFEx", false]], "lifexcell (class in norse.torch.module.lif_ex)": [[254, "norse.torch.module.lif_ex.LIFExCell", false]], "lifexfeedforwardstate (class in norse.torch.functional.lif_ex)": [[200, "norse.torch.functional.lif_ex.LIFExFeedForwardState", false]], "lifexparameters (class in norse.torch.functional.lif_ex)": [[201, "norse.torch.functional.lif_ex.LIFExParameters", false]], "lifexrecurrent (class in norse.torch.module.lif_ex)": [[255, "norse.torch.module.lif_ex.LIFExRecurrent", false]], "lifexrecurrentcell (class in norse.torch.module.lif_ex)": [[256, "norse.torch.module.lif_ex.LIFExRecurrentCell", false]], "lifmcrecurrentcell (class in norse.torch.module.lif_mc)": [[257, "norse.torch.module.lif_mc.LIFMCRecurrentCell", false]], "lifmcrefracrecurrentcell (class in norse.torch.module.lif_mc_refrac)": [[258, "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell", false]], "lifparameters (class in norse.torch.module.lif)": [[242, "norse.torch.module.lif.LIFParameters", false]], "lifrecurrent (class in norse.torch.module.lif)": [[243, "norse.torch.module.lif.LIFRecurrent", false]], "lifrecurrentcell (class in norse.torch.module.lif)": [[244, "norse.torch.module.lif.LIFRecurrentCell", false]], "lifrefraccell (class in norse.torch.module.lif_refrac)": [[259, "norse.torch.module.lif_refrac.LIFRefracCell", false]], "lifrefracrecurrentcell (class in norse.torch.module.lif_refrac)": [[260, "norse.torch.module.lif_refrac.LIFRefracRecurrentCell", false]], "lifstate (class in norse.torch.module.lif)": [[245, "norse.torch.module.lif.LIFState", false]], "lilinearcell (class in norse.torch.module.leaky_integrator)": [[237, "norse.torch.module.leaky_integrator.LILinearCell", false]], "liparameters (class in norse.torch.functional.leaky_integrator)": [[190, "norse.torch.functional.leaky_integrator.LIParameters", false]], "liparameters (class in norse.torch.module.leaky_integrator)": [[238, "norse.torch.module.leaky_integrator.LIParameters", false]], "listate (class in norse.torch.functional.leaky_integrator)": [[191, "norse.torch.functional.leaky_integrator.LIState", false]], "listate (class in norse.torch.module.leaky_integrator)": [[239, "norse.torch.module.leaky_integrator.LIState", false]], "logical_and() (in module norse.torch.functional.logical)": [[205, "norse.torch.functional.logical.logical_and", false]], "logical_or() (in module norse.torch.functional.logical)": [[206, "norse.torch.functional.logical.logical_or", false]], "logical_xor() (in module norse.torch.functional.logical)": [[207, "norse.torch.functional.logical.logical_xor", false]], "lsnn (class in norse.torch.module.lsnn)": [[261, "norse.torch.module.lsnn.LSNN", false]], "lsnncell (class in norse.torch.module.lsnn)": [[262, "norse.torch.module.lsnn.LSNNCell", false]], "lsnnrecurrent (class in norse.torch.module.lsnn)": [[263, "norse.torch.module.lsnn.LSNNRecurrent", false]], "lsnnrecurrentcell (class in norse.torch.module.lsnn)": [[264, "norse.torch.module.lsnn.LSNNRecurrentCell", false]], "mixed_mode (in module norse.torch.functional.izhikevich)": [[179, "norse.torch.functional.izhikevich.mixed_mode", false]], "module": [[0, "module-norse", false], [1, "module-norse.benchmark", false], [2, "module-norse.benchmark.benchmark", false], [3, "module-norse.benchmark.main", false], [4, "module-norse.benchmark.norse_lif", false], [5, "module-norse.benchmark.plot", false], [6, "module-norse.dataset", false], [7, "module-norse.dataset.memory", false], [8, "module-norse.dataset.spiking_heidelberg", false], [9, "module-norse.task", false], [10, "module-norse.task.correlation_experiment", false], [11, "module-norse.task.mnist", false], [12, "module-norse.task.mnist_pl", false], [13, "module-norse.torch", false], [14, "module-norse.torch.functional", false], [15, "module-norse.torch.functional.adjoint", false], [16, "module-norse.torch.functional.adjoint.lif_adjoint", false], [17, "module-norse.torch.functional.adjoint.lif_mc_adjoint", false], [18, "module-norse.torch.functional.adjoint.lif_mc_refrac_adjoint", false], [19, "module-norse.torch.functional.adjoint.lif_refrac_adjoint", false], [20, "module-norse.torch.functional.adjoint.lsnn_adjoint", false], [21, "module-norse.torch.functional.adjoint.test", false], [22, "module-norse.torch.functional.adjoint.test.test_lif_adjoint", false], [23, "module-norse.torch.functional.adjoint.test.test_lif_refrac_adjoint", false], [24, "module-norse.torch.functional.adjoint.test.test_lsnn_adjoint", false], [25, "module-norse.torch.functional.coba_lif", false], [26, "module-norse.torch.functional.correlation_sensor", false], [27, "module-norse.torch.functional.decode", false], [28, "module-norse.torch.functional.encode", false], [29, "module-norse.torch.functional.filter", false], [30, "module-norse.torch.functional.heaviside", false], [31, "module-norse.torch.functional.iaf", false], [32, "module-norse.torch.functional.izhikevich", false], [33, "module-norse.torch.functional.leaky_integrator", false], [34, "module-norse.torch.functional.leaky_integrator_box", false], [35, "module-norse.torch.functional.lif", false], [36, "module-norse.torch.functional.lif_adex", false], [37, "module-norse.torch.functional.lif_adex_refrac", false], [38, "module-norse.torch.functional.lif_box", false], [39, "module-norse.torch.functional.lif_correlation", false], [40, "module-norse.torch.functional.lif_ex", false], [41, "module-norse.torch.functional.lif_mc", false], [42, "module-norse.torch.functional.lif_mc_refrac", false], [43, "module-norse.torch.functional.lif_refrac", false], [44, "module-norse.torch.functional.lift", false], [45, "module-norse.torch.functional.logical", false], [46, "module-norse.torch.functional.lsnn", false], [47, "module-norse.torch.functional.parameter", false], [48, "module-norse.torch.functional.receptive_field", false], [49, "module-norse.torch.functional.regularization", false], [50, "module-norse.torch.functional.reset", false], [51, "module-norse.torch.functional.spikes_to_times_decoder", false], [52, "module-norse.torch.functional.stdp", false], [53, "module-norse.torch.functional.stdp_sensor", false], [54, "module-norse.torch.functional.superspike", false], [55, "module-norse.torch.functional.test", false], [56, "module-norse.torch.functional.test.test_coba_lif", false], [57, "module-norse.torch.functional.test.test_decode", false], [58, "module-norse.torch.functional.test.test_encode", false], [59, "module-norse.torch.functional.test.test_exp_filter", false], [60, "module-norse.torch.functional.test.test_heaviside", false], [61, "module-norse.torch.functional.test.test_iaf", false], [62, "module-norse.torch.functional.test.test_izhikevich", false], [63, "module-norse.torch.functional.test.test_leaky_integrator", false], [64, "module-norse.torch.functional.test.test_leaky_integrator_box", false], [65, "module-norse.torch.functional.test.test_lif", false], [66, "module-norse.torch.functional.test.test_lif_adex", false], [67, "module-norse.torch.functional.test.test_lif_adex_refrac", false], [68, "module-norse.torch.functional.test.test_lif_box", false], [69, "module-norse.torch.functional.test.test_lif_ex", false], [70, "module-norse.torch.functional.test.test_lif_mc", false], [71, "module-norse.torch.functional.test.test_lif_mc_refrac", false], [72, "module-norse.torch.functional.test.test_lif_refrac", false], [73, "module-norse.torch.functional.test.test_lift", false], [74, "module-norse.torch.functional.test.test_logical", false], [75, "module-norse.torch.functional.test.test_lsnn", false], [76, "module-norse.torch.functional.test.test_receptive_field", false], [77, "module-norse.torch.functional.test.test_regularization", false], [78, "module-norse.torch.functional.test.test_spikes_to_times_decoder", false], [79, "module-norse.torch.functional.test.test_stdp", false], [80, "module-norse.torch.functional.test.test_stdp_sensor", false], [81, "module-norse.torch.functional.test.test_superspike", false], [82, "module-norse.torch.functional.test.test_threshold", false], [83, "module-norse.torch.functional.test.test_tsodyks_makram", false], [84, "module-norse.torch.functional.threshold", false], [85, "module-norse.torch.functional.tsodyks_makram", false], [86, "module-norse.torch.models", false], [87, "module-norse.torch.models.conv", false], [88, "module-norse.torch.models.mobilenet", false], [89, "module-norse.torch.models.test", false], [90, "module-norse.torch.models.test.test_conv", false], [91, "module-norse.torch.models.test.test_mobilenet", false], [92, "module-norse.torch.models.test.test_vgg", false], [93, "module-norse.torch.models.vgg", false], [94, "module-norse.torch.module", false], [95, "module-norse.torch.module.coba_lif", false], [96, "module-norse.torch.module.conv", false], [97, "module-norse.torch.module.encode", false], [98, "module-norse.torch.module.exp_filter", false], [99, "module-norse.torch.module.iaf", false], [100, "module-norse.torch.module.izhikevich", false], [101, "module-norse.torch.module.leaky_integrator", false], [102, "module-norse.torch.module.leaky_integrator_box", false], [103, "module-norse.torch.module.lif", false], [104, "module-norse.torch.module.lif_adex", false], [105, "module-norse.torch.module.lif_adex_refrac", false], [106, "module-norse.torch.module.lif_box", false], [107, "module-norse.torch.module.lif_correlation", false], [108, "module-norse.torch.module.lif_ex", false], [109, "module-norse.torch.module.lif_mc", false], [110, "module-norse.torch.module.lif_mc_refrac", false], [111, "module-norse.torch.module.lif_refrac", false], [112, "module-norse.torch.module.lift", false], [113, "module-norse.torch.module.lsnn", false], [114, "module-norse.torch.module.receptive_field", false], [115, "module-norse.torch.module.regularization", false], [116, "module-norse.torch.module.sequential", false], [117, "module-norse.torch.module.snn", false], [118, "module-norse.torch.module.spikes_to_times_decoder", false], [119, "module-norse.torch.module.test", false], [120, "module-norse.torch.module.test.test_coba", false], [121, "module-norse.torch.module.test.test_conv", false], [122, "module-norse.torch.module.test.test_encode", false], [123, "module-norse.torch.module.test.test_exp_filter", false], [124, "module-norse.torch.module.test.test_iaf", false], [125, "module-norse.torch.module.test.test_izhikevich", false], [126, "module-norse.torch.module.test.test_leaky_integrator", false], [127, "module-norse.torch.module.test.test_leaky_integrator_box", false], [128, "module-norse.torch.module.test.test_lif", false], [129, "module-norse.torch.module.test.test_lif_adex", false], [130, "module-norse.torch.module.test.test_lif_adex_refrac", false], [131, "module-norse.torch.module.test.test_lif_box", false], [132, "module-norse.torch.module.test.test_lif_correlation", false], [133, "module-norse.torch.module.test.test_lif_ex", false], [134, "module-norse.torch.module.test.test_lif_mc", false], [135, "module-norse.torch.module.test.test_lif_mc_refrac", false], [136, "module-norse.torch.module.test.test_lif_refrac", false], [137, "module-norse.torch.module.test.test_lift", false], [138, "module-norse.torch.module.test.test_lsnn", false], [139, "module-norse.torch.module.test.test_receptive_field", false], [140, "module-norse.torch.module.test.test_regularization", false], [141, "module-norse.torch.module.test.test_sequential", false], [142, "module-norse.torch.module.test.test_snn", false], [143, "module-norse.torch.module.test.test_spikes_to_times_decoder", false], [144, "module-norse.torch.module.test.test_training", false], [145, "module-norse.torch.utils", false], [146, "module-norse.torch.utils.clone", false], [147, "module-norse.torch.utils.export_nir", false], [148, "module-norse.torch.utils.import_nir", false], [149, "module-norse.torch.utils.plot", false], [150, "module-norse.torch.utils.plot.plot", false], [151, "module-norse.torch.utils.pytree", false], [152, "module-norse.torch.utils.state", false], [153, "module-norse.torch.utils.tensorboard", false], [154, "module-norse.torch.utils.tensorboard.tensorboard", false], [155, "module-norse.torch.utils.test", false], [156, "module-norse.torch.utils.test.test_nir_export", false], [157, "module-norse.torch.utils.test.test_nir_import", false], [158, "module-norse.torch.utils.test.test_tensorboard", false], [159, "module-norse.utils", false], [164, "module-norse.torch.functional.heaviside", false], [204, "module-norse.torch.functional.lift", false], [268, "module-norse.torch.module", false], [268, "module-norse.torch.module.coba_lif", false], [268, "module-norse.torch.module.conv", false], [268, "module-norse.torch.module.encode", false], [268, "module-norse.torch.module.iaf", false], [268, "module-norse.torch.module.izhikevich", false], [268, "module-norse.torch.module.leaky_integrator", false], [268, "module-norse.torch.module.lif", false], [268, "module-norse.torch.module.lif_adex", false], [268, "module-norse.torch.module.lif_box", false], [268, "module-norse.torch.module.lif_ex", false], [268, "module-norse.torch.module.lif_mc", false], [268, "module-norse.torch.module.lif_mc_refrac", false], [268, "module-norse.torch.module.lif_refrac", false], [268, "module-norse.torch.module.lsnn", false], [268, "module-norse.torch.module.receptive_field", false], [269, "module-0", false], [269, "module-1", false], [269, "module-2", false], [269, "module-3", false], [269, "module-4", false], [269, "module-5", false], [269, "module-6", false], [269, "module-7", false], [269, "module-norse.torch.functional", false], [269, "module-norse.torch.functional.coba_lif", false], [269, "module-norse.torch.functional.iaf", false], [269, "module-norse.torch.functional.izhikevich", false], [269, "module-norse.torch.functional.leaky_integrator", false], [269, "module-norse.torch.functional.lif_adex", false], [269, "module-norse.torch.functional.lif_box", false], [269, "module-norse.torch.functional.lif_ex", false], [269, "module-norse.torch.functional.logical", false], [269, "module-norse.torch.functional.receptive_field", false], [269, "module-norse.torch.functional.regularization", false]], "muller_c() (in module norse.torch.functional.logical)": [[208, "norse.torch.functional.logical.muller_c", false]], "norse": [[0, "module-norse", false]], "norse.benchmark": [[1, "module-norse.benchmark", false]], "norse.benchmark.benchmark": [[2, "module-norse.benchmark.benchmark", false]], "norse.benchmark.main": [[3, "module-norse.benchmark.main", false]], "norse.benchmark.norse_lif": [[4, "module-norse.benchmark.norse_lif", false]], "norse.benchmark.plot": [[5, "module-norse.benchmark.plot", false]], "norse.dataset": [[6, "module-norse.dataset", false]], "norse.dataset.memory": [[7, "module-norse.dataset.memory", false]], "norse.dataset.spiking_heidelberg": [[8, "module-norse.dataset.spiking_heidelberg", false]], "norse.task": [[9, "module-norse.task", false]], "norse.task.correlation_experiment": [[10, "module-norse.task.correlation_experiment", false]], "norse.task.mnist": [[11, "module-norse.task.mnist", false]], "norse.task.mnist_pl": [[12, "module-norse.task.mnist_pl", false]], "norse.torch": [[13, "module-norse.torch", false]], "norse.torch.functional": [[14, "module-norse.torch.functional", false], [269, "module-0", false], [269, "module-1", false], [269, "module-2", false], [269, "module-3", false], [269, "module-4", false], [269, "module-5", false], [269, "module-6", false], [269, "module-7", false], [269, "module-norse.torch.functional", false]], "norse.torch.functional.adjoint": [[15, "module-norse.torch.functional.adjoint", false]], "norse.torch.functional.adjoint.lif_adjoint": [[16, "module-norse.torch.functional.adjoint.lif_adjoint", false]], "norse.torch.functional.adjoint.lif_mc_adjoint": [[17, "module-norse.torch.functional.adjoint.lif_mc_adjoint", false]], "norse.torch.functional.adjoint.lif_mc_refrac_adjoint": [[18, "module-norse.torch.functional.adjoint.lif_mc_refrac_adjoint", false]], "norse.torch.functional.adjoint.lif_refrac_adjoint": [[19, "module-norse.torch.functional.adjoint.lif_refrac_adjoint", false]], "norse.torch.functional.adjoint.lsnn_adjoint": [[20, "module-norse.torch.functional.adjoint.lsnn_adjoint", false]], "norse.torch.functional.adjoint.test": [[21, "module-norse.torch.functional.adjoint.test", false]], "norse.torch.functional.adjoint.test.test_lif_adjoint": [[22, "module-norse.torch.functional.adjoint.test.test_lif_adjoint", false]], "norse.torch.functional.adjoint.test.test_lif_refrac_adjoint": [[23, "module-norse.torch.functional.adjoint.test.test_lif_refrac_adjoint", false]], "norse.torch.functional.adjoint.test.test_lsnn_adjoint": [[24, "module-norse.torch.functional.adjoint.test.test_lsnn_adjoint", false]], "norse.torch.functional.coba_lif": [[25, "module-norse.torch.functional.coba_lif", false], [269, "module-norse.torch.functional.coba_lif", false]], "norse.torch.functional.correlation_sensor": [[26, "module-norse.torch.functional.correlation_sensor", false]], "norse.torch.functional.decode": [[27, "module-norse.torch.functional.decode", false]], "norse.torch.functional.encode": [[28, "module-norse.torch.functional.encode", false]], "norse.torch.functional.filter": [[29, "module-norse.torch.functional.filter", false]], "norse.torch.functional.heaviside": [[30, "module-norse.torch.functional.heaviside", false], [164, "module-norse.torch.functional.heaviside", false]], "norse.torch.functional.iaf": [[31, "module-norse.torch.functional.iaf", false], [269, "module-norse.torch.functional.iaf", false]], "norse.torch.functional.izhikevich": [[32, "module-norse.torch.functional.izhikevich", false], [269, "module-norse.torch.functional.izhikevich", false]], "norse.torch.functional.leaky_integrator": [[33, "module-norse.torch.functional.leaky_integrator", false], [269, "module-norse.torch.functional.leaky_integrator", false]], "norse.torch.functional.leaky_integrator_box": [[34, "module-norse.torch.functional.leaky_integrator_box", false]], "norse.torch.functional.lif": [[35, "module-norse.torch.functional.lif", false]], "norse.torch.functional.lif_adex": [[36, "module-norse.torch.functional.lif_adex", false], [269, "module-norse.torch.functional.lif_adex", false]], "norse.torch.functional.lif_adex_refrac": [[37, "module-norse.torch.functional.lif_adex_refrac", false]], "norse.torch.functional.lif_box": [[38, "module-norse.torch.functional.lif_box", false], [269, "module-norse.torch.functional.lif_box", false]], "norse.torch.functional.lif_correlation": [[39, "module-norse.torch.functional.lif_correlation", false]], "norse.torch.functional.lif_ex": [[40, "module-norse.torch.functional.lif_ex", false], [269, "module-norse.torch.functional.lif_ex", false]], "norse.torch.functional.lif_mc": [[41, "module-norse.torch.functional.lif_mc", false]], "norse.torch.functional.lif_mc_refrac": [[42, "module-norse.torch.functional.lif_mc_refrac", false]], "norse.torch.functional.lif_refrac": [[43, "module-norse.torch.functional.lif_refrac", false]], "norse.torch.functional.lift": [[44, "module-norse.torch.functional.lift", false], [204, "module-norse.torch.functional.lift", false]], "norse.torch.functional.logical": [[45, "module-norse.torch.functional.logical", false], [269, "module-norse.torch.functional.logical", false]], "norse.torch.functional.lsnn": [[46, "module-norse.torch.functional.lsnn", false]], "norse.torch.functional.parameter": [[47, "module-norse.torch.functional.parameter", false]], "norse.torch.functional.receptive_field": [[48, "module-norse.torch.functional.receptive_field", false], [269, "module-norse.torch.functional.receptive_field", false]], "norse.torch.functional.regularization": [[49, "module-norse.torch.functional.regularization", false], [269, "module-norse.torch.functional.regularization", false]], "norse.torch.functional.reset": [[50, "module-norse.torch.functional.reset", false]], "norse.torch.functional.spikes_to_times_decoder": [[51, "module-norse.torch.functional.spikes_to_times_decoder", false]], "norse.torch.functional.stdp": [[52, "module-norse.torch.functional.stdp", false]], "norse.torch.functional.stdp_sensor": [[53, "module-norse.torch.functional.stdp_sensor", false]], "norse.torch.functional.superspike": [[54, "module-norse.torch.functional.superspike", false]], "norse.torch.functional.test": [[55, "module-norse.torch.functional.test", false]], "norse.torch.functional.test.test_coba_lif": [[56, "module-norse.torch.functional.test.test_coba_lif", false]], "norse.torch.functional.test.test_decode": [[57, "module-norse.torch.functional.test.test_decode", false]], "norse.torch.functional.test.test_encode": [[58, "module-norse.torch.functional.test.test_encode", false]], "norse.torch.functional.test.test_exp_filter": [[59, "module-norse.torch.functional.test.test_exp_filter", false]], "norse.torch.functional.test.test_heaviside": [[60, "module-norse.torch.functional.test.test_heaviside", false]], "norse.torch.functional.test.test_iaf": [[61, "module-norse.torch.functional.test.test_iaf", false]], "norse.torch.functional.test.test_izhikevich": [[62, "module-norse.torch.functional.test.test_izhikevich", false]], "norse.torch.functional.test.test_leaky_integrator": [[63, "module-norse.torch.functional.test.test_leaky_integrator", false]], "norse.torch.functional.test.test_leaky_integrator_box": [[64, "module-norse.torch.functional.test.test_leaky_integrator_box", false]], "norse.torch.functional.test.test_lif": [[65, "module-norse.torch.functional.test.test_lif", false]], "norse.torch.functional.test.test_lif_adex": [[66, "module-norse.torch.functional.test.test_lif_adex", false]], "norse.torch.functional.test.test_lif_adex_refrac": [[67, "module-norse.torch.functional.test.test_lif_adex_refrac", false]], "norse.torch.functional.test.test_lif_box": [[68, "module-norse.torch.functional.test.test_lif_box", false]], "norse.torch.functional.test.test_lif_ex": [[69, "module-norse.torch.functional.test.test_lif_ex", false]], "norse.torch.functional.test.test_lif_mc": [[70, "module-norse.torch.functional.test.test_lif_mc", false]], "norse.torch.functional.test.test_lif_mc_refrac": [[71, "module-norse.torch.functional.test.test_lif_mc_refrac", false]], "norse.torch.functional.test.test_lif_refrac": [[72, "module-norse.torch.functional.test.test_lif_refrac", false]], "norse.torch.functional.test.test_lift": [[73, "module-norse.torch.functional.test.test_lift", false]], "norse.torch.functional.test.test_logical": [[74, "module-norse.torch.functional.test.test_logical", false]], "norse.torch.functional.test.test_lsnn": [[75, "module-norse.torch.functional.test.test_lsnn", false]], "norse.torch.functional.test.test_receptive_field": [[76, "module-norse.torch.functional.test.test_receptive_field", false]], "norse.torch.functional.test.test_regularization": [[77, "module-norse.torch.functional.test.test_regularization", false]], "norse.torch.functional.test.test_spikes_to_times_decoder": [[78, "module-norse.torch.functional.test.test_spikes_to_times_decoder", false]], "norse.torch.functional.test.test_stdp": [[79, "module-norse.torch.functional.test.test_stdp", false]], "norse.torch.functional.test.test_stdp_sensor": [[80, "module-norse.torch.functional.test.test_stdp_sensor", false]], "norse.torch.functional.test.test_superspike": [[81, "module-norse.torch.functional.test.test_superspike", false]], "norse.torch.functional.test.test_threshold": [[82, "module-norse.torch.functional.test.test_threshold", false]], "norse.torch.functional.test.test_tsodyks_makram": [[83, "module-norse.torch.functional.test.test_tsodyks_makram", false]], "norse.torch.functional.threshold": [[84, "module-norse.torch.functional.threshold", false]], "norse.torch.functional.tsodyks_makram": [[85, "module-norse.torch.functional.tsodyks_makram", false]], "norse.torch.models": [[86, "module-norse.torch.models", false]], "norse.torch.models.conv": [[87, "module-norse.torch.models.conv", false]], "norse.torch.models.mobilenet": [[88, "module-norse.torch.models.mobilenet", false]], "norse.torch.models.test": [[89, "module-norse.torch.models.test", false]], "norse.torch.models.test.test_conv": [[90, "module-norse.torch.models.test.test_conv", false]], "norse.torch.models.test.test_mobilenet": [[91, "module-norse.torch.models.test.test_mobilenet", false]], "norse.torch.models.test.test_vgg": [[92, "module-norse.torch.models.test.test_vgg", false]], "norse.torch.models.vgg": [[93, "module-norse.torch.models.vgg", false]], "norse.torch.module": [[94, "module-norse.torch.module", false], [268, "module-norse.torch.module", false]], "norse.torch.module.coba_lif": [[95, "module-norse.torch.module.coba_lif", false], [268, "module-norse.torch.module.coba_lif", false]], "norse.torch.module.conv": [[96, "module-norse.torch.module.conv", false], [268, "module-norse.torch.module.conv", false]], "norse.torch.module.encode": [[97, "module-norse.torch.module.encode", false], [268, "module-norse.torch.module.encode", false]], "norse.torch.module.exp_filter": [[98, "module-norse.torch.module.exp_filter", false]], "norse.torch.module.iaf": [[99, "module-norse.torch.module.iaf", false], [268, "module-norse.torch.module.iaf", false]], "norse.torch.module.izhikevich": [[100, "module-norse.torch.module.izhikevich", false], [268, "module-norse.torch.module.izhikevich", false]], "norse.torch.module.leaky_integrator": [[101, "module-norse.torch.module.leaky_integrator", false], [268, "module-norse.torch.module.leaky_integrator", false]], "norse.torch.module.leaky_integrator_box": [[102, "module-norse.torch.module.leaky_integrator_box", false]], "norse.torch.module.lif": [[103, "module-norse.torch.module.lif", false], [268, "module-norse.torch.module.lif", false]], "norse.torch.module.lif_adex": [[104, "module-norse.torch.module.lif_adex", false], [268, "module-norse.torch.module.lif_adex", false]], "norse.torch.module.lif_adex_refrac": [[105, "module-norse.torch.module.lif_adex_refrac", false]], "norse.torch.module.lif_box": [[106, "module-norse.torch.module.lif_box", false], [268, "module-norse.torch.module.lif_box", false]], "norse.torch.module.lif_correlation": [[107, "module-norse.torch.module.lif_correlation", false]], "norse.torch.module.lif_ex": [[108, "module-norse.torch.module.lif_ex", false], [268, "module-norse.torch.module.lif_ex", false]], "norse.torch.module.lif_mc": [[109, "module-norse.torch.module.lif_mc", false], [268, "module-norse.torch.module.lif_mc", false]], "norse.torch.module.lif_mc_refrac": [[110, "module-norse.torch.module.lif_mc_refrac", false], [268, "module-norse.torch.module.lif_mc_refrac", false]], "norse.torch.module.lif_refrac": [[111, "module-norse.torch.module.lif_refrac", false], [268, "module-norse.torch.module.lif_refrac", false]], "norse.torch.module.lift": [[112, "module-norse.torch.module.lift", false]], "norse.torch.module.lsnn": [[113, "module-norse.torch.module.lsnn", false], [268, "module-norse.torch.module.lsnn", false]], "norse.torch.module.receptive_field": [[114, "module-norse.torch.module.receptive_field", false], [268, "module-norse.torch.module.receptive_field", false]], "norse.torch.module.regularization": [[115, "module-norse.torch.module.regularization", false]], "norse.torch.module.sequential": [[116, "module-norse.torch.module.sequential", false]], "norse.torch.module.snn": [[117, "module-norse.torch.module.snn", false]], "norse.torch.module.spikes_to_times_decoder": [[118, "module-norse.torch.module.spikes_to_times_decoder", false]], "norse.torch.module.test": [[119, "module-norse.torch.module.test", false]], "norse.torch.module.test.test_coba": [[120, "module-norse.torch.module.test.test_coba", false]], "norse.torch.module.test.test_conv": [[121, "module-norse.torch.module.test.test_conv", false]], "norse.torch.module.test.test_encode": [[122, "module-norse.torch.module.test.test_encode", false]], "norse.torch.module.test.test_exp_filter": [[123, "module-norse.torch.module.test.test_exp_filter", false]], "norse.torch.module.test.test_iaf": [[124, "module-norse.torch.module.test.test_iaf", false]], "norse.torch.module.test.test_izhikevich": [[125, "module-norse.torch.module.test.test_izhikevich", false]], "norse.torch.module.test.test_leaky_integrator": [[126, "module-norse.torch.module.test.test_leaky_integrator", false]], "norse.torch.module.test.test_leaky_integrator_box": [[127, "module-norse.torch.module.test.test_leaky_integrator_box", false]], "norse.torch.module.test.test_lif": [[128, "module-norse.torch.module.test.test_lif", false]], "norse.torch.module.test.test_lif_adex": [[129, "module-norse.torch.module.test.test_lif_adex", false]], "norse.torch.module.test.test_lif_adex_refrac": [[130, "module-norse.torch.module.test.test_lif_adex_refrac", false]], "norse.torch.module.test.test_lif_box": [[131, "module-norse.torch.module.test.test_lif_box", false]], "norse.torch.module.test.test_lif_correlation": [[132, "module-norse.torch.module.test.test_lif_correlation", false]], "norse.torch.module.test.test_lif_ex": [[133, "module-norse.torch.module.test.test_lif_ex", false]], "norse.torch.module.test.test_lif_mc": [[134, "module-norse.torch.module.test.test_lif_mc", false]], "norse.torch.module.test.test_lif_mc_refrac": [[135, "module-norse.torch.module.test.test_lif_mc_refrac", false]], "norse.torch.module.test.test_lif_refrac": [[136, "module-norse.torch.module.test.test_lif_refrac", false]], "norse.torch.module.test.test_lift": [[137, "module-norse.torch.module.test.test_lift", false]], "norse.torch.module.test.test_lsnn": [[138, "module-norse.torch.module.test.test_lsnn", false]], "norse.torch.module.test.test_receptive_field": [[139, "module-norse.torch.module.test.test_receptive_field", false]], "norse.torch.module.test.test_regularization": [[140, "module-norse.torch.module.test.test_regularization", false]], "norse.torch.module.test.test_sequential": [[141, "module-norse.torch.module.test.test_sequential", false]], "norse.torch.module.test.test_snn": [[142, "module-norse.torch.module.test.test_snn", false]], "norse.torch.module.test.test_spikes_to_times_decoder": [[143, "module-norse.torch.module.test.test_spikes_to_times_decoder", false]], "norse.torch.module.test.test_training": [[144, "module-norse.torch.module.test.test_training", false]], "norse.torch.utils": [[145, "module-norse.torch.utils", false]], "norse.torch.utils.clone": [[146, "module-norse.torch.utils.clone", false]], "norse.torch.utils.export_nir": [[147, "module-norse.torch.utils.export_nir", false]], "norse.torch.utils.import_nir": [[148, "module-norse.torch.utils.import_nir", false]], "norse.torch.utils.plot": [[149, "module-norse.torch.utils.plot", false]], "norse.torch.utils.plot.plot": [[150, "module-norse.torch.utils.plot.plot", false]], "norse.torch.utils.pytree": [[151, "module-norse.torch.utils.pytree", false]], "norse.torch.utils.state": [[152, "module-norse.torch.utils.state", false]], "norse.torch.utils.tensorboard": [[153, "module-norse.torch.utils.tensorboard", false]], "norse.torch.utils.tensorboard.tensorboard": [[154, "module-norse.torch.utils.tensorboard.tensorboard", false]], "norse.torch.utils.test": [[155, "module-norse.torch.utils.test", false]], "norse.torch.utils.test.test_nir_export": [[156, "module-norse.torch.utils.test.test_nir_export", false]], "norse.torch.utils.test.test_nir_import": [[157, "module-norse.torch.utils.test.test_nir_import", false]], "norse.torch.utils.test.test_tensorboard": [[158, "module-norse.torch.utils.test.test_tensorboard", false]], "norse.utils": [[159, "module-norse.utils", false]], "phasic_bursting (in module norse.torch.functional.izhikevich)": [[180, "norse.torch.functional.izhikevich.phasic_bursting", false]], "phasic_spiking (in module norse.torch.functional.izhikevich)": [[181, "norse.torch.functional.izhikevich.phasic_spiking", false]], "poissonencoder (class in norse.torch.module.encode)": [[220, "norse.torch.module.encode.PoissonEncoder", false]], "poissonencoderstep (class in norse.torch.module.encode)": [[221, "norse.torch.module.encode.PoissonEncoderStep", false]], "populationencoder (class in norse.torch.module.encode)": [[222, "norse.torch.module.encode.PopulationEncoder", false]], "posedge_detector() (in module norse.torch.functional.logical)": [[209, "norse.torch.functional.logical.posedge_detector", false]], "rebound_burst (in module norse.torch.functional.izhikevich)": [[182, "norse.torch.functional.izhikevich.rebound_burst", false]], "rebound_spike (in module norse.torch.functional.izhikevich)": [[183, "norse.torch.functional.izhikevich.rebound_spike", false]], "regularize_step() (in module norse.torch.functional.regularization)": [[214, "norse.torch.functional.regularization.regularize_step", false]], "resonator (in module norse.torch.functional.izhikevich)": [[184, "norse.torch.functional.izhikevich.resonator", false]], "signedpoissonencoder (class in norse.torch.module.encode)": [[223, "norse.torch.module.encode.SignedPoissonEncoder", false]], "spatial_receptive_field() (in module norse.torch.functional.receptive_field)": [[211, "norse.torch.functional.receptive_field.spatial_receptive_field", false]], "spatial_receptive_fields_with_derivatives() (in module norse.torch.functional.receptive_field)": [[212, "norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives", false]], "spatialreceptivefield2d (class in norse.torch.module.receptive_field)": [[265, "norse.torch.module.receptive_field.SpatialReceptiveField2d", false]], "spike_accumulator() (in module norse.torch.functional.regularization)": [[215, "norse.torch.functional.regularization.spike_accumulator", false]], "spike_frequency_adaptation (in module norse.torch.functional.izhikevich)": [[185, "norse.torch.functional.izhikevich.spike_frequency_adaptation", false]], "spike_latency (in module norse.torch.functional.izhikevich)": [[186, "norse.torch.functional.izhikevich.spike_latency", false]], "spikelatencyencoder (class in norse.torch.module.encode)": [[224, "norse.torch.module.encode.SpikeLatencyEncoder", false]], "spikelatencylifencoder (class in norse.torch.module.encode)": [[225, "norse.torch.module.encode.SpikeLatencyLIFEncoder", false]], "subthreshold_oscillation (in module norse.torch.functional.izhikevich)": [[187, "norse.torch.functional.izhikevich.subthreshold_oscillation", false]], "temporal_scale_distribution() (in module norse.torch.functional.receptive_field)": [[213, "norse.torch.functional.receptive_field.temporal_scale_distribution", false]], "temporalreceptivefield (class in norse.torch.module.receptive_field)": [[266, "norse.torch.module.receptive_field.TemporalReceptiveField", false]], "tonic_bursting (in module norse.torch.functional.izhikevich)": [[188, "norse.torch.functional.izhikevich.tonic_bursting", false]], "tonic_spiking (in module norse.torch.functional.izhikevich)": [[189, "norse.torch.functional.izhikevich.tonic_spiking", false]], "voltage_accumulator() (in module norse.torch.functional.regularization)": [[216, "norse.torch.functional.regularization.voltage_accumulator", false]]}, "objects": {"": [[0, 0, 0, "-", "norse"]], "norse": [[1, 0, 0, "-", "benchmark"], [6, 0, 0, "-", "dataset"], [9, 0, 0, "-", "task"], [13, 0, 0, "-", "torch"], [159, 0, 0, "-", "utils"]], "norse.benchmark": [[2, 0, 0, "-", "benchmark"], [3, 0, 0, "-", "main"], [4, 0, 0, "-", "norse_lif"], [5, 0, 0, "-", "plot"]], "norse.dataset": [[7, 0, 0, "-", "memory"], [8, 0, 0, "-", "spiking_heidelberg"]], "norse.task": [[10, 0, 0, "-", "correlation_experiment"], [11, 0, 0, "-", "mnist"], [12, 0, 0, "-", "mnist_pl"]], "norse.torch": [[269, 0, 0, "module-7", "functional"], [86, 0, 0, "-", "models"], [268, 0, 0, "-", "module"], [145, 0, 0, "-", "utils"]], "norse.torch.functional": [[15, 0, 0, "-", "adjoint"], [269, 0, 0, "-", "coba_lif"], [26, 0, 0, "-", "correlation_sensor"], [27, 0, 0, "-", "decode"], [28, 0, 0, "-", "encode"], [29, 0, 0, "-", "filter"], [164, 0, 0, "-", "heaviside"], [269, 0, 0, "-", "iaf"], [269, 0, 0, "-", "izhikevich"], [269, 0, 0, "-", "leaky_integrator"], [34, 0, 0, "-", "leaky_integrator_box"], [35, 0, 0, "-", "lif"], [269, 0, 0, "-", "lif_adex"], [37, 0, 0, "-", "lif_adex_refrac"], [269, 0, 0, "-", "lif_box"], [39, 0, 0, "-", "lif_correlation"], [269, 0, 0, "-", "lif_ex"], [41, 0, 0, "-", "lif_mc"], [42, 0, 0, "-", "lif_mc_refrac"], [43, 0, 0, "-", "lif_refrac"], [204, 0, 0, "-", "lift"], [269, 0, 0, "-", "logical"], [46, 0, 0, "-", "lsnn"], [47, 0, 0, "-", "parameter"], [269, 0, 0, "-", "receptive_field"], [269, 0, 0, "-", "regularization"], [50, 0, 0, "-", "reset"], [51, 0, 0, "-", "spikes_to_times_decoder"], [52, 0, 0, "-", "stdp"], [53, 0, 0, "-", "stdp_sensor"], [54, 0, 0, "-", "superspike"], [55, 0, 0, "-", "test"], [84, 0, 0, "-", "threshold"], [85, 0, 0, "-", "tsodyks_makram"]], "norse.torch.functional.adjoint": [[16, 0, 0, "-", "lif_adjoint"], [17, 0, 0, "-", "lif_mc_adjoint"], [18, 0, 0, "-", "lif_mc_refrac_adjoint"], [19, 0, 0, "-", "lif_refrac_adjoint"], [20, 0, 0, "-", "lsnn_adjoint"], [21, 0, 0, "-", "test"]], "norse.torch.functional.adjoint.test": [[22, 0, 0, "-", "test_lif_adjoint"], [23, 0, 0, "-", "test_lif_refrac_adjoint"], [24, 0, 0, "-", "test_lsnn_adjoint"]], "norse.torch.functional.coba_lif": [[161, 1, 1, "", "CobaLIFFeedForwardState"], [162, 1, 1, "", "CobaLIFParameters"], [163, 3, 1, "", "coba_lif_feed_forward_step"]], "norse.torch.functional.coba_lif.CobaLIFFeedForwardState": [[161, 2, 1, "", "__init__"]], "norse.torch.functional.coba_lif.CobaLIFParameters": [[162, 2, 1, "", "__init__"]], "norse.torch.functional.iaf": [[165, 1, 1, "", "IAFFeedForwardState"], [166, 1, 1, "", "IAFParameters"], [167, 3, 1, "", "iaf_feed_forward_step"]], "norse.torch.functional.iaf.IAFFeedForwardState": [[165, 2, 1, "", "__init__"]], "norse.torch.functional.iaf.IAFParameters": [[166, 2, 1, "", "__init__"]], "norse.torch.functional.izhikevich": [[168, 1, 1, "", "IzhikevichParameters"], [169, 1, 1, "", "IzhikevichSpikingBehavior"], [170, 4, 1, "", "accomodation"], [171, 4, 1, "", "bistability"], [172, 4, 1, "", "class_1_exc"], [173, 4, 1, "", "class_2_exc"], [174, 4, 1, "", "dap"], [175, 4, 1, "", "inhibition_induced_bursting"], [176, 4, 1, "", "inhibition_induced_spiking"], [177, 4, 1, "", "integrator"], [178, 3, 1, "", "izhikevich_feed_forward_step"], [179, 4, 1, "", "mixed_mode"], [180, 4, 1, "", "phasic_bursting"], [181, 4, 1, "", "phasic_spiking"], [182, 4, 1, "", "rebound_burst"], [183, 4, 1, "", "rebound_spike"], [184, 4, 1, "", "resonator"], [185, 4, 1, "", "spike_frequency_adaptation"], [186, 4, 1, "", "spike_latency"], [187, 4, 1, "", "subthreshold_oscillation"], [188, 4, 1, "", "tonic_bursting"], [189, 4, 1, "", "tonic_spiking"]], "norse.torch.functional.izhikevich.IzhikevichParameters": [[168, 2, 1, "", "__init__"]], "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior": [[169, 2, 1, "", "__init__"]], "norse.torch.functional.leaky_integrator": [[190, 1, 1, "", "LIParameters"], [191, 1, 1, "", "LIState"], [192, 3, 1, "", "li_feed_forward_step"]], "norse.torch.functional.leaky_integrator.LIParameters": [[190, 2, 1, "", "__init__"]], "norse.torch.functional.leaky_integrator.LIState": [[191, 2, 1, "", "__init__"]], "norse.torch.functional.lif_adex": [[193, 1, 1, "", "LIFAdExFeedForwardState"], [194, 1, 1, "", "LIFAdExParameters"], [195, 3, 1, "", "lif_adex_current_encoder"], [196, 3, 1, "", "lif_adex_feed_forward_step"]], "norse.torch.functional.lif_adex.LIFAdExFeedForwardState": [[193, 2, 1, "", "__init__"]], "norse.torch.functional.lif_adex.LIFAdExParameters": [[194, 2, 1, "", "__init__"]], "norse.torch.functional.lif_box": [[197, 1, 1, "", "LIFBoxFeedForwardState"], [198, 1, 1, "", "LIFBoxParameters"], [199, 3, 1, "", "lif_box_feed_forward_step"]], "norse.torch.functional.lif_box.LIFBoxFeedForwardState": [[197, 2, 1, "", "__init__"]], "norse.torch.functional.lif_box.LIFBoxParameters": [[198, 2, 1, "", "__init__"]], "norse.torch.functional.lif_ex": [[200, 1, 1, "", "LIFExFeedForwardState"], [201, 1, 1, "", "LIFExParameters"], [202, 3, 1, "", "lif_ex_current_encoder"], [203, 3, 1, "", "lif_ex_feed_forward_step"]], "norse.torch.functional.lif_ex.LIFExFeedForwardState": [[200, 2, 1, "", "__init__"]], "norse.torch.functional.lif_ex.LIFExParameters": [[201, 2, 1, "", "__init__"]], "norse.torch.functional.logical": [[205, 3, 1, "", "logical_and"], [206, 3, 1, "", "logical_or"], [207, 3, 1, "", "logical_xor"], [208, 3, 1, "", "muller_c"], [209, 3, 1, "", "posedge_detector"]], "norse.torch.functional.receptive_field": [[210, 3, 1, "", "gaussian_kernel"], [211, 3, 1, "", "spatial_receptive_field"], [212, 3, 1, "", "spatial_receptive_fields_with_derivatives"], [213, 3, 1, "", "temporal_scale_distribution"]], "norse.torch.functional.regularization": [[214, 3, 1, "", "regularize_step"], [215, 3, 1, "", "spike_accumulator"], [216, 3, 1, "", "voltage_accumulator"]], "norse.torch.functional.test": [[56, 0, 0, "-", "test_coba_lif"], [57, 0, 0, "-", "test_decode"], [58, 0, 0, "-", "test_encode"], [59, 0, 0, "-", "test_exp_filter"], [60, 0, 0, "-", "test_heaviside"], [61, 0, 0, "-", "test_iaf"], [62, 0, 0, "-", "test_izhikevich"], [63, 0, 0, "-", "test_leaky_integrator"], [64, 0, 0, "-", "test_leaky_integrator_box"], [65, 0, 0, "-", "test_lif"], [66, 0, 0, "-", "test_lif_adex"], [67, 0, 0, "-", "test_lif_adex_refrac"], [68, 0, 0, "-", "test_lif_box"], [69, 0, 0, "-", "test_lif_ex"], [70, 0, 0, "-", "test_lif_mc"], [71, 0, 0, "-", "test_lif_mc_refrac"], [72, 0, 0, "-", "test_lif_refrac"], [73, 0, 0, "-", "test_lift"], [74, 0, 0, "-", "test_logical"], [75, 0, 0, "-", "test_lsnn"], [76, 0, 0, "-", "test_receptive_field"], [77, 0, 0, "-", "test_regularization"], [78, 0, 0, "-", "test_spikes_to_times_decoder"], [79, 0, 0, "-", "test_stdp"], [80, 0, 0, "-", "test_stdp_sensor"], [81, 0, 0, "-", "test_superspike"], [82, 0, 0, "-", "test_threshold"], [83, 0, 0, "-", "test_tsodyks_makram"]], "norse.torch.models": [[87, 0, 0, "-", "conv"], [88, 0, 0, "-", "mobilenet"], [89, 0, 0, "-", "test"], [93, 0, 0, "-", "vgg"]], "norse.torch.models.test": [[90, 0, 0, "-", "test_conv"], [91, 0, 0, "-", "test_mobilenet"], [92, 0, 0, "-", "test_vgg"]], "norse.torch.module": [[268, 0, 0, "-", "coba_lif"], [268, 0, 0, "-", "conv"], [268, 0, 0, "-", "encode"], [98, 0, 0, "-", "exp_filter"], [268, 0, 0, "-", "iaf"], [268, 0, 0, "-", "izhikevich"], [268, 0, 0, "-", "leaky_integrator"], [102, 0, 0, "-", "leaky_integrator_box"], [268, 0, 0, "-", "lif"], [268, 0, 0, "-", "lif_adex"], [105, 0, 0, "-", "lif_adex_refrac"], [268, 0, 0, "-", "lif_box"], [107, 0, 0, "-", "lif_correlation"], [268, 0, 0, "-", "lif_ex"], [268, 0, 0, "-", "lif_mc"], [268, 0, 0, "-", "lif_mc_refrac"], [268, 0, 0, "-", "lif_refrac"], [112, 0, 0, "-", "lift"], [268, 0, 0, "-", "lsnn"], [268, 0, 0, "-", "receptive_field"], [115, 0, 0, "-", "regularization"], [116, 0, 0, "-", "sequential"], [117, 0, 0, "-", "snn"], [118, 0, 0, "-", "spikes_to_times_decoder"], [119, 0, 0, "-", "test"]], "norse.torch.module.coba_lif": [[217, 1, 1, "", "CobaLIFCell"]], "norse.torch.module.coba_lif.CobaLIFCell": [[217, 2, 1, "", "__init__"]], "norse.torch.module.conv": [[218, 1, 1, "", "LConv2d"]], "norse.torch.module.conv.LConv2d": [[218, 2, 1, "", "__init__"]], "norse.torch.module.encode": [[219, 1, 1, "", "ConstantCurrentLIFEncoder"], [220, 1, 1, "", "PoissonEncoder"], [221, 1, 1, "", "PoissonEncoderStep"], [222, 1, 1, "", "PopulationEncoder"], [223, 1, 1, "", "SignedPoissonEncoder"], [224, 1, 1, "", "SpikeLatencyEncoder"], [225, 1, 1, "", "SpikeLatencyLIFEncoder"]], "norse.torch.module.encode.ConstantCurrentLIFEncoder": [[219, 2, 1, "", "__init__"]], "norse.torch.module.encode.PoissonEncoder": [[220, 2, 1, "", "__init__"]], "norse.torch.module.encode.PoissonEncoderStep": [[221, 2, 1, "", "__init__"]], "norse.torch.module.encode.PopulationEncoder": [[222, 2, 1, "", "__init__"]], "norse.torch.module.encode.SignedPoissonEncoder": [[223, 2, 1, "", "__init__"]], "norse.torch.module.encode.SpikeLatencyEncoder": [[224, 2, 1, "", "__init__"]], "norse.torch.module.encode.SpikeLatencyLIFEncoder": [[225, 2, 1, "", "__init__"]], "norse.torch.module.iaf": [[226, 1, 1, "", "IAFCell"], [227, 1, 1, "", "IAFFeedForwardState"], [228, 1, 1, "", "IAFParameters"]], "norse.torch.module.iaf.IAFCell": [[226, 2, 1, "", "__init__"]], "norse.torch.module.iaf.IAFFeedForwardState": [[227, 2, 1, "", "__init__"]], "norse.torch.module.iaf.IAFParameters": [[228, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich": [[229, 1, 1, "", "Izhikevich"], [230, 1, 1, "", "IzhikevichCell"], [231, 1, 1, "", "IzhikevichRecurrent"], [232, 1, 1, "", "IzhikevichRecurrentCell"], [233, 1, 1, "", "IzhikevichSpikingBehavior"], [234, 1, 1, "", "IzhikevichState"]], "norse.torch.module.izhikevich.Izhikevich": [[229, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichCell": [[230, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichRecurrent": [[231, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichRecurrentCell": [[232, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichSpikingBehavior": [[233, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichState": [[234, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator": [[235, 1, 1, "", "LI"], [236, 1, 1, "", "LICell"], [237, 1, 1, "", "LILinearCell"], [238, 1, 1, "", "LIParameters"], [239, 1, 1, "", "LIState"]], "norse.torch.module.leaky_integrator.LI": [[235, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LICell": [[236, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LILinearCell": [[237, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LIParameters": [[238, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LIState": [[239, 2, 1, "", "__init__"]], "norse.torch.module.lif": [[240, 1, 1, "", "LIF"], [241, 1, 1, "", "LIFCell"], [242, 1, 1, "", "LIFParameters"], [243, 1, 1, "", "LIFRecurrent"], [244, 1, 1, "", "LIFRecurrentCell"], [245, 1, 1, "", "LIFState"]], "norse.torch.module.lif.LIF": [[240, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFCell": [[241, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFParameters": [[242, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFRecurrent": [[243, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFRecurrentCell": [[244, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFState": [[245, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex": [[246, 1, 1, "", "LIFAdEx"], [247, 1, 1, "", "LIFAdExCell"], [248, 1, 1, "", "LIFAdExRecurrent"], [249, 1, 1, "", "LIFAdExRecurrentCell"]], "norse.torch.module.lif_adex.LIFAdEx": [[246, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex.LIFAdExCell": [[247, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex.LIFAdExRecurrent": [[248, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex.LIFAdExRecurrentCell": [[249, 2, 1, "", "__init__"]], "norse.torch.module.lif_box": [[250, 1, 1, "", "LIFBoxCell"], [251, 1, 1, "", "LIFBoxFeedForwardState"], [252, 1, 1, "", "LIFBoxParameters"]], "norse.torch.module.lif_box.LIFBoxCell": [[250, 2, 1, "", "__init__"]], "norse.torch.module.lif_box.LIFBoxFeedForwardState": [[251, 2, 1, "", "__init__"]], "norse.torch.module.lif_box.LIFBoxParameters": [[252, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex": [[253, 1, 1, "", "LIFEx"], [254, 1, 1, "", "LIFExCell"], [255, 1, 1, "", "LIFExRecurrent"], [256, 1, 1, "", "LIFExRecurrentCell"]], "norse.torch.module.lif_ex.LIFEx": [[253, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex.LIFExCell": [[254, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex.LIFExRecurrent": [[255, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex.LIFExRecurrentCell": [[256, 2, 1, "", "__init__"]], "norse.torch.module.lif_mc": [[257, 1, 1, "", "LIFMCRecurrentCell"]], "norse.torch.module.lif_mc.LIFMCRecurrentCell": [[257, 2, 1, "", "__init__"]], "norse.torch.module.lif_mc_refrac": [[258, 1, 1, "", "LIFMCRefracRecurrentCell"]], "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell": [[258, 2, 1, "", "__init__"]], "norse.torch.module.lif_refrac": [[259, 1, 1, "", "LIFRefracCell"], [260, 1, 1, "", "LIFRefracRecurrentCell"]], "norse.torch.module.lif_refrac.LIFRefracCell": [[259, 2, 1, "", "__init__"]], "norse.torch.module.lif_refrac.LIFRefracRecurrentCell": [[260, 2, 1, "", "__init__"]], "norse.torch.module.lsnn": [[261, 1, 1, "", "LSNN"], [262, 1, 1, "", "LSNNCell"], [263, 1, 1, "", "LSNNRecurrent"], [264, 1, 1, "", "LSNNRecurrentCell"]], "norse.torch.module.lsnn.LSNN": [[261, 2, 1, "", "__init__"]], "norse.torch.module.lsnn.LSNNCell": [[262, 2, 1, "", "__init__"]], "norse.torch.module.lsnn.LSNNRecurrent": [[263, 2, 1, "", "__init__"]], "norse.torch.module.lsnn.LSNNRecurrentCell": [[264, 2, 1, "", "__init__"]], "norse.torch.module.receptive_field": [[265, 1, 1, "", "SpatialReceptiveField2d"], [266, 1, 1, "", "TemporalReceptiveField"]], "norse.torch.module.receptive_field.SpatialReceptiveField2d": [[265, 2, 1, "", "__init__"]], "norse.torch.module.receptive_field.TemporalReceptiveField": [[266, 2, 1, "", "__init__"]], "norse.torch.module.test": [[120, 0, 0, "-", "test_coba"], [121, 0, 0, "-", "test_conv"], [122, 0, 0, "-", "test_encode"], [123, 0, 0, "-", "test_exp_filter"], [124, 0, 0, "-", "test_iaf"], [125, 0, 0, "-", "test_izhikevich"], [126, 0, 0, "-", "test_leaky_integrator"], [127, 0, 0, "-", "test_leaky_integrator_box"], [128, 0, 0, "-", "test_lif"], [129, 0, 0, "-", "test_lif_adex"], [130, 0, 0, "-", "test_lif_adex_refrac"], [131, 0, 0, "-", "test_lif_box"], [132, 0, 0, "-", "test_lif_correlation"], [133, 0, 0, "-", "test_lif_ex"], [134, 0, 0, "-", "test_lif_mc"], [135, 0, 0, "-", "test_lif_mc_refrac"], [136, 0, 0, "-", "test_lif_refrac"], [137, 0, 0, "-", "test_lift"], [138, 0, 0, "-", "test_lsnn"], [139, 0, 0, "-", "test_receptive_field"], [140, 0, 0, "-", "test_regularization"], [141, 0, 0, "-", "test_sequential"], [142, 0, 0, "-", "test_snn"], [143, 0, 0, "-", "test_spikes_to_times_decoder"], [144, 0, 0, "-", "test_training"]], "norse.torch.utils": [[146, 0, 0, "-", "clone"], [147, 0, 0, "-", "export_nir"], [148, 0, 0, "-", "import_nir"], [149, 0, 0, "-", "plot"], [151, 0, 0, "-", "pytree"], [152, 0, 0, "-", "state"], [153, 0, 0, "-", "tensorboard"], [155, 0, 0, "-", "test"]], "norse.torch.utils.plot": [[150, 0, 0, "-", "plot"]], "norse.torch.utils.tensorboard": [[154, 0, 0, "-", "tensorboard"]], "norse.torch.utils.test": [[156, 0, 0, "-", "test_nir_export"], [157, 0, 0, "-", "test_nir_import"], [158, 0, 0, "-", "test_tensorboard"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "terms": {"": [29, 49, 115, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 210, 211, 214, 215, 216, 224, 233, 267, 269, 270, 271, 274, 275, 276, 278], "0": [8, 30, 35, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 201, 202, 203, 209, 211, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 274, 275, 276, 278], "00": 274, "000": 277, "0000": [219, 222, 274], "0000e": 274, "0003": 274, "001": [163, 167, 178, 192, 195, 196, 199, 202, 203, 217, 219, 220, 221, 223, 225, 226, 229, 231, 232, 237, 240, 241, 243, 246, 248, 250, 253, 255, 261, 262, 263, 266, 274, 275], "0012": [261, 262, 263, 264], "002": 274, "0022": 274, "0023": 274, "0059": 274, "0065": 274, "0067": 274, "0079": 274, "0081": 274, "0088": 274, "01": [185, 274], "0114": 274, "0122": 274, "0125": 274, "0127": 274, "0143": 274, "015": 213, "0159": 274, "0191": 274, "02": [170, 172, 176, 177, 179, 180, 181, 186, 188, 189, 274], "0200": [194, 195, 196, 246, 247, 248, 249], "0210": 274, "0242": 274, "026": 175, "0281": 274, "0283": 274, "03": [182, 183, 274], "0302": 274, "0307": 274, "0314": 274, "0343": 274, "0366": 274, "0369": 274, "0370": 274, "0390": 274, "04": [168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 274], "0404": 274, "0416": 274, "0418": 274, "0420": 274, "0429": 274, "0436": 274, "0445": 274, "0465": 274, "0473": 274, "04v\u00b2": [230, 232], "05": [180, 187], "0539": 274, "0552": 274, "0559": 274, "0613": 213, "0621": 274, "0659": 274, "06725": 270, "0681": 274, "07": 273, "0703": 274, "0709": 274, "0714": 274, "0732": 274, "0733": 274, "07407": 8, "0786": 274, "0797": 274, "0801": 274, "0816": 274, "0835": 274, "0844": 274, "0849": 274, "0861": 274, "0878": 274, "0882": 274, "0932": 274, "0938": 274, "0945": 274, "0950": 274, "0951": 274, "09574": [261, 263], "0968": 274, "0x7f9e15e12bd0": 275, "0x7fe665b8a8e0": 274, "0x7fe665b8efd0": 274, "1": [9, 30, 33, 34, 35, 46, 101, 164, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 184, 194, 195, 196, 198, 199, 201, 202, 203, 209, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 235, 236, 237, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278], "10": [162, 163, 211, 213, 217, 229, 230, 231, 235, 240, 243, 246, 248, 249, 253, 254, 255, 256, 260, 263, 267, 271, 272, 274, 275, 277, 278], "100": [162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 201, 202, 203, 217, 219, 220, 223, 225, 226, 228, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 271, 272, 274, 275], "1000": [221, 274, 275], "1007": 213, "101": 274, "1016": 274, "102": 274, "1020": 274, "103": 274, "1037": 274, "105": 274, "106": 274, "107": 274, "1071": 274, "108": [172, 177, 274], "1081": 274, "1082": 274, "1084": 274, "1089": 274, "109": 274, "1097": 274, "110": 274, "1108": 274, "111": 274, "113": 274, "114": 274, "115": 274, "1170": 274, "1173": 274, "118": 274, "1185": 274, "119": 274, "120": 274, "1200": [184, 187], "1205": 274, "122": 274, "1224e": 274, "123": 274, "1230": 274, "124": 274, "126": 274, "1273": 274, "128": 274, "1287": 274, "130": 274, "1307": 274, "131": 274, "132": 274, "134": 274, "1384": 274, "14": [174, 179, 185, 186, 188, 189], "140": [168, 170, 171, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 230, 232, 274], "142": 274, "1446": 274, "1475e": 274, "15": 171, "150": 275, "1504e": 274, "1508": 274, "1515": 274, "1543": 274, "1555": 274, "1591": 274, "1593": 274, "16": [170, 173, 180, 181, 182, 183, 184, 187, 217, 219, 230, 232, 247, 249, 254, 256, 259, 260, 271], "1669": 274, "1681": 274, "1712": 274, "1723": 274, "1803": [261, 263], "1806": 274, "1811e": 274, "1878": 274, "1910": 8, "2": [9, 173, 174, 175, 179, 185, 186, 188, 189, 194, 195, 196, 211, 213, 219, 229, 231, 232, 235, 240, 241, 243, 244, 246, 247, 248, 249, 253, 255, 261, 263, 265, 266, 271, 274, 275, 276, 277, 278], "20": [162, 163, 217, 247, 249, 254, 256, 259, 260, 267, 272, 274, 275], "200": [180, 182, 183, 190, 192, 194, 195, 196, 201, 202, 203, 219, 225, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 274, 275], "2000": [162, 163, 217, 219], "2001": 224, "2016": [213, 274], "2018": 267, "2019": 8, "2020": [267, 270], "2021": [114, 267, 268], "2022": 270, "2023": [114, 268], "2033": 274, "2047e": 274, "2060": 274, "21": 174, "2117": 274, "2161": 274, "2168": 274, "2171": 274, "2181": [267, 270], "2183": 274, "2217": 274, "2220": 274, "2225": 274, "2278": 274, "2294": 274, "2299e": 274, "2300": 274, "2331": 274, "2362": 274, "2416": 274, "25": [180, 181, 182, 183], "250": [168, 171, 172, 173, 175, 176, 177, 179, 181, 184, 185, 186, 187, 188, 189], "2500": [162, 163, 217], "256": 274, "26": [171, 173, 184, 187], "2647": 274, "2660": 274, "2679": 274, "2699e": 274, "27": 274, "2754": 274, "2757": 274, "28": [267, 272, 274], "280": 273, "2809": 274, "2829": 276, "2867": 274, "2872": 274, "2879": 274, "28x28": 267, "2958": 274, "2963": 274, "2d": [150, 210, 218], "2x2": 210, "3": [222, 273, 274, 275, 278], "30": [168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 230, 232, 247, 259], "3023": 274, "3081": 274, "3085e": 274, "32": 274, "3251": 274, "3253": 274, "3267": 274, "3285": 274, "32x32": 277, "3311": 274, "3311e": 274, "3351": 274, "3395": 274, "3426": 274, "3470": 274, "3540": 274, "3563": 274, "3578": 274, "3723": 274, "3725": 274, "3732": 274, "3752": 274, "3769": 274, "3800": 219, "3829": 274, "3868": 274, "3883": 274, "390900948": [267, 270], "3929": 274, "3962": 274, "3966": 274, "3d": 150, "4": [8, 170, 172, 177, 179, 183, 194, 195, 196, 219, 232, 241, 243, 244, 246, 247, 248, 249, 255, 266, 274, 275, 276], "40": [275, 278], "4000": 219, "4050e": 274, "4071": 274, "4072": 274, "4103": 274, "4107": 274, "41421": [213, 266], "4154": 274, "4158": 274, "4183": 274, "4256": 274, "4283": 274, "4295": 274, "4297": 274, "4326": 274, "4332": 274, "4352": 274, "4375": 274, "44": 274, "4411": 274, "4420": 274, "4422025": 267, "4441": 274, "45": 175, "4543": 274, "4561": 274, "4563": 274, "4574e": 274, "4582": 274, "4590": 274, "4601": 274, "4615": 274, "4641": 274, "4654": 274, "4665e": 274, "4692e": 274, "4695": 274, "4731": 274, "4763": 274, "4768": 274, "4787": 274, "4794": 274, "4816": 274, "4838": 274, "4896": 274, "4926": 274, "4930e": 274, "4952": 274, "4962": 274, "4977": 274, "4979": 274, "4999e": 274, "5": [162, 163, 168, 170, 171, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 211, 217, 222, 229, 231, 232, 240, 241, 243, 244, 246, 248, 253, 255, 258, 259, 260, 261, 263, 265, 274, 275], "50": [188, 267], "500": 170, "5000": [194, 195, 196, 201, 202, 203, 246, 247, 248, 249, 253, 254, 255, 256, 267], "5025": 274, "5089": 274, "5121": 274, "5165": 274, "5169": 274, "5170": 274, "52": 182, "5249": 274, "5254": 274, "5279": 274, "5281": 267, "5285": 274, "5298": 274, "53": 274, "5310": 274, "5322": 274, "5333": 274, "5371": 274, "5386": 274, "5401": 274, "5420": 274, "5445": 274, "5450": 274, "5496": 274, "55": [170, 172, 177, 179, 180], "5509": 274, "5523": 274, "5536": 274, "5589": 274, "5625": 274, "5628": 274, "5655": 274, "5662e": 274, "5674": 274, "57": 274, "5708": 274, "5712": 274, "5724": 274, "5779": 274, "5810": 274, "5828": 274, "5847": 274, "5869": 274, "5879": 274, "5881": 274, "5914": 274, "5922": 274, "5937": 274, "5944": 274, "5968": 274, "5970": 274, "5989e": 274, "5v": [230, 232], "6": [172, 177, 181, 186, 189], "60": [162, 163, 171, 172, 174, 176, 177, 183, 184, 187, 217, 274, 275, 277], "6008": 274, "6023": 274, "6052": 274, "6053": 274, "6065": 222, "6068": 274, "6074e": 274, "6090": 274, "6092e": 274, "61": [171, 274], "6102": 274, "6106": 274, "6166": 274, "6176": 274, "6186": 274, "6199e": 274, "62": [184, 187, 274], "6236": 274, "6271": 274, "6281": 274, "63": [175, 176], "6322": 274, "6341e": 274, "6343e": 274, "6367": 274, "64": [173, 180, 181, 182, 183], "6400": 173, "6406": 274, "6444": 274, "65": [170, 173, 181, 185, 186, 189, 274], "6512": 274, "6523": 274, "6608": 274, "6617": 274, "6621": 274, "6644": 274, "6668": 274, "6845": 274, "6850": 274, "69": 274, "6913": 274, "7": [273, 274], "70": [162, 163, 174, 179, 185, 186, 188, 189, 217, 274, 277], "7032": 274, "7052": 274, "7102": 274, "7173": 274, "7182": 274, "7185": 274, "7264e": 274, "7279": 274, "7312e": 274, "74": 274, "7478": 274, "7498": 274, "75": 274, "7600": 219, "7616": 274, "7639": 274, "77": 274, "7738": 274, "7753": 274, "78": 274, "7826": 274, "785907": [267, 270], "7877": 274, "7976": 274, "7fgn359": 273, "8": [176, 185, 210, 211, 219, 265, 273, 275], "80": 274, "800": 267, "8000": [175, 176, 219, 261, 262, 263, 264], "8011e": 274, "8042": 274, "81": 274, "8174": 274, "8175": 274, "82": 274, "8241e": 274, "8471": 274, "8495": 274, "85": [274, 275], "8600": 171, "8613": 274, "8698": 274, "87": 274, "8721": 274, "8799": 274, "88": 274, "8800": 274, "8820": 274, "8825": 222, "8831e": 274, "8837": 274, "8868": 274, "8888": 273, "89": 274, "8977": 274, "9": [213, 265, 267, 271, 273, 274, 275], "90": [274, 278], "9056e": 274, "9058": 274, "91": 274, "9130": 274, "92": 274, "9216": 274, "94": 274, "945539": [267, 270], "95": 274, "9547": 274, "96": 274, "9618e": 274, "97": 274, "98": 274, "9805": 274, "9836e": 274, "99": [267, 274], "A": [8, 30, 33, 35, 38, 44, 46, 48, 101, 103, 106, 113, 149, 153, 164, 204, 210, 214, 215, 216, 222, 229, 231, 235, 240, 243, 246, 248, 253, 255, 261, 263, 266, 267, 268, 269, 271, 273, 274, 276], "And": [271, 273], "As": [267, 271, 274, 275], "At": [274, 278], "But": 275, "By": 275, "For": [114, 224, 267, 268, 270, 271, 273, 274, 278], "If": [213, 265, 266, 267, 272, 273, 274, 275, 276, 277, 278], "In": [11, 12, 33, 34, 35, 46, 49, 101, 102, 268, 269, 271, 273, 274, 275, 278], "It": [38, 49, 106, 196, 199, 203, 247, 250, 268, 269, 271, 272, 274, 277], "No": 275, "One": 275, "Or": 273, "The": [8, 33, 35, 46, 49, 101, 210, 211, 213, 214, 215, 216, 218, 219, 222, 229, 231, 235, 240, 243, 246, 248, 253, 255, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278], "These": [9, 114, 268, 277], "To": [267, 271, 272, 273, 275, 276, 278], "Will": [232, 243, 244, 248, 249, 255, 266], "With": [267, 274, 278], "_": [34, 44, 204, 215, 272, 274, 275], "__init__": [161, 162, 165, 166, 168, 169, 190, 191, 193, 194, 197, 198, 200, 201, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 271, 272, 274], "__version__": 275, "_outer_": 235, "a_": [195, 196, 247, 249], "ab": [8, 261, 263], "about": [267, 274, 276, 277, 278], "abov": [218, 232, 243, 244, 248, 249, 255, 271, 275, 276, 277, 278], "abseil": 277, "absolut": [259, 260], "academ": 270, "acceler": [267, 278], "access": [271, 273, 274, 275, 277], "accommod": 271, "accord": 213, "account": 274, "accumul": [214, 215, 216], "accuraci": [267, 274, 278], "achiev": [267, 271, 278], "across": [33, 101, 265, 268, 269], "action": 276, "activ": [15, 35, 44, 204, 222, 240, 241, 243, 244, 266, 267, 275, 276, 278], "activation_state_map": 266, "actual": [222, 276], "ad": [33, 101, 167, 218, 226, 268, 269, 271, 274, 275], "ada": [194, 195, 196, 247, 249], "adam": 274, "adapt": [46, 193, 194, 195, 196, 202, 203, 247, 249, 254, 256, 261, 262, 263, 278], "adaptation_curr": 194, "adaptation_spik": 194, "adaptive_exponential_integr": [195, 196, 247, 249], "add": [33, 34, 46, 101, 102, 268, 269, 273], "addit": [9, 218, 237, 265, 273, 274, 277], "addmmbackward0": 276, "address": 273, "adher": [94, 268, 272], "adjoint": [261, 262, 263, 264, 274], "adopt": 274, "advanc": 270, "advantag": [267, 274], "after": [168, 229, 231, 235, 240, 243, 246, 248, 253, 255, 274], "aggreg": [27, 214, 215, 216, 265], "agreement": [267, 270], "ai": 267, "aid": 267, "aim": [49, 267, 269], "al": [33, 34, 35, 114, 268, 269], "algorithm": [267, 278], "align": [33, 34, 35, 46, 101, 195, 196, 202, 203, 217, 230, 232, 235, 236, 237, 241, 244, 247, 249, 254, 256, 257, 259, 260, 262, 264, 268, 269], "all": [216, 218, 224, 229, 231, 235, 240, 243, 246, 248, 253, 255, 271, 274, 275, 277], "allow": [102, 229, 231, 232, 240, 243, 244, 246, 248, 249, 253, 254, 255, 256, 257, 260, 261, 262, 263, 273, 278], "along": 218, "alpha": [29, 162, 166, 168, 194, 198, 201, 228, 242, 252, 271, 274, 275], "alreadi": [273, 274], "also": [222, 232, 237, 243, 244, 248, 249, 255, 257, 260, 263, 264, 267, 271, 273, 274, 275, 277, 278], "altern": [267, 277], "alwai": [267, 274, 276], "amount": [12, 33, 101, 268, 269], "an": [29, 46, 49, 166, 167, 194, 195, 196, 199, 201, 203, 214, 215, 218, 225, 226, 228, 232, 237, 247, 250, 266, 267, 269, 271, 273, 274, 275, 277, 278], "anaconda": 267, "analysi": 6, "andrew": 222, "angl": [211, 265], "ani": [34, 214, 215, 216, 270, 271, 274, 277, 278], "ann": 278, "anoth": [267, 277, 278], "apart": 278, "api": 271, "appear": 274, "append": [274, 275], "appli": [46, 196, 203, 218, 240, 241, 243, 244, 247, 267, 271, 278], "applic": [229, 231, 235, 240, 243, 246, 248, 253, 255, 270, 271, 274, 275], "approach": [35, 274, 278], "appropri": 274, "approxim": 271, "apt": 273, "ar": [27, 33, 101, 114, 144, 205, 206, 207, 208, 209, 217, 220, 221, 223, 224, 244, 249, 254, 256, 257, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "arbitrari": [196, 199, 203, 247, 250, 263, 266], "arbitrarili": 274, "architectur": 278, "area": 270, "arg": [218, 224, 231, 272], "argmax": 274, "argument": [210, 211, 213, 218, 241, 265], "around": [12, 267, 271], "arrai": 224, "arriv": [275, 277, 278], "arrow": 271, "art": 275, "articl": [195, 196, 213, 247, 249, 272, 277], "artifici": [35, 267, 275, 278], "arxiv": [8, 261, 263], "as_tensor": [219, 222, 224, 271, 275], "assum": [220, 221, 223, 224, 267, 276], "aswel": 275, "attribut": [161, 162, 165, 166, 168, 169, 190, 191, 193, 194, 197, 198, 200, 201, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "audienc": 271, "audio": 8, "autaps": [232, 243, 244, 248, 249, 254, 255, 257, 260, 274], "author": [267, 274], "autograd": 274, "automat": [266, 271], "av": 168, "avail": [33, 34, 35, 267, 269, 271, 273], "avoid": [33, 101, 268, 269], "awar": 270, "ax": 274, "axhlin": 275, "axi": [210, 211, 278], "axvlin": 275, "b": [8, 46, 168, 262, 264, 271], "backpropag": 277, "backward": 274, "balanc": [267, 277], "base": [15, 114, 117, 149, 161, 162, 163, 212, 213, 214, 217, 266, 267, 270, 273, 278], "bash": 273, "basi": 222, "basic": [224, 276, 278], "batch": [229, 231, 232, 240, 241, 243, 244, 246, 248, 253, 255, 267, 274, 277], "batch_siz": [217, 230, 232, 247, 249, 254, 256, 259, 260, 272, 274], "becaus": [38, 106, 268, 269, 270, 273, 274, 276, 278], "becom": [274, 278], "been": 274, "befor": [273, 274, 276], "begin": [30, 33, 34, 35, 46, 101, 164, 195, 196, 202, 203, 217, 230, 232, 235, 236, 237, 241, 244, 247, 249, 254, 256, 257, 259, 260, 262, 264, 268, 269], "beginn": [272, 276], "behavior": [169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 233], "behaviour": [35, 266, 275], "behind": 278, "being": [33, 101, 267, 268, 269, 271], "bellec": [46, 113, 267, 268, 277], "below": [273, 275, 276, 277, 278], "benchmark": 267, "benefit": [270, 273, 274], "benefiti": 274, "best": [267, 274], "beta": [262, 264], "better": [271, 278], "between": [33, 101, 213, 218, 219, 222, 257, 266, 268, 269, 275, 278], "bia": [168, 274], "bin": 274, "binari": [114, 220, 221, 268, 275, 278], "bio": [8, 267], "biolog": [271, 274, 275, 276, 277, 278], "bit": 271, "bitvector": [205, 206, 207, 208, 209], "black": 271, "block": [218, 268], "boilerpl": [12, 271, 274], "book": [33, 34, 35, 269], "bool": [232, 240, 241, 243, 244, 248, 249, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265], "both": [33, 101, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 235, 236, 237, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 274, 278], "bottleneck": 270, "box": [34, 38, 102, 106, 271], "brain": 275, "bring": 267, "broad": 270, "broken": 271, "browser": 273, "buffer": 272, "build": [46, 113, 268, 271, 272, 273, 277, 278], "built": [271, 272, 277], "bundl": 267, "bv": [230, 232], "c": [8, 168, 208, 210, 213, 230, 232, 266, 267, 273], "c3se": 270, "c_": [217, 218], "c_m_inv": 162, "calcul": 222, "call": [33, 101, 268, 269, 272, 274, 275, 277, 278], "callabl": [198, 222, 252, 266], "can": [9, 33, 34, 35, 38, 49, 106, 115, 213, 218, 222, 225, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "cannot": [38, 106, 268, 269, 274, 276], "capacit": 162, "capacitor": 275, "care": 274, "cartpol": [9, 267], "case": [30, 33, 35, 101, 164, 218, 268, 269, 271, 274], "caus": 168, "causal": 213, "caveat": 276, "cc": 8, "cd": 273, "cell": [214, 215, 216, 224, 230, 236, 237, 262, 274, 275, 278], "center": [210, 211, 222, 270], "centr": 270, "certain": [35, 271, 277, 278], "ch": [202, 203, 254, 256], "ch5": [202, 203, 254, 256], "challeng": 274, "chalmer": 270, "chanc": 278, "chang": [33, 35, 101, 213, 222, 266, 268, 269, 271], "channel": [218, 265, 266, 267, 273], "charg": [33, 101, 268, 269], "chat": 273, "checkpoint": [12, 274, 277], "choic": [274, 275, 278], "choos": 274, "chose": 270, "chosen": [273, 274], "christian": [267, 270, 274], "cifar": [267, 277], "cifar10": 267, "circuit": 275, "circumv": 271, "cite": 267, "class": [2, 4, 7, 8, 11, 12, 16, 17, 18, 19, 20, 25, 26, 31, 32, 33, 34, 36, 37, 39, 40, 43, 46, 51, 52, 53, 54, 81, 84, 85, 87, 88, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125, 128, 144, 148, 151, 158, 161, 162, 165, 166, 168, 169, 190, 191, 193, 194, 197, 198, 200, 201, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 271, 272, 274, 277], "classif": [267, 277], "classifi": 277, "clear": 274, "cli": 277, "clone": 273, "close": [222, 271, 273, 274, 275], "closer": 275, "cluster": [267, 270], "cmake": 273, "cobaliffeedforwardst": 163, "cobalifparamet": [163, 217], "code": [12, 15, 222, 224, 267, 271, 274, 275, 276, 278], "coincid": [220, 221, 223, 225], "collab": 267, "collect": [49, 269], "color": 275, "com": [213, 267, 273, 274], "combin": [35, 38, 103, 106, 212, 267, 268, 269, 275], "come": 274, "command": 273, "comment": 270, "commerci": 270, "compar": [38, 106, 268, 269, 275], "compart": 257, "compat": [167, 226, 267], "complex": 276, "compneuro": 8, "compon": [14, 49, 267, 269, 271], "compos": [271, 274], "comprehens": 267, "comput": [162, 166, 167, 168, 194, 195, 196, 199, 201, 202, 203, 205, 206, 207, 208, 217, 226, 228, 230, 232, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 264, 267, 270, 275], "computation": [38, 106, 268, 269, 271, 278], "concept": 271, "concern": [270, 274], "conclud": [274, 276], "conda": 267, "condit": [46, 167, 195, 196, 199, 203, 217, 226, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 262, 264], "conduct": [161, 162, 163, 168, 217, 257], "configur": [229, 231, 240, 243, 246, 248, 253, 255, 261, 262, 263, 276, 277], "connect": [218, 232, 243, 244, 248, 249, 254, 255, 256, 257, 260, 274], "consequent": 275, "consid": [274, 278], "consist": [275, 278], "consol": 267, "constant": [33, 46, 101, 162, 168, 190, 194, 201, 219, 224, 238, 266, 268, 269, 275, 278], "constant_current_encod": 272, "constant_current_lif_encod": 219, "constantcurrentlifencod": [224, 225, 272, 274], "constitu": 271, "construct": 276, "contain": [13, 49, 115, 215, 216, 229, 231, 235, 240, 243, 246, 248, 253, 255, 267, 269, 271, 273, 274, 275, 278], "content": 278, "context": 274, "continu": 276, "continuous_upd": 275, "contrast": [46, 275], "control": [33, 35, 101, 268, 269, 274, 277], "conv2d": [218, 265, 267], "conveni": 275, "convent": 275, "convert": [27, 28, 278], "convinc": 270, "convnet4": 272, "convolut": [11, 12, 196, 203, 218, 247, 265, 275, 278], "convolv": [218, 267], "coordin": 211, "copi": 273, "correct": [267, 272, 274, 278], "correctli": 272, "correlation_experi": 277, "correspond": 277, "cortex": 224, "could": [274, 275], "council": 270, "count": [49, 214, 269, 274], "counter": 277, "counterpart": 271, "coupl": [168, 194, 257], "cours": 275, "covari": 210, "cover": [272, 275], "cpehl": 267, "cpu": 274, "cramer": 8, "creat": [48, 210, 211, 212, 265, 266, 267, 269, 270, 273, 276], "credit": 222, "crucial": 278, "cuda": [272, 273, 274], "cumbersom": 271, "curiou": 275, "current": [33, 34, 35, 38, 101, 102, 106, 163, 167, 191, 193, 195, 196, 199, 200, 202, 203, 219, 239, 247, 249, 250, 268, 269, 273, 275, 278], "curv": [222, 278], "custom": [232, 243, 244, 248, 249, 255], "d": [46, 113, 168, 230, 232, 267, 268, 273], "darjan": 277, "data": [6, 29, 98, 149, 153, 215, 216, 219, 222, 224, 229, 231, 232, 235, 240, 241, 243, 244, 246, 247, 248, 253, 255, 261, 263, 267, 272, 274, 275, 278], "databas": 277, "dataload": 274, "datapoint": 267, "dataset": [267, 277, 278], "debian": 273, "decad": 267, "decai": [275, 278], "decid": 214, "decod": [267, 274], "decreas": [274, 275], "deep": [0, 13, 267, 273, 276], "def": [271, 272, 274, 275], "default": [35, 49, 194, 210, 211, 213, 214, 215, 216, 218, 222, 229, 231, 232, 240, 241, 243, 244, 246, 248, 249, 253, 254, 255, 256, 257, 260, 261, 262, 263, 265, 266, 269, 274, 275], "delta": [29, 219], "delta_t": [194, 195, 196, 201, 202, 203, 247, 249, 254, 256], "demonstr": [267, 271, 274, 276, 277], "denot": [218, 266], "depend": [9, 49, 145, 267, 277, 278], "depth": 276, "deriv": [114, 211, 268, 271], "describ": [33, 34, 35, 101, 102, 210, 267, 268, 269, 271, 272, 273, 277, 278], "descript": 277, "design": 276, "desir": [49, 115, 269], "detach": [274, 275], "detail": [267, 273, 276, 277], "determin": [46, 162, 166, 168, 194, 201, 209, 228, 274, 277, 278], "deutsch": [267, 270], "dev": 273, "dev16": 275, "develop": [270, 273], "deviat": 274, "devic": [218, 272, 274, 277], "dfg": [267, 270], "did": 270, "differ": [27, 28, 33, 34, 101, 222, 267, 268, 269, 275, 276, 278], "differenti": [210, 271], "digit": [8, 11, 12, 277], "dilat": 218, "dim": [272, 274], "dimens": [27, 218, 220, 223, 235, 266, 275, 276, 278], "dimension": [265, 266], "dir": 273, "direct": [218, 270], "directli": 271, "directori": [267, 271, 273], "discontinu": 271, "discord": [267, 273], "discret": [235, 236, 237, 278], "discretis": [274, 275], "distanc": 222, "distance_funct": 222, "distinct": 274, "distinguish": 278, "distribut": [266, 274], "distro": 273, "do": [0, 13, 273, 274, 275], "doc": [218, 267], "docker": 267, "doctor": 267, "document": [218, 267, 278], "doe": [28, 274], "doi": 267, "domain": [28, 210, 211, 212, 265, 270, 278], "don": 274, "done": [9, 271, 273, 275, 276, 277, 278], "dot": [33, 34, 35, 46, 101, 167, 195, 196, 199, 202, 203, 217, 226, 230, 232, 235, 236, 237, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 262, 264, 268, 269, 271], "down": 271, "download": [273, 274], "drawn": [38, 106, 268, 269], "driven": [267, 270], "dt": [163, 167, 178, 192, 195, 196, 199, 202, 203, 217, 219, 220, 221, 223, 225, 226, 229, 231, 232, 235, 236, 237, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 274, 275], "dtype": 218, "dure": [219, 265, 273], "dx": [211, 265], "dy": [211, 265], "dynam": [33, 34, 35, 46, 168, 267, 269, 271, 274], "e": [29, 267, 270, 276, 277], "e_": 217, "e_rev_": 162, "e_rev_i": 162, "each": [33, 49, 101, 219, 222, 268, 269, 271, 275, 277, 278], "easi": [274, 277], "easier": 273, "easiest": 274, "ec": [267, 270], "eccentr": [210, 211], "ed": 27, "effect": 276, "efficaci": 278, "effici": [210, 270, 278], "effort": [267, 270], "egholm": 267, "either": [218, 271, 272, 273, 278], "electr": 278, "element": [208, 218], "elia": 277, "els": [30, 164, 274], "emit": [220, 221, 223, 276, 278], "empti": 265, "enabl": [270, 273], "encod": [58, 122, 267, 274], "encourag": 267, "end": [30, 33, 34, 35, 46, 101, 164, 195, 196, 202, 203, 217, 230, 232, 235, 236, 237, 241, 244, 247, 249, 254, 256, 257, 259, 260, 262, 264, 268, 269], "energi": 270, "engin": 270, "enough": 274, "enter": 274, "entri": 216, "environ": [273, 277], "epfl": [202, 203, 254, 256], "epoch": [274, 277], "eq": 274, "equal": 222, "equat": [33, 46, 101, 167, 195, 196, 199, 203, 217, 226, 235, 236, 237, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 262, 264, 268, 269, 278], "error": [49, 214, 269], "essenti": [271, 274], "et": [33, 34, 35, 114, 268, 269], "etc": 12, "euclidean": 222, "euclidean_dist": 222, "euler": [163, 195, 196, 199, 202, 203, 217, 232, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 262, 264], "eval": 274, "evalu": 8, "even": [275, 277], "event": [27, 35, 38, 103, 106, 114, 149, 267, 268, 269, 270, 275], "eventu": 275, "everi": [33, 34, 101, 102, 268, 269], "everyth": [30, 164, 276], "evolut": 275, "exactli": 278, "exampl": [217, 219, 222, 224, 229, 230, 231, 232, 235, 240, 241, 243, 244, 246, 247, 248, 249, 253, 254, 255, 256, 259, 260, 265, 272, 277], "exc": [267, 270], "excel": [267, 270, 272], "exchang": 275, "excitatori": [161, 162], "exclud": 34, "exclus": [213, 266], "exdb": 274, "execut": [9, 275, 276, 278], "exercis": 277, "exist": [271, 273, 274, 276, 278], "exp": [195, 196, 202, 203, 247, 249, 254, 256], "exp_filt": 59, "expand": 267, "expect": [218, 267, 274, 275, 276, 278], "experi": [9, 267, 274, 275, 278], "explain": [271, 278], "explan": 9, "explicit": [274, 275], "exploit": 267, "explor": [270, 274, 275], "exponenti": [29, 98, 194, 195, 196, 201, 203, 247, 249, 254, 256, 266, 275], "ext": 218, "extend": 13, "extens": 277, "extract": 274, "f": [8, 35, 274], "f_max": [220, 221, 223], "facilit": 274, "fact": 270, "factor": [29, 193, 222], "fals": [232, 240, 241, 243, 244, 248, 249, 254, 255, 256, 257, 260, 261, 262, 263, 264, 274, 275], "familiar": 276, "familiaris": 272, "famou": 278, "far": 276, "fast": [33, 101, 224, 268, 269], "fastest": 267, "fc_out": 274, "featur": [232, 237, 244, 249, 257, 260, 263, 264, 273, 278], "feed": [161, 165, 193, 200, 227, 247], "feedforward": [167, 226], "field": [35, 48, 114, 210, 211, 212, 213, 222, 265, 266], "fig": [271, 274, 278], "fig_working_ap": 278, "figsiz": 274, "figur": [271, 275], "file": 271, "filesystem": 273, "filter_inv": 29, "final": [267, 271, 274, 278], "find": [267, 270, 277], "fire": [35, 38, 46, 106, 165, 166, 167, 194, 195, 196, 199, 201, 202, 203, 226, 227, 228, 241, 244, 250, 267, 271, 275, 276, 278], "fire_model": [195, 196, 247, 249], "first": [27, 33, 101, 218, 224, 225, 266, 268, 269, 271, 273, 274, 278], "fit": 278, "fix": [219, 274], "flag": [265, 277], "flatten": 267, "float": [162, 163, 166, 167, 168, 178, 192, 194, 195, 196, 198, 199, 201, 202, 203, 211, 212, 213, 217, 219, 220, 221, 223, 225, 226, 228, 229, 231, 232, 235, 236, 237, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266], "floatslid": 275, "flow": [33, 101, 268, 269], "fluctuat": 168, "folder": 271, "follow": [195, 196, 199, 202, 203, 217, 230, 232, 241, 244, 247, 249, 250, 254, 256, 259, 260, 262, 264, 267, 270, 271, 274, 278], "forc": 277, "forg": 273, "forschungsgemeinschaft": [267, 270], "forward": [49, 161, 165, 193, 200, 214, 222, 227, 247, 261, 263, 269, 272, 274], "found": [33, 34, 35, 267, 269, 271, 278], "foundat": [267, 270, 275], "four": 218, "framework": [267, 270], "franz": 277, "free": 278, "freeli": [33, 34, 35, 269], "frequenc": [220, 221, 223], "from": [34, 114, 194, 195, 196, 202, 203, 209, 211, 213, 214, 215, 216, 218, 229, 230, 231, 232, 235, 240, 243, 246, 247, 248, 249, 253, 254, 255, 256, 261, 263, 265, 266, 267, 268, 270, 271, 272, 274, 275, 278], "full": 273, "fulli": 275, "function": [3, 4, 5, 10, 11, 12, 13, 88, 90, 91, 92, 93, 98, 101, 102, 103, 106, 113, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 154, 156, 157, 158, 222, 240, 241, 243, 244, 247, 250, 252, 265, 266, 268, 271, 272, 274, 275, 276, 278], "functool": 275, "fund": [267, 270], "fundament": [267, 271, 274, 278], "further": [275, 276, 277], "futur": 214, "g": [46, 113, 267, 268, 276, 277], "g8a0d1fb7": 275, "g_": 257, "g_coupl": [257, 258], "g_e": [161, 217], "g_i": [161, 217], "g_l": [162, 217], "ganglion": 224, "gaussian": [210, 222], "gaussian_rbf": 222, "gener": [196, 199, 203, 213, 218, 247, 250, 266, 267, 274], "german": [267, 270], "germani": [267, 270], "gerstner": [33, 34, 35, 269], "get": [222, 273, 274, 276, 278], "gg": 273, "git": [267, 273], "github": [267, 273, 278], "give": [38, 106, 268, 269, 277], "given": [46, 211, 274, 275], "go": 273, "goal": 275, "googl": 267, "gpu": [267, 272, 277], "grad_fn": 276, "gradient": [35, 144, 162, 166, 168, 194, 201, 228, 267, 271, 274, 278], "grant": [267, 270], "gravit": 277, "great": 274, "greater": 168, "grei": 275, "grid": 275, "group": 218, "groups_not": 218, "growth": [194, 201], "gt": [30, 35, 164], "guarante": 274, "guid": [267, 273], "guidelin": 267, "guillaum": 277, "gym": [9, 277], "gz": 274, "h": [30, 35, 164, 218], "h_": 218, "ha": [209, 216, 267, 270, 271, 272, 273, 274], "hajek": 277, "handl": 276, "handwritten": 277, "happen": [271, 273, 275], "hardcod": 266, "hardest": 278, "hardwar": [270, 273, 275], "have": [28, 33, 34, 101, 225, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278], "haven": 274, "hbp": [267, 270], "header": 273, "heavisid": 35, "heidelberg": [8, 267, 270], "height": 218, "help": [267, 277], "helper": 275, "henc": 34, "here": [218, 267, 272, 273, 274, 278], "hertz": [220, 221, 223], "hesit": 273, "hidden": [217, 232, 237, 243, 244, 248, 249, 254, 255, 256, 257, 260, 263, 264, 274], "hidden_featur": 274, "hidden_s": [217, 231, 232, 237, 243, 244, 248, 249, 254, 255, 256, 257, 258, 260, 263, 264, 274], "hierarchi": 271, "high": [168, 267, 270], "higher": [220, 223, 267, 273, 275, 278], "highli": 276, "highlight": 218, "hint": 273, "hist": 274, "histogram": 274, "histori": 276, "histtyp": 274, "hit": [275, 276, 278], "home": 274, "honestli": 276, "hopefulli": 273, "horizon": [267, 270], "host": 270, "hotspot": 273, "how": [9, 33, 101, 267, 268, 269, 271, 272, 274, 275, 276, 277, 278], "howev": [267, 271, 274], "hpc": [267, 277], "hpc2n": 270, "html": [202, 203, 218, 254, 256, 272, 276, 278], "http": [8, 195, 196, 202, 203, 213, 218, 247, 249, 254, 256, 261, 263, 267, 272, 273, 274, 276, 278], "hyper": [162, 166, 168, 194, 201, 228], "hyperparamet": [271, 274], "hypothet": 271, "i": [0, 9, 13, 33, 34, 35, 38, 46, 49, 98, 101, 106, 191, 193, 195, 196, 199, 200, 202, 203, 208, 211, 213, 214, 218, 222, 230, 232, 235, 236, 237, 239, 241, 244, 245, 247, 249, 250, 254, 256, 257, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "i_": [195, 196, 203, 235, 236, 237, 247], "iaffeedforwardst": 167, "iafparamet": [167, 226], "idea": 278, "ideal": 6, "identifi": [224, 275], "idiosyncrasi": 272, "idx1": 274, "idx3": 274, "igitugraz": [46, 113, 268], "ignor": [213, 266, 271], "illustr": [9, 267, 274, 277, 278], "imag": [218, 222, 274, 277], "imagin": [222, 271], "immedi": [34, 275, 278], "impact": 34, "impati": 274, "imper": 271, "implement": [38, 106, 195, 196, 199, 202, 203, 217, 218, 230, 232, 235, 236, 237, 241, 244, 247, 249, 250, 254, 256, 259, 260, 262, 264, 267, 268, 269, 274, 275, 278], "import": [230, 232, 261, 263, 265, 267, 272, 274, 275, 276, 277, 278], "importerror": 274, "imposs": [38, 106, 268, 269], "in_channel": [218, 265], "includ": [9, 49, 267, 269, 270, 277], "inclus": 214, "incom": [33, 34, 101, 102, 266, 268, 269, 278], "incorpor": 274, "increas": [35, 222, 275, 278], "increasingli": 275, "inde": 271, "independ": 274, "index": [222, 274], "indic": 275, "individu": 222, "infer": 267, "infinit": 225, "inflow": 35, "influenc": [275, 276], "inform": [33, 34, 35, 102, 103, 113, 149, 214, 267, 268, 269, 273, 275], "infrastructur": [267, 270], "inhibitori": [161, 162], "initi": [211, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 235, 236, 237, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274], "initialis": [272, 274], "inject": [27, 275, 276], "inner": 276, "innerv": 271, "input": [28, 33, 34, 46, 101, 102, 161, 162, 163, 167, 191, 193, 195, 196, 199, 200, 202, 203, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 230, 232, 235, 237, 239, 243, 244, 247, 248, 249, 250, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 276, 278], "input_curr": [178, 195, 202], "input_featur": [272, 274], "input_s": [217, 231, 232, 237, 243, 244, 248, 249, 254, 255, 256, 257, 258, 260, 263, 264, 274], "input_spik": [167, 196, 203], "input_spike_train": 275, "input_tensor": [163, 192, 199, 250, 271], "input_weight": [232, 243, 244, 248, 249, 255], "inspir": [267, 271, 275, 277], "instal": 277, "instanc": [28, 144, 277], "instantan": [38, 102, 106, 268, 269], "instanti": 274, "instead": 274, "institut": 267, "int": [210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 225, 231, 232, 237, 243, 244, 248, 249, 254, 255, 256, 257, 258, 260, 263, 264, 265, 266], "intact": 144, "integ": 215, "integr": [33, 34, 38, 101, 102, 106, 163, 165, 166, 167, 190, 191, 194, 195, 196, 199, 201, 202, 203, 217, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 270, 271, 275, 276, 278], "integrate_and_record_voltag": 275, "intend": 271, "interact": 275, "interest": [267, 270], "interf": 273, "interfac": [94, 268, 273, 277], "intern": [217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 235, 236, 237, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274], "interpret": 271, "introduct": [274, 276, 278], "introspect": 273, "intslid": 275, "invari": [114, 268], "invers": [33, 101, 162, 168, 190, 194, 201, 238, 268, 269, 274, 275], "invest": 267, "investig": 275, "invok": [267, 274], "involv": 274, "io": [267, 273, 278], "ip": 273, "ipywidget": 275, "is_avail": 274, "isol": [271, 273], "issu": [267, 273], "item": 274, "iter": [219, 235, 266], "its": [38, 106, 222, 268, 269, 271, 275], "izhikevich": 271, "izhikevichcel": 229, "izhikevichparamet": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 229, 231, 232, 233], "izhikevichrecurrentcel": 231, "izhikevichspikingbehavior": [229, 230, 231, 232], "izhikevichst": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 229, 231, 232, 233], "j": [8, 224], "jan": 267, "jegp": 267, "jen": [267, 270], "job": [49, 269], "jointli": 274, "jump": [38, 46, 102, 106, 167, 195, 196, 199, 203, 217, 226, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 262, 264, 268, 269, 271], "jupyt": [267, 273], "just": [49, 269, 274, 275], "juwel": 277, "k": [168, 222], "keep": [229, 231, 240, 243, 246, 248, 253, 255, 267, 271, 276, 278], "keepdim": 274, "kernel": [210, 211, 218, 222], "kernel_s": 218, "know": [271, 275, 276], "knowledg": [274, 276], "known": [232, 237, 244, 249, 257, 260, 263, 264, 273], "kth": 267, "kwarg": [224, 229, 230, 231, 232, 235, 236, 240, 241, 243, 244, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "l": [229, 231, 232, 235, 240, 241, 243, 244, 246, 248, 253, 255], "label": [274, 275, 277], "lambda": 266, "laptop": 267, "larg": [33, 101, 268, 269, 270, 274, 277], "last": [229, 231, 235, 240, 243, 246, 248, 253, 255, 274, 275], "later": [49, 269, 271, 277], "latest": 273, "layer": [49, 115, 150, 229, 231, 235, 240, 243, 246, 248, 253, 255, 261, 263, 267, 269, 271, 274, 275, 276], "lead": [275, 278], "leak": [33, 34, 35, 46, 101, 102, 162, 190, 194, 195, 196, 199, 201, 202, 203, 217, 235, 236, 237, 238, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 262, 264, 268, 269], "leaki": [33, 34, 38, 101, 102, 106, 167, 190, 191, 194, 195, 196, 199, 201, 202, 203, 226, 235, 236, 237, 238, 239, 241, 244, 250, 267, 271, 275, 276, 278], "leaky_integr": [35, 38, 103, 106, 268, 269], "leaky_integrator_box": 266, "learn": [0, 11, 12, 13, 267, 273, 275, 276, 277], "leav": [38, 106, 268, 269, 274], "lecun": 274, "left": [195, 196, 202, 203, 247, 249, 254, 256, 271], "legend": [274, 275], "legenstein": [46, 113, 267, 268, 277], "len": 274, "length": 222, "less": [46, 278], "let": 278, "lgplv3": 267, "li": 275, "liboxcel": 266, "liboxparamet": 266, "librari": [0, 12, 13, 267, 273, 275, 277, 278], "licel": [235, 267, 274], "licens": 8, "lif": [38, 46, 106, 161, 162, 163, 167, 195, 196, 199, 203, 217, 225, 247, 249, 250, 254, 256, 257, 259, 260, 262, 271, 272, 275, 276, 278], "lif_ex": 247, "lif_feed_forward_step": 271, "lif_integr": 275, "lif_voltage_trac": 275, "lifadex": [193, 195], "lifadexcel": 246, "lifadexfeedforwardst": 196, "lifadexlay": 246, "lifadexparamet": [195, 196, 246, 247, 248, 249], "lifadexrecurrentcel": 248, "lifadexst": 248, "lifboxfeedforwardst": [199, 250], "lifboxparamet": [199, 250], "lifcel": [240, 267, 271, 272, 275, 278], "lifconvnet": 272, "lifex": [200, 202, 247, 256], "lifexcel": 253, "lifexfeedforwardst": 203, "lifexparamet": [202, 203, 253, 254, 255, 256], "lifexrecurrentcel": 255, "lifexst": [246, 253, 255], "lifparamet": [217, 219, 225, 240, 241, 243, 244, 257, 274, 275], "lifrecurrentcel": [243, 274], "lifrefracparamet": [258, 259, 260], "lifstat": [240, 241, 243, 244], "lift": [27, 278], "lightn": [12, 267, 273], "like": [9, 28, 214, 273, 277, 278], "limit": 274, "lindeberg": [114, 213, 268], "lindeberg2016": 213, "line": [273, 274, 275, 277], "line2d": 275, "linear": [237, 267, 274, 275, 276], "link": [213, 277], "linspac": 266, "linux": 273, "liparamet": [192, 235, 236, 237, 275], "list": [222, 267, 273, 274, 278], "listat": [192, 235], "literatur": [267, 278], "littl": [267, 277], "live": [275, 276, 278], "load": 277, "local": [267, 273, 278], "log": [12, 274, 277], "log_p_i": [272, 274], "log_softmax": [272, 274], "logarithm": [213, 266], "lognorm": 274, "long": [46, 113, 261, 263, 278], "look": [275, 276, 277, 278], "loop": 271, "loss": 274, "low": 168, "lr": 274, "lsnn": [267, 278], "lsnncell": 278, "lsnnparamet": [261, 262, 263, 264], "lsnnrecurr": [267, 278], "lsnnrecurrentcel": 278, "luckili": 271, "m": [168, 194, 201, 265, 267, 272, 274, 275, 277], "maass": [46, 113, 267, 268, 277], "machin": [274, 275], "mai": [145, 271], "main": [272, 278], "mainli": [274, 278], "maintain": [267, 270], "make": [38, 106, 224, 268, 269, 273, 276], "manag": 273, "mani": [27, 277, 278], "manipul": 275, "markram": 278, "math": 29, "matplotlib": [145, 274, 275], "matplotlibrc": 275, "matric": 274, "matrix": [210, 232, 243, 244, 248, 249, 255], "max": [272, 274, 275], "max_epoch": 274, "max_scal": [213, 266], "maxim": [220, 221, 223], "maximum": [213, 222, 266], "maxpool2d": 267, "mean": [33, 46, 101, 268, 269, 271, 273, 274, 278], "mean_loss": 274, "meant": [196, 203, 247, 278], "measur": [224, 274], "mechan": 50, "mem": [33, 34, 35, 46, 101, 194, 195, 196, 199, 201, 202, 203, 217, 235, 236, 237, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 262, 264, 268, 269, 275], "mem_inv": [33, 101, 268, 269], "membran": [33, 34, 35, 49, 101, 102, 115, 161, 162, 165, 168, 190, 191, 193, 194, 195, 200, 201, 216, 219, 227, 234, 238, 239, 268, 269, 275, 278], "memebran": 278, "memori": [46, 113, 261, 263, 278], "mention": 271, "met": 273, "method": [35, 161, 162, 165, 166, 168, 169, 190, 191, 193, 194, 197, 198, 200, 201, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 271, 272, 273, 274, 275, 278], "methodinstructionsprerequisit": 267, "might": [272, 273, 275], "millisecond": 275, "min": 275, "min_scal": [213, 266], "miniconda": 267, "minimum": [213, 266], "mirror": 27, "ml": 274, "mn": 168, "mnist": [12, 267, 272, 278], "mnist_pl": [267, 277], "mock_data": 271, "model": [35, 38, 103, 106, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 196, 199, 203, 217, 220, 221, 223, 225, 230, 232, 233, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 264, 267, 273, 277], "model_aft": 274, "modern": 267, "modul": [0, 1, 6, 9, 13, 14, 15, 21, 27, 34, 35, 38, 44, 46, 48, 49, 55, 58, 59, 86, 89, 145, 149, 153, 155, 159, 196, 199, 203, 204, 267, 268, 269, 271, 272, 274, 275, 276, 278], "modular": 271, "modulenotfounderror": 275, "moment": 274, "month": 267, "more": [33, 34, 35, 46, 49, 102, 103, 113, 168, 195, 196, 199, 202, 203, 217, 230, 232, 235, 236, 237, 241, 244, 247, 249, 250, 254, 256, 259, 260, 262, 264, 267, 268, 269, 271, 273, 274, 276, 277, 278], "most": [273, 274, 275], "mostli": 270, "motiv": [270, 275], "move": 272, "much": 277, "muller": 208, "multi": 257, "multidisciplinari": 270, "mv": [166, 168, 194, 201, 228, 230, 232], "my_dynam": 271, "myparamet": 271, "n": [30, 35, 164, 194, 195, 218, 265, 266, 273, 278], "n_scale": [213, 266], "na": [168, 194], "naiss": 270, "naiv": 274, "name": [38, 106, 267, 268, 269, 274, 275], "namedtupl": [266, 271], "nation": 270, "natur": [38, 106, 268, 269, 271, 276], "necessari": [271, 272], "necessarili": 274, "need": [27, 271, 273, 276, 277, 278], "neg": 274, "net": [8, 277], "network": [0, 6, 8, 11, 12, 13, 14, 35, 94, 117, 145, 268, 269, 270, 273, 275, 276, 277, 278], "neumann": 270, "neural": [0, 6, 8, 13, 14, 35, 94, 117, 268, 269, 270, 275, 276, 277, 278], "neuralensembl": 194, "neuromorph": [267, 270, 275], "neuron": [15, 33, 34, 35, 38, 44, 46, 101, 102, 103, 106, 149, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 214, 217, 219, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 267, 272, 277], "neuronaldynam": [202, 203, 254, 256], "never": [33, 34, 101, 102, 268, 269, 278], "new": [215, 216, 271, 273, 276], "new_stat": 267, "next": [208, 271], "next_stat": 276, "nll_loss": 274, "nn": [94, 115, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 235, 236, 237, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 274, 276], "nn_tutori": 272, "no_grad": 274, "node": 267, "non": [267, 275, 278], "none": [213, 214, 215, 216, 218, 222, 224, 232, 253, 255, 257, 258, 265, 266, 274, 275], "norm": [114, 268], "normal": [232, 243, 244, 248, 249, 255, 271, 274], "nors": [274, 275, 277], "norse2021": 267, "north": 270, "notat": 218, "note": [9, 28, 267, 271, 273, 274, 276, 277, 278], "notebook": [267, 274, 275, 276], "noth": 274, "notic": [33, 101, 268, 269, 276], "now": [270, 271, 272, 273, 274, 278], "np": [274, 275], "num_neuron": 275, "number": [30, 164, 212, 213, 218, 219, 220, 222, 223, 225, 232, 237, 243, 244, 248, 249, 255, 257, 260, 263, 264, 265, 266, 267, 271, 274, 275, 277], "numer": [27, 28, 214, 270], "numpi": [274, 275], "nvidia": 273, "object": [114, 268, 271], "occur": [33, 35, 101, 209, 219, 225, 268, 269], "od": [195, 196, 199, 202, 203, 217, 230, 232, 235, 236, 237, 241, 244, 247, 249, 250, 254, 256, 259, 260, 262, 264], "offer": [28, 273], "offici": [46, 113, 268, 273], "often": [271, 274], "omit": 102, "onc": [271, 275, 278], "one": [195, 196, 199, 202, 203, 214, 217, 220, 223, 230, 232, 241, 244, 247, 249, 250, 254, 256, 259, 260, 262, 264, 267, 272, 275, 276, 277, 278], "ones": [274, 276, 278], "onli": [274, 275, 276, 278], "onlin": [33, 34, 35, 202, 203, 254, 256, 269], "openai": [9, 277], "oper": [49, 115, 218, 275, 278], "optim": [15, 265, 271, 274, 278], "optimis": [273, 274], "optimiz": [229, 231, 240, 243, 246, 248, 253, 255, 261, 262, 263], "optimize_field": 265, "optimize_log": 265, "option": [213, 214, 215, 216, 218, 266], "order": [224, 265, 274], "org": [8, 195, 196, 218, 247, 249, 261, 263, 267, 272, 273, 276], "oscil": 168, "other": [33, 34, 49, 101, 102, 115, 213, 268, 269, 274, 275, 278], "our": [267, 270, 272, 273, 274, 276, 278], "ourselv": 267, "out": [33, 34, 38, 101, 102, 106, 218, 263, 268, 269, 273, 274], "out_channel": 218, "out_featur": 222, "outer": 276, "output": [49, 217, 218, 222, 230, 247, 249, 254, 256, 259, 260, 261, 263, 267, 269, 274, 275, 276, 278], "output_featur": 274, "outsid": 270, "over": [33, 34, 35, 49, 101, 102, 115, 150, 195, 196, 202, 203, 216, 235, 247, 249, 254, 256, 266, 268, 269, 271, 275, 276, 278], "overhead": 277, "overwrit": 266, "own": [267, 270, 271, 272, 276, 278], "p": [163, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 195, 196, 199, 202, 203, 217, 219, 225, 226, 229, 231, 232, 233, 235, 236, 237, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 271, 273, 274, 275], "packag": [13, 145, 271, 273], "pad": 218, "page": [9, 273, 275, 276, 277, 278], "paper": [114, 267, 268, 277], "parallelis": 277, "paramet": [33, 35, 49, 101, 115, 149, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 199, 200, 201, 202, 203, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 271, 272, 275, 278], "parameter": [33, 101, 268, 269], "parametr": [166, 168, 194, 201, 228], "parametrizedlifrecurrentcel": 274, "part": [218, 271, 278], "partial": [270, 275], "particular": [102, 275], "particularli": 277, "pass": [218, 275, 278], "passion": 267, "past": 273, "path": 273, "pattern": 277, "peak": 278, "pedersen": [114, 267, 268, 270], "pehl": [267, 270, 274], "per": [222, 267], "perfect": 276, "perform": [267, 270], "period": [225, 259, 260], "person": 270, "physic": [38, 106, 268, 269], "pickl": 27, "pip": [267, 277], "pip3": 273, "pixel": [211, 267], "place": 275, "plai": [267, 278], "plan": 270, "plastic": 278, "platform": [270, 272], "plausibl": 278, "pleas": [9, 267, 271, 273, 276, 277], "plot": [274, 275], "plt": [274, 275], "plug": [267, 278], "point": [33, 35, 101, 268, 269, 271, 275], "pointwis": 218, "poisson": 28, "polici": 267, "popul": [222, 274], "popular": [35, 38, 103, 106, 268, 269, 278], "population_encod": 28, "port": 278, "posit": [210, 211, 224, 274], "possibl": [168, 267, 270, 272, 276], "post": 8, "postdoc": 267, "potenti": [161, 162, 165, 166, 168, 190, 193, 194, 200, 201, 216, 227, 228, 234, 238, 275, 276], "practic": [46, 267, 271, 274], "pre": 274, "pred": 274, "preexist": 267, "prefer": 273, "preinstal": 273, "preliminari": 267, "prerequisit": [267, 273], "present": 267, "press": [275, 276, 278], "pretti": 271, "previou": [208, 278], "primari": 273, "primarili": 270, "primit": [267, 272], "principl": 275, "print": 274, "probabl": [274, 277], "problem": 271, "process": 275, "produc": [35, 38, 103, 106, 218, 268, 269, 275], "product": 278, "program": 277, "programm": [267, 270], "programmat": 271, "project": 270, "promis": 267, "propag": 144, "properli": 144, "properti": [49, 115, 216, 269, 270], "proven": 267, "provid": [205, 206, 207, 208, 209, 213, 266, 267, 270, 273, 276, 277, 278], "public": 274, "publish": 267, "pull": [267, 273], "push": 214, "py": [271, 273, 274], "pynn": 194, "pypi": 267, "pyplot": [274, 275], "python": [267, 271, 273, 277, 278], "python3": [273, 277], "pytorch": [12, 13, 27, 196, 203, 218, 247, 267, 268, 271, 272, 273, 274, 275, 276, 278], "pytre": [199, 250], "q": 8, "qu": 267, "quai": [267, 273], "question": 270, "quickli": [275, 276], "quickstart_tutori": 276, "r": [46, 113, 224, 267, 268], "radial": 222, "radian": 211, "randn": [217, 230, 247, 249, 254, 256, 259, 260, 267, 271, 272, 274], "random": [232, 243, 244, 248, 249, 255, 274, 278], "rang": [220, 221, 223, 266, 271, 274, 275], "rapid": [33, 101, 268, 269], "rare": 278, "rate": [33, 101, 224, 268, 269, 277], "rather": [28, 271, 274], "ratio": [211, 265], "raw": 274, "re": 271, "reach": [273, 275], "react": 278, "read": [49, 267, 269, 271, 276], "realist": 276, "realiz": 271, "reason": [267, 273], "rec": [195, 196, 217, 244, 249, 254, 256, 257, 260, 264], "recal": [33, 101, 268, 269, 277], "recalcul": [33, 101, 268, 269], "receiv": [267, 270], "recent": [274, 275], "recept": [48, 114, 210, 211, 212, 213, 222, 265, 266], "recognit": [11, 12], "recommend": [272, 273, 276, 278], "record": 275, "recoveri": [168, 234, 278], "rectifi": [274, 275], "recurr": [217, 230, 232, 235, 236, 241, 243, 244, 246, 247, 248, 249, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 275, 276, 277, 278], "recurrent_cel": 274, "recurrent_weight": [232, 243, 244, 248, 249, 255], "recurs": 213, "red": [271, 275], "reduc": [12, 276], "reduct": 274, "ref": 273, "refer": [9, 35, 267, 271, 273, 278], "referenc": 218, "refrac": [259, 260], "refractori": [225, 259, 260], "regard": 275, "regist": [272, 273, 274], "regular": [35, 46, 276], "regularis": 115, "regularizationst": [215, 216], "reinstal": 273, "relat": 154, "relev": [162, 166, 168, 194, 201, 228], "reli": 273, "relu": [217, 275], "remain": 274, "rememb": 276, "remix": 278, "remov": [224, 232, 243, 244, 248, 249, 255, 273], "repeat": 275, "replac": [273, 275, 276, 278], "replic": 278, "repres": [220, 221, 222, 223], "represent": 27, "reproduc": 218, "requir": [9, 216, 266, 267, 274, 277, 278], "requires_grad": [170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 274], "research": [267, 270, 275, 278], "resembl": 274, "reset": [162, 166, 167, 168, 194, 195, 196, 199, 201, 203, 217, 226, 228, 241, 244, 249, 250, 254, 256, 257, 259, 260, 262, 264, 275, 278], "reset_method": [198, 252], "reset_valu": [198, 199, 250, 252], "reshap": 272, "resolv": 271, "resourc": [270, 275], "respect": [33, 101, 211, 217, 222, 244, 249, 254, 256, 257, 260, 264, 268, 269], "respond": 278, "rest": 162, "restrict": 275, "result": [168, 196, 203, 220, 223, 225, 247, 274, 275], "retin": 224, "return": [28, 214, 215, 216, 222, 229, 231, 232, 235, 240, 241, 243, 244, 246, 248, 253, 255, 271, 272, 274, 275, 276], "rev_": 217, "rev_i": 217, "revers": 162, "rf_paramet": 265, "rho": [259, 260], "rho_": [259, 260], "richardson": 222, "right": [195, 196, 202, 203, 247, 249, 254, 256, 271, 274], "rnn": [275, 276], "robert": 277, "robot": 277, "root": [273, 274], "rotat": 211, "royal": 267, "rsnn": 272, "rudimentari": 271, "rule": 98, "rullen": 224, "run": [9, 274, 278], "run_train": 274, "runner": 274, "runtim": 273, "s0": [217, 230, 247, 249, 254, 256, 259, 260], "s1": 274, "s10851": 213, "s2": [202, 203, 254, 256], "salaj": [46, 113, 267, 268, 277], "same": [46, 218, 271, 275], "sampl": [210, 211, 222, 274, 278], "scalabl": 267, "scalar": [271, 278], "scale": [114, 168, 211, 213, 222, 265, 266, 267, 268, 274, 277], "scaleabl": 267, "scatter": 266, "schemmel": 8, "scherr": 277, "scholar": 267, "scholarpedia": [195, 196, 247, 249], "scienc": 270, "scope": 270, "script": 1, "scriptmodul": [217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 235, 236, 237, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "seamlessli": [276, 278], "second": [33, 101, 218, 268, 269, 275], "section": 278, "see": [35, 101, 102, 103, 113, 114, 218, 224, 267, 268, 271, 273, 274, 275, 276, 278], "seen": [274, 278], "select": [266, 273], "self": [232, 243, 244, 248, 249, 254, 255, 256, 257, 260, 267, 272, 274], "semant": 267, "sens": [224, 270, 275], "sensit": 168, "seq_length": [219, 220, 223, 225, 272, 274], "sequenc": [229, 231, 240, 243, 246, 248, 253, 255, 275], "sequence_length": [220, 223, 225], "sequenti": [224, 267, 276], "sequentialst": [267, 276], "seri": [29, 98, 278], "serv": [9, 267, 274, 277, 278], "server": 273, "set": [35, 213, 222, 232, 243, 244, 248, 249, 255, 265, 266, 267, 275, 276], "set_detect_anomali": 274, "set_xlabel": 274, "setup": [272, 273], "sever": [267, 274, 278], "shape": [218, 263, 265, 266, 267, 272, 274, 275], "share": [217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 235, 236, 237, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "sharp": [194, 201], "shd": 8, "shift": [38, 106, 268, 269], "short": [46, 113, 261, 263, 278], "shortcut": 274, "should": [213, 214, 220, 221, 223, 225, 266, 271, 272, 274, 276, 278], "show": [271, 273, 275, 276], "shown": 278, "shuffl": 274, "side": 218, "sign": 223, "signal": [114, 268, 278], "similar": [46, 225, 276, 277], "similarli": [271, 274], "simlar": [44, 204], "simpl": [267, 268, 270, 272, 274, 275, 276, 278], "simpler": [38, 106, 268, 269], "simplest": [218, 275], "simpli": [27, 49, 269, 272, 276, 278], "simplic": 274, "simplifi": [38, 106, 268, 269, 271, 272], "simul": [219, 266, 276, 277, 278], "sinc": [266, 271, 272, 275], "singl": [167, 195, 196, 199, 202, 203, 217, 218, 226, 230, 232, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 264, 267, 274, 276], "singular": 222, "situat": [27, 274], "size": [210, 211, 212, 217, 218, 232, 237, 244, 249, 254, 256, 257, 260, 263, 264, 265, 266, 277], "slider": 275, "slow": [33, 101, 168, 268, 269], "slower": [168, 275], "small": [33, 101, 267, 268, 269], "smaller": [168, 275], "smooth": [29, 98], "snn": [271, 278], "snncell": 266, "so": [33, 34, 101, 267, 268, 269, 271, 274, 275, 276, 277], "softwar": 267, "solut": [273, 276], "solv": [270, 271, 278], "some": [9, 28, 33, 34, 49, 101, 102, 214, 215, 216, 268, 269, 271, 273, 274, 275, 277, 278], "someon": 278, "sometim": 272, "sophist": 274, "sourc": [161, 162, 163, 165, 166, 167, 168, 169, 178, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267], "space": [114, 218, 266, 268, 275], "spars": [240, 241, 243, 244, 267, 270, 275, 278], "spatial": [212, 265], "spatio": 213, "specif": [9, 114, 195, 196, 199, 202, 203, 217, 230, 232, 235, 236, 237, 241, 244, 247, 249, 250, 254, 256, 259, 260, 262, 264, 268, 271, 275, 277, 278], "speech_command": 277, "speed": [194, 201, 270], "spike": [0, 6, 8, 11, 12, 13, 14, 28, 33, 34, 35, 38, 46, 49, 94, 101, 102, 103, 106, 114, 115, 117, 150, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194, 195, 196, 199, 201, 203, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 228, 229, 230, 231, 232, 233, 240, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 260, 264, 268, 270, 271, 276, 277, 278], "spike_accumul": 214, "spiking_method": [229, 230, 231, 232], "springer": 213, "sq": 168, "sqrt": [213, 266], "squar": [168, 211], "sscce": 267, "stabl": 218, "stack": [274, 275], "stai": 144, "stand": 35, "standard": [267, 274], "start": [273, 275, 276, 278], "state": [49, 97, 122, 161, 163, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 199, 200, 202, 203, 208, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 275], "stateless": [14, 27, 28, 269], "stdp": 278, "step": [30, 35, 49, 163, 164, 167, 195, 196, 199, 202, 203, 214, 217, 218, 219, 220, 221, 223, 225, 226, 229, 230, 231, 232, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 269, 271, 273, 274, 275], "stepwis": 34, "stimul": 275, "store": [276, 277], "str": [162, 166, 168, 194, 198, 201, 218, 228, 242, 252, 271], "stradmann": 8, "straightforward": 271, "strategi": [267, 270], "stride": 218, "strive": 267, "strong": 224, "strongli": 168, "structur": [267, 270, 271], "student": 267, "studi": 271, "style": 275, "subject": 271, "subpackag": 145, "subplot": 274, "subramonei": [46, 113, 267, 268], "subthreshold": 168, "subtract": [33, 101, 268, 269], "success": 275, "successfulli": 277, "sudden": [38, 106, 268, 269], "suffici": 270, "sugar": 271, "suggest": [267, 278], "suit": 276, "sum": [215, 268, 274], "super": [162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194, 195, 196, 198, 199, 201, 202, 203, 217, 219, 225, 226, 228, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 272, 274], "supercomput": 270, "superspik": [35, 271, 278], "support": [272, 273, 274, 278], "surrog": [162, 166, 168, 194, 201, 228, 271, 274, 278], "sweden": [267, 270], "swedish": 270, "syn": [33, 35, 46, 101, 194, 195, 196, 201, 202, 203, 217, 235, 236, 237, 241, 244, 247, 249, 254, 256, 257, 259, 260, 262, 264, 268, 269, 275], "syn_inv": [33, 101, 268, 269], "synaps": 267, "synapt": [162, 163, 190, 193, 194, 200, 201, 238, 274, 275], "syntact": 271, "synthet": 35, "system": [38, 106, 268, 269, 271, 274, 276, 278], "systemat": 8, "t": [29, 218, 274, 275, 278], "t0": 275, "t1": 275, "t10k": 274, "t_0": 275, "t_1": 275, "tabl": 278, "take": [196, 199, 203, 214, 222, 224, 247, 250, 266, 273, 274, 275, 276, 278], "taken": 267, "target": 274, "task": [267, 272, 273, 274, 278], "tau": [33, 101, 268, 269], "tau_": [29, 33, 34, 35, 46, 101, 194, 195, 196, 199, 201, 202, 203, 217, 235, 236, 237, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 262, 264, 268, 269, 274, 275], "tau_ada_inv": 194, "tau_b": 46, "tau_inv": 168, "tau_mem": 275, "tau_mem_inv": [190, 194, 198, 201, 238, 242, 252, 274, 275], "tau_mem_inv_aft": 274, "tau_mem_inv_befor": 274, "tau_syn": 275, "tau_syn_exc_inv": 162, "tau_syn_inh_inv": 162, "tau_syn_inv": [190, 194, 201, 238, 242, 274, 275], "techiqu": 98, "techniqu": 274, "technologi": 267, "tediou": 271, "tell": 224, "tempor": [6, 27, 213, 218, 224, 229, 231, 240, 243, 246, 248, 253, 255, 266, 275, 277, 278], "temptest2": 273, "tension": 278, "tensor": [27, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 276, 278], "tensorboard": [145, 273, 277], "term": [34, 38, 46, 49, 102, 106, 113, 199, 214, 219, 250, 261, 263, 278], "test": 271, "test_load": 274, "test_loss": 274, "text": [33, 34, 35, 46, 101, 167, 194, 195, 196, 199, 201, 202, 203, 217, 226, 230, 232, 235, 236, 237, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 262, 264, 268, 269, 274, 275], "th": [35, 46, 167, 195, 196, 199, 202, 203, 211, 217, 226, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 262, 264, 274, 275], "than": 278, "thei": [27, 267, 271, 274, 275, 276, 278], "them": [274, 275, 278], "theori": [114, 268], "therefor": [27, 270, 271, 274, 276, 278], "theta": [35, 46, 167, 195, 196, 199, 203, 217, 226, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 262, 264], "thi": [11, 12, 13, 33, 34, 35, 38, 46, 49, 101, 102, 106, 115, 218, 224, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "thing": [271, 272, 275, 276, 278], "thorough": 9, "thorp": 224, "those": 274, "though": 274, "thought": 225, "three": [273, 278], "threshold": [35, 38, 103, 106, 162, 166, 168, 194, 201, 228, 262, 268, 271, 274, 275, 278], "through": [270, 272, 277], "thumb": 98, "time": [27, 29, 33, 34, 44, 46, 49, 98, 101, 102, 115, 150, 162, 163, 167, 168, 190, 194, 195, 196, 199, 201, 202, 203, 204, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 229, 230, 231, 232, 235, 238, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 261, 262, 263, 266, 268, 275, 276, 277], "time_const": 266, "timeconst": 274, "timestep": [33, 34, 101, 102, 167, 195, 196, 199, 202, 203, 219, 226, 229, 231, 235, 236, 237, 240, 243, 246, 248, 250, 253, 255, 257, 259, 260, 264, 266, 267, 268, 269, 275, 276, 278], "titl": 267, "togeth": [167, 195, 196, 199, 203, 217, 226, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 262, 264], "tonic": [230, 232], "tonic_spik": [230, 232], "tool": [1, 267, 270, 278], "toolset": 270, "top": [272, 273], "torch": [267, 271, 272, 273, 274, 275, 276, 278], "torchtext": 273, "torchvis": [273, 274], "total": 215, "totensor": 274, "tqdm": 274, "trace": 275, "traceback": [274, 275], "track": [114, 229, 231, 240, 243, 246, 248, 253, 255, 268, 271, 278], "train": [11, 12, 144, 220, 223, 225, 265, 267, 273, 275, 276, 277], "train_data": 274, "train_load": 274, "training_loss": 274, "trang": 274, "transform": [274, 275], "transit": [167, 195, 196, 199, 203, 209, 217, 226, 235, 236, 237, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 262, 264], "translat": [114, 268], "treat": 274, "tri": 278, "trigger": 194, "trivial": 276, "troubleshoot": 267, "true": [170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 240, 241, 243, 244, 265, 274], "truncat": [30, 164], "try": [267, 273], "tsodyk": 278, "tupl": [163, 167, 178, 192, 195, 196, 199, 202, 203, 214, 218, 229, 231, 232, 235, 240, 241, 243, 244, 246, 248, 253, 255, 266, 267, 271], "turn": [218, 274, 275], "tutori": [267, 272, 274, 276], "two": [33, 101, 218, 219, 222, 267, 268, 269, 273, 275, 276, 278], "type": [9, 198, 214, 222, 252, 266, 267, 271, 273, 277], "typic": [27, 214, 222, 275, 278], "u": [168, 230, 232, 234, 267, 274, 278], "ubuntu": 273, "ubyt": 274, "under": [8, 267, 270], "underli": 271, "understand": 271, "undertaken": 270, "unfortun": 271, "uninstal": 273, "uniqu": 224, "unit": [262, 264, 267, 275], "univers": 267, "unix": 273, "unless": 271, "unlik": 274, "until": 268, "unus": [167, 226], "up": [33, 34, 101, 102, 267, 268, 269, 271, 274, 277], "updat": 278, "uppmax": 270, "uppsala": 270, "upright": 277, "url": [267, 273], "us": [9, 12, 27, 29, 35, 98, 114, 162, 166, 167, 168, 194, 195, 196, 199, 201, 202, 203, 217, 218, 220, 221, 223, 225, 226, 228, 229, 231, 232, 235, 236, 237, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 266, 268, 271, 272, 273, 274, 275, 276, 277, 278], "usag": [261, 263], "user": [49, 269, 271], "util": [199, 250, 274], "v": [33, 34, 35, 46, 101, 161, 165, 167, 168, 191, 193, 195, 196, 197, 199, 200, 202, 203, 216, 217, 226, 227, 230, 232, 234, 235, 236, 237, 239, 241, 244, 245, 247, 249, 250, 251, 254, 256, 257, 259, 260, 262, 264, 268, 269, 273, 275, 278], "v_": [33, 34, 35, 46, 101, 167, 195, 196, 199, 202, 203, 217, 226, 235, 236, 237, 241, 244, 247, 249, 250, 254, 256, 257, 259, 260, 262, 264, 268, 269, 274, 275], "v_leak": [190, 194, 198, 201, 238, 242, 252, 274, 275], "v_reset": [162, 166, 194, 198, 201, 228, 242, 252, 274], "v_rest": 162, "v_th": [166, 168, 194, 198, 201, 228, 242, 252, 274, 275], "v_th_after": 274, "v_th_befor": 274, "v_thresh": 162, "valu": [28, 168, 194, 213, 214, 218, 220, 221, 222, 223, 225, 266, 271, 274, 275, 276, 278], "van": 224, "vanilla": [9, 277], "variabl": [168, 234, 276, 278], "variant": 267, "veri": [103, 268, 274, 277], "verifi": 277, "version": [12, 38, 106, 235, 236, 237, 267, 268, 269, 272, 273, 274], "versu": 224, "vertic": 275, "via": [28, 267, 271, 273, 278], "view": [272, 274], "view_a": 274, "visual": [114, 224, 268, 271], "visualis": [222, 273], "vo": 274, "voila": 273, "voltag": [33, 34, 35, 101, 102, 191, 195, 202, 216, 219, 235, 239, 268, 269, 272, 274, 278], "voltage_trac": 275, "von": 270, "w": [33, 34, 35, 46, 113, 218, 235, 236, 237, 267, 268, 269, 271], "w_": [217, 218, 244, 249, 256, 257, 260, 264], "wa": 267, "wai": [28, 267, 274, 275], "want": 271, "warmli": 267, "we": [11, 12, 33, 101, 218, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "weight": [149, 232, 237, 243, 244, 248, 249, 255, 265, 274], "welcom": 267, "were": 270, "what": [9, 214, 224, 277], "when": [46, 271, 273, 278], "where": [27, 29, 49, 115, 196, 203, 217, 244, 247, 249, 254, 256, 257, 260, 264, 265, 266, 267, 269, 271, 272, 275, 277], "whether": [209, 240, 241, 243, 244], "which": [9, 49, 211, 213, 214, 218, 220, 221, 222, 223, 229, 231, 240, 243, 246, 248, 253, 255, 261, 262, 263, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278], "while": [33, 34, 101, 102, 268, 269, 270, 274, 278], "white": 278, "whose": [222, 275], "why": 271, "wide": 276, "width": 218, "wikipedia": [33, 34, 35, 49, 101, 268, 269], "window": [29, 98], "wise": 275, "wish": [267, 271, 276], "wit": 263, "within": [267, 270, 278], "without": [199, 230, 232, 235, 236, 241, 244, 247, 250, 254, 259, 261, 262, 273, 277, 278], "wolfgang": 277, "word": [33, 34, 101, 102, 268, 269, 275, 278], "work": [46, 113, 268, 270, 271, 273, 274, 275, 276], "worth": [271, 272], "would": [271, 273, 274, 276, 278], "wouldn": 278, "wrap": [229, 231, 235, 240, 243, 246, 248, 253, 255, 276], "wrapper": 271, "write": [153, 267, 271, 274], "www": [195, 196, 247, 249], "x": [29, 205, 206, 207, 210, 211, 265, 272, 274, 278], "x_1": 208, "x_2": 208, "xlabel": [274, 275], "xor": 207, "y": [8, 29, 205, 206, 207, 210, 211, 265, 278], "y_prev": 208, "yann": 274, "year": 267, "ylabel": 275, "you": [27, 267, 271, 272, 273, 274, 275, 276, 277, 278], "your": [267, 271, 272, 273, 276], "yourself": 272, "z": [35, 46, 167, 195, 196, 199, 203, 209, 214, 215, 216, 217, 222, 226, 241, 244, 245, 247, 249, 250, 254, 256, 257, 259, 260, 262, 264, 271, 274, 275], "z_": [195, 196, 217, 244, 249, 254, 256, 257, 260, 264], "z_prev": 209, "z_r": [259, 260], "zenk": 8, "zenodo": 267, "zero": [216, 229, 231, 232, 235, 240, 241, 243, 244, 246, 248, 253, 255, 261, 263, 267, 275], "zero_grad": 274}, "titles": ["norse", "norse.benchmark", "norse.benchmark.benchmark", "norse.benchmark.main", "norse.benchmark.norse_lif", "norse.benchmark.plot", "norse.dataset", "norse.dataset.memory", "norse.dataset.spiking_heidelberg", "norse.task", "norse.task.correlation_experiment", "norse.task.mnist", "norse.task.mnist_pl", "norse.torch", "norse.torch.functional", "norse.torch.functional.adjoint", "norse.torch.functional.adjoint.lif_adjoint", "norse.torch.functional.adjoint.lif_mc_adjoint", "norse.torch.functional.adjoint.lif_mc_refrac_adjoint", "norse.torch.functional.adjoint.lif_refrac_adjoint", "norse.torch.functional.adjoint.lsnn_adjoint", "norse.torch.functional.adjoint.test", "norse.torch.functional.adjoint.test.test_lif_adjoint", "norse.torch.functional.adjoint.test.test_lif_refrac_adjoint", "norse.torch.functional.adjoint.test.test_lsnn_adjoint", "norse.torch.functional.coba_lif", "norse.torch.functional.correlation_sensor", "norse.torch.functional.decode", "norse.torch.functional.encode", "norse.torch.functional.filter", "norse.torch.functional.heaviside", "norse.torch.functional.iaf", "norse.torch.functional.izhikevich", "norse.torch.functional.leaky_integrator", "norse.torch.functional.leaky_integrator_box", "norse.torch.functional.lif", "norse.torch.functional.lif_adex", "norse.torch.functional.lif_adex_refrac", "norse.torch.functional.lif_box", "norse.torch.functional.lif_correlation", "norse.torch.functional.lif_ex", "norse.torch.functional.lif_mc", "norse.torch.functional.lif_mc_refrac", "norse.torch.functional.lif_refrac", "norse.torch.functional.lift", "norse.torch.functional.logical", "norse.torch.functional.lsnn", "norse.torch.functional.parameter", "norse.torch.functional.receptive_field", "norse.torch.functional.regularization", "norse.torch.functional.reset", "norse.torch.functional.spikes_to_times_decoder", "norse.torch.functional.stdp", "norse.torch.functional.stdp_sensor", "norse.torch.functional.superspike", "norse.torch.functional.test", "norse.torch.functional.test.test_coba_lif", "norse.torch.functional.test.test_decode", "norse.torch.functional.test.test_encode", "norse.torch.functional.test.test_exp_filter", "norse.torch.functional.test.test_heaviside", "norse.torch.functional.test.test_iaf", "norse.torch.functional.test.test_izhikevich", "norse.torch.functional.test.test_leaky_integrator", "norse.torch.functional.test.test_leaky_integrator_box", "norse.torch.functional.test.test_lif", "norse.torch.functional.test.test_lif_adex", "norse.torch.functional.test.test_lif_adex_refrac", "norse.torch.functional.test.test_lif_box", "norse.torch.functional.test.test_lif_ex", "norse.torch.functional.test.test_lif_mc", "norse.torch.functional.test.test_lif_mc_refrac", "norse.torch.functional.test.test_lif_refrac", "norse.torch.functional.test.test_lift", "norse.torch.functional.test.test_logical", "norse.torch.functional.test.test_lsnn", "norse.torch.functional.test.test_receptive_field", "norse.torch.functional.test.test_regularization", "norse.torch.functional.test.test_spikes_to_times_decoder", "norse.torch.functional.test.test_stdp", "norse.torch.functional.test.test_stdp_sensor", "norse.torch.functional.test.test_superspike", "norse.torch.functional.test.test_threshold", "norse.torch.functional.test.test_tsodyks_makram", "norse.torch.functional.threshold", "norse.torch.functional.tsodyks_makram", "norse.torch.models", "norse.torch.models.conv", "norse.torch.models.mobilenet", "norse.torch.models.test", "norse.torch.models.test.test_conv", "norse.torch.models.test.test_mobilenet", "norse.torch.models.test.test_vgg", "norse.torch.models.vgg", "norse.torch.module", "norse.torch.module.coba_lif", "norse.torch.module.conv", "norse.torch.module.encode", "norse.torch.module.exp_filter", "norse.torch.module.iaf", "norse.torch.module.izhikevich", "norse.torch.module.leaky_integrator", "norse.torch.module.leaky_integrator_box", "norse.torch.module.lif", "norse.torch.module.lif_adex", "norse.torch.module.lif_adex_refrac", "norse.torch.module.lif_box", "norse.torch.module.lif_correlation", "norse.torch.module.lif_ex", "norse.torch.module.lif_mc", "norse.torch.module.lif_mc_refrac", "norse.torch.module.lif_refrac", "norse.torch.module.lift", "norse.torch.module.lsnn", "norse.torch.module.receptive_field", "norse.torch.module.regularization", "norse.torch.module.sequential", "norse.torch.module.snn", "norse.torch.module.spikes_to_times_decoder", "norse.torch.module.test", "norse.torch.module.test.test_coba", "norse.torch.module.test.test_conv", "norse.torch.module.test.test_encode", "norse.torch.module.test.test_exp_filter", "norse.torch.module.test.test_iaf", "norse.torch.module.test.test_izhikevich", "norse.torch.module.test.test_leaky_integrator", "norse.torch.module.test.test_leaky_integrator_box", "norse.torch.module.test.test_lif", "norse.torch.module.test.test_lif_adex", "norse.torch.module.test.test_lif_adex_refrac", "norse.torch.module.test.test_lif_box", "norse.torch.module.test.test_lif_correlation", "norse.torch.module.test.test_lif_ex", "norse.torch.module.test.test_lif_mc", "norse.torch.module.test.test_lif_mc_refrac", "norse.torch.module.test.test_lif_refrac", "norse.torch.module.test.test_lift", "norse.torch.module.test.test_lsnn", "norse.torch.module.test.test_receptive_field", "norse.torch.module.test.test_regularization", "norse.torch.module.test.test_sequential", "norse.torch.module.test.test_snn", "norse.torch.module.test.test_spikes_to_times_decoder", "norse.torch.module.test.test_training", "norse.torch.utils", "norse.torch.utils.clone", "norse.torch.utils.export_nir", "norse.torch.utils.import_nir", "norse.torch.utils.plot", "norse.torch.utils.plot.plot", "norse.torch.utils.pytree", "norse.torch.utils.state", "norse.torch.utils.tensorboard", "norse.torch.utils.tensorboard.tensorboard", "norse.torch.utils.test", "norse.torch.utils.test.test_nir_export", "norse.torch.utils.test.test_nir_import", "norse.torch.utils.test.test_tensorboard", "norse.utils", "Complete API", "norse.torch.functional.coba_lif.CobaLIFFeedForwardState", "norse.torch.functional.coba_lif.CobaLIFParameters", "norse.torch.functional.coba_lif.coba_lif_feed_forward_step", "norse.torch.functional.heaviside", "norse.torch.functional.iaf.IAFFeedForwardState", "norse.torch.functional.iaf.IAFParameters", "norse.torch.functional.iaf.iaf_feed_forward_step", "norse.torch.functional.izhikevich.IzhikevichParameters", "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior", "norse.torch.functional.izhikevich.accomodation", "norse.torch.functional.izhikevich.bistability", "norse.torch.functional.izhikevich.class_1_exc", "norse.torch.functional.izhikevich.class_2_exc", "norse.torch.functional.izhikevich.dap", "norse.torch.functional.izhikevich.inhibition_induced_bursting", "norse.torch.functional.izhikevich.inhibition_induced_spiking", "norse.torch.functional.izhikevich.integrator", "norse.torch.functional.izhikevich.izhikevich_feed_forward_step", "norse.torch.functional.izhikevich.mixed_mode", "norse.torch.functional.izhikevich.phasic_bursting", "norse.torch.functional.izhikevich.phasic_spiking", "norse.torch.functional.izhikevich.rebound_burst", "norse.torch.functional.izhikevich.rebound_spike", "norse.torch.functional.izhikevich.resonator", "norse.torch.functional.izhikevich.spike_frequency_adaptation", "norse.torch.functional.izhikevich.spike_latency", "norse.torch.functional.izhikevich.subthreshold_oscillation", "norse.torch.functional.izhikevich.tonic_bursting", "norse.torch.functional.izhikevich.tonic_spiking", "norse.torch.functional.leaky_integrator.LIParameters", "norse.torch.functional.leaky_integrator.LIState", "norse.torch.functional.leaky_integrator.li_feed_forward_step", "norse.torch.functional.lif_adex.LIFAdExFeedForwardState", "norse.torch.functional.lif_adex.LIFAdExParameters", "norse.torch.functional.lif_adex.lif_adex_current_encoder", "norse.torch.functional.lif_adex.lif_adex_feed_forward_step", "norse.torch.functional.lif_box.LIFBoxFeedForwardState", "norse.torch.functional.lif_box.LIFBoxParameters", "norse.torch.functional.lif_box.lif_box_feed_forward_step", "norse.torch.functional.lif_ex.LIFExFeedForwardState", "norse.torch.functional.lif_ex.LIFExParameters", "norse.torch.functional.lif_ex.lif_ex_current_encoder", "norse.torch.functional.lif_ex.lif_ex_feed_forward_step", "norse.torch.functional.lift", "norse.torch.functional.logical.logical_and", "norse.torch.functional.logical.logical_or", "norse.torch.functional.logical.logical_xor", "norse.torch.functional.logical.muller_c", "norse.torch.functional.logical.posedge_detector", "norse.torch.functional.receptive_field.gaussian_kernel", "norse.torch.functional.receptive_field.spatial_receptive_field", "norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives", "norse.torch.functional.receptive_field.temporal_scale_distribution", "norse.torch.functional.regularization.regularize_step", "norse.torch.functional.regularization.spike_accumulator", "norse.torch.functional.regularization.voltage_accumulator", "norse.torch.module.coba_lif.CobaLIFCell", "norse.torch.module.conv.LConv2d", "norse.torch.module.encode.ConstantCurrentLIFEncoder", "norse.torch.module.encode.PoissonEncoder", "norse.torch.module.encode.PoissonEncoderStep", "norse.torch.module.encode.PopulationEncoder", "norse.torch.module.encode.SignedPoissonEncoder", "norse.torch.module.encode.SpikeLatencyEncoder", "norse.torch.module.encode.SpikeLatencyLIFEncoder", "norse.torch.module.iaf.IAFCell", "norse.torch.module.iaf.IAFFeedForwardState", "norse.torch.module.iaf.IAFParameters", "norse.torch.module.izhikevich.Izhikevich", "norse.torch.module.izhikevich.IzhikevichCell", "norse.torch.module.izhikevich.IzhikevichRecurrent", "norse.torch.module.izhikevich.IzhikevichRecurrentCell", "norse.torch.module.izhikevich.IzhikevichSpikingBehavior", "norse.torch.module.izhikevich.IzhikevichState", "norse.torch.module.leaky_integrator.LI", "norse.torch.module.leaky_integrator.LICell", "norse.torch.module.leaky_integrator.LILinearCell", "norse.torch.module.leaky_integrator.LIParameters", "norse.torch.module.leaky_integrator.LIState", "norse.torch.module.lif.LIF", "norse.torch.module.lif.LIFCell", "norse.torch.module.lif.LIFParameters", "norse.torch.module.lif.LIFRecurrent", "norse.torch.module.lif.LIFRecurrentCell", "norse.torch.module.lif.LIFState", "norse.torch.module.lif_adex.LIFAdEx", "norse.torch.module.lif_adex.LIFAdExCell", "norse.torch.module.lif_adex.LIFAdExRecurrent", "norse.torch.module.lif_adex.LIFAdExRecurrentCell", "norse.torch.module.lif_box.LIFBoxCell", "norse.torch.module.lif_box.LIFBoxFeedForwardState", "norse.torch.module.lif_box.LIFBoxParameters", "norse.torch.module.lif_ex.LIFEx", "norse.torch.module.lif_ex.LIFExCell", "norse.torch.module.lif_ex.LIFExRecurrent", "norse.torch.module.lif_ex.LIFExRecurrentCell", "norse.torch.module.lif_mc.LIFMCRecurrentCell", "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell", "norse.torch.module.lif_refrac.LIFRefracCell", "norse.torch.module.lif_refrac.LIFRefracRecurrentCell", "norse.torch.module.lsnn.LSNN", "norse.torch.module.lsnn.LSNNCell", "norse.torch.module.lsnn.LSNNRecurrent", "norse.torch.module.lsnn.LSNNRecurrentCell", "norse.torch.module.receptive_field.SpatialReceptiveField2d", "norse.torch.module.receptive_field.TemporalReceptiveField", "1. Getting started", "norse.torch", "norse.torch.functional", "<span class=\"section-number\">8. </span>About Norse", "<span class=\"section-number\">9. </span>Development Documentation", "<span class=\"section-number\">7. </span>Hardware acceleration", "<span class=\"section-number\">1. </span>Installing Norse", "<span class=\"section-number\">6. </span>Parameter learning in Spiking Neural Networks", "<span class=\"section-number\">4. </span>Introduction to spiking systems", "<span class=\"section-number\">2. </span>Quickstart", "<span class=\"section-number\">5. </span>Running Tasks", "<span class=\"section-number\">3. </span>Working with Norse"], "titleterms": {"1": 267, "2": 267, "3": 267, "4": 267, "5": 267, "6": 267, "7": 267, "8": 267, "The": 273, "about": 270, "acceler": [272, 273], "accomod": 170, "acknowledg": 270, "action": 278, "adapt": [268, 269], "adjoint": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "api": 160, "appli": 276, "architectur": 271, "base": [268, 269], "benchmark": [1, 2, 3, 4, 5], "bistabl": 171, "bonu": 276, "box": [268, 269], "build": 276, "cartpol": 277, "cifar10": 277, "citat": 267, "class_1_exc": 172, "class_2_exc": 173, "classifi": 267, "clone": 146, "coba_lif": [25, 95, 161, 162, 163, 217], "coba_lif_feed_forward_step": 163, "cobalifcel": 217, "cobaliffeedforwardst": 161, "cobalifparamet": 162, "command": 277, "common": 273, "complet": 160, "comput": 271, "conclus": 274, "conda": 273, "conduct": [268, 269], "constant": 274, "constantcurrentlifencod": 219, "contact": 270, "contain": 268, "contribut": 267, "conv": [87, 96, 218], "convolut": [267, 268], "correl": 277, "correlation_experi": 10, "correlation_sensor": 26, "credit": 267, "dap": 174, "dataset": [6, 7, 8, 274], "decid": 278, "decod": 27, "deep": 278, "defin": [274, 275], "defitinit": 274, "depend": [269, 273], "develop": 271, "docker": 273, "document": 271, "dynam": 278, "each": 273, "encod": [28, 97, 219, 220, 221, 222, 223, 224, 225, 268, 269], "evalu": 274, "event": 278, "exampl": [267, 271, 274, 278], "exp_filt": 98, "experi": 277, "exponenti": [268, 269], "export_nir": 147, "field": [268, 269], "filter": 29, "fire": [268, 269], "first": 275, "follow": 273, "found": 273, "from": 273, "function": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 269], "gaussian_kernel": 210, "get": 267, "gpu": 273, "graph": 271, "hardwar": 272, "heavisid": [30, 164], "iaf": [31, 99, 165, 166, 167, 226, 227, 228, 269], "iaf_feed_forward_step": 167, "iafcel": 226, "iaffeedforwardst": [165, 227], "iafparamet": [166, 228], "implement": 271, "import": 271, "import_nir": 148, "importerror": 273, "incompat": 273, "inhibition_induced_burst": 175, "inhibition_induced_spik": 176, "input": 275, "instal": [267, 273], "integr": [177, 268, 269], "introduct": 275, "izhikevich": [32, 100, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 229, 230, 231, 232, 233, 234, 268, 269], "izhikevich_feed_forward_step": 178, "izhikevichcel": 230, "izhikevichparamet": 168, "izhikevichrecurr": 231, "izhikevichrecurrentcel": 232, "izhikevichspikingbehavior": [169, 233], "izhikevichst": 234, "lconv2d": 218, "leaki": [268, 269], "leaky_integr": [33, 101, 190, 191, 192, 235, 236, 237, 238, 239], "leaky_integrator_box": [34, 102], "learn": [274, 278], "li": 235, "li_feed_forward_step": 192, "licel": 236, "licens": 267, "lif": [35, 103, 240, 241, 242, 243, 244, 245, 268, 269, 274], "lif_adex": [36, 104, 193, 194, 195, 196, 246, 247, 248, 249], "lif_adex_current_encod": 195, "lif_adex_feed_forward_step": 196, "lif_adex_refrac": [37, 105], "lif_adjoint": 16, "lif_box": [38, 106, 197, 198, 199, 250, 251, 252], "lif_box_feed_forward_step": 199, "lif_correl": [39, 107], "lif_ex": [40, 108, 200, 201, 202, 203, 253, 254, 255, 256], "lif_ex_current_encod": 202, "lif_ex_feed_forward_step": 203, "lif_mc": [41, 109, 257], "lif_mc_adjoint": 17, "lif_mc_refrac": [42, 110, 258], "lif_mc_refrac_adjoint": 18, "lif_refrac": [43, 111, 259, 260], "lif_refrac_adjoint": 19, "lifadex": 246, "lifadexcel": 247, "lifadexfeedforwardst": 193, "lifadexparamet": 194, "lifadexrecurr": 248, "lifadexrecurrentcel": 249, "lifboxcel": 250, "lifboxfeedforwardst": [197, 251], "lifboxparamet": [198, 252], "lifcel": 241, "lifex": 253, "lifexcel": 254, "lifexfeedforwardst": 200, "lifexparamet": 201, "lifexrecurr": 255, "lifexrecurrentcel": 256, "lifmcrecurrentcel": 257, "lifmcrefracrecurrentcel": 258, "lifparamet": 242, "lifrecurr": 243, "lifrecurrentcel": 244, "lifrefraccel": 259, "lifrefracrecurrentcel": 260, "lifstat": 245, "lift": [44, 112, 204], "lightn": 277, "lilinearcel": 237, "liparamet": [190, 238], "listat": [191, 239], "load": 274, "logic": [45, 205, 206, 207, 208, 209, 269], "logical_and": 205, "logical_or": 206, "logical_xor": 207, "long": [267, 268, 269], "loop": 274, "lsnn": [46, 113, 261, 262, 263, 264, 268, 269], "lsnn_adjoint": 20, "lsnncell": 262, "lsnnrecurr": 263, "lsnnrecurrentcel": 264, "main": 3, "markram": 269, "mc": 269, "membran": 274, "memori": [7, 268, 269, 277], "mixed_mod": 179, "mnist": [11, 274, 277], "mnist_pl": 12, "mobilenet": 88, "model": [86, 87, 88, 89, 90, 91, 92, 93, 268, 269, 271, 272, 274, 275, 276, 278], "modul": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "muller_c": 208, "multicompartment": [268, 269], "nest": 272, "network": [267, 274], "neural": [267, 274], "neuron": [268, 269, 271, 274, 275, 276, 278], "nors": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 278], "norse_lif": 4, "norse_op": 273, "notebook": 273, "oper": 269, "option": 273, "other": 273, "our": 275, "paramet": [47, 274, 277], "phasic_burst": 180, "phasic_spik": 181, "pip": 273, "plasitici": 278, "plastic": 269, "plot": [5, 149, 150], "poissonencod": 220, "poissonencoderstep": 221, "populationencod": 222, "posedge_detector": 209, "potenti": 278, "predefin": 276, "problem": [273, 278], "pytorch": 277, "pytre": 151, "quickstart": 276, "rebound_burst": 182, "rebound_spik": 183, "recept": [268, 269], "receptive_field": [48, 114, 210, 211, 212, 213, 265, 266], "recognit": 277, "recurr": 274, "refract": 268, "refractori": [268, 269], "regular": [49, 115, 214, 215, 216, 269], "regularize_step": 214, "requir": 273, "reset": 50, "reson": 184, "run": [267, 273, 277], "sequenti": 116, "short": [267, 268, 269], "shortcut": 271, "signedpoissonencod": 223, "similar": 267, "simul": 275, "small": 274, "snn": [117, 274], "so": 273, "sourc": 273, "spatial_receptive_field": 211, "spatial_receptive_fields_with_deriv": 212, "spatialreceptivefield2d": 265, "specif": 273, "speech": 277, "spike": [267, 269, 274, 275], "spike_accumul": 215, "spike_frequency_adapt": 185, "spike_lat": 186, "spikelatencyencod": 224, "spikelatencylifencod": 225, "spikes_to_times_decod": [51, 118], "spiking_heidelberg": 8, "start": 267, "state": [152, 276, 278], "stdp": [52, 269], "stdp_sensor": 53, "subthreshold_oscil": 187, "superspik": 54, "symbol": 273, "system": 275, "task": [9, 10, 11, 12, 277], "tdp": 269, "tempor": 269, "temporal_scale_distribut": 213, "temporalreceptivefield": 266, "tensorboard": [153, 154], "term": [267, 268, 269], "terminologi": 278, "test": [21, 22, 23, 24, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 91, 92, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 155, 156, 157, 158, 274], "test_coba": 120, "test_coba_lif": 56, "test_conv": [90, 121], "test_decod": 57, "test_encod": [58, 122], "test_exp_filt": [59, 123], "test_heavisid": 60, "test_iaf": [61, 124], "test_izhikevich": [62, 125], "test_leaky_integr": [63, 126], "test_leaky_integrator_box": [64, 127], "test_lif": [65, 128], "test_lif_adex": [66, 129], "test_lif_adex_refrac": [67, 130], "test_lif_adjoint": 22, "test_lif_box": [68, 131], "test_lif_correl": 132, "test_lif_ex": [69, 133], "test_lif_mc": [70, 134], "test_lif_mc_refrac": [71, 135], "test_lif_refrac": [72, 136], "test_lif_refrac_adjoint": 23, "test_lift": [73, 137], "test_log": 74, "test_lsnn": [75, 138], "test_lsnn_adjoint": 24, "test_mobilenet": 91, "test_nir_export": 156, "test_nir_import": 157, "test_receptive_field": [76, 139], "test_regular": [77, 140], "test_sequenti": 141, "test_snn": 142, "test_spikes_to_times_decod": [78, 143], "test_stdp": 79, "test_stdp_sensor": 80, "test_superspik": 81, "test_tensorboard": 158, "test_threshold": 82, "test_train": 144, "test_tsodyks_makram": 83, "test_vgg": 92, "threshold": [84, 269], "time": [269, 274, 278], "toi": 274, "tonic_burst": 188, "tonic_spik": 189, "torch": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269], "train": 274, "troubleshoot": 273, "tsodyk": 269, "tsodyks_makram": 85, "undefin": 273, "unsatisfiableerror": 273, "us": 267, "util": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159], "vari": 274, "vgg": 93, "visual": 275, "voltag": 275, "voltage_accumul": 216, "were": 273, "why": 267, "work": [267, 278], "workflow": 278, "zn2at5addmmerkns_6tensores2_s2_rkn3c106scalares6": 273}})