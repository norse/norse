Search.setIndex({"alltitles": {"1. Getting started": [[266, null]], "2. Using Norse": [[266, "using-norse"]], "2.1. Installation": [[266, "installation"]], "2.2. Running examples": [[266, "running-examples"]], "2.3. Example: Spiking convolutional classifier": [[266, "example-spiking-convolutional-classifier"]], "2.4. Example: Long short-term spiking neural networks": [[266, "example-long-short-term-spiking-neural-networks"]], "3. Why Norse?": [[266, "why-norse"]], "4. Similar work": [[266, "similar-work"]], "5. Contributing": [[266, "contributing"]], "6. Credits": [[266, "credits"]], "7. Citation": [[266, "citation"]], "8. License": [[266, "license"]], "About Norse": [[269, null]], "Accelerating Norse models with .to": [[271, "accelerating-norse-models-with-to"]], "Accelerating Norse nested models": [[271, "accelerating-norse-nested-models"]], "Acknowledgements": [[269, "acknowledgements"]], "Applying neuron models": [[275, "applying-neuron-models"]], "Architecture of Norse": [[270, "architecture-of-norse"]], "Bonus: Applying neuron models with predefined state": [[275, "bonus-applying-neuron-models-with-predefined-state"]], "Building Models in Norse": [[275, "building-models-in-norse"]], "Cartpole": [[276, "cartpole"]], "Cifar10": [[276, "cifar10"]], "Common problems": [[272, "common-problems"]], "Complete API": [[159, null]], "Computational graphs for neuron models": [[270, "computational-graphs-for-neuron-models"]], "Conclusions": [[273, "conclusions"]], "Contact": [[269, "contact"]], "Containers": [[267, "module-norse.torch.module"]], "Convolutions": [[267, "module-norse.torch.module.conv"]], "Correlation experiment": [[276, "correlation-experiment"]], "Dataset Loading": [[273, "dataset-loading"]], "Deciding on learning/plasiticy models": [[277, "deciding-on-learning-plasiticy-models"]], "Deciding on neuron models": [[277, "deciding-on-neuron-models"]], "Defining a Network of LIF Neurons with varying membrane time-constants": [[273, "defining-a-network-of-lif-neurons-with-varying-membrane-time-constants"]], "Defining our first neuron model": [[274, "defining-our-first-neuron-model"]], "Defining our input spikes": [[274, "defining-our-input-spikes"]], "Development Documentation": [[270, null]], "Encoding": [[267, "module-norse.torch.module.encode"], [268, "module-norse.torch.functional"]], "Events and action potentials": [[277, "events-and-action-potentials"]], "Example implementation": [[270, "example-implementation"]], "Examples of deep learning problems in Norse": [[277, "examples-of-deep-learning-problems-in-norse"]], "GPU acceleration in Docker": [[272, "gpu-acceleration-in-docker"]], "Hardware acceleration": [[271, null]], "Import shortcuts": [[270, "import-shortcuts"]], "ImportError: \u2026 /norse_op.so: undefined symbol: ZN2at5addmmERKNS_6TensorES2_S2_RKN3c106ScalarES6": [[272, null]], "Installation troubleshooting": [[272, "installation-troubleshooting"]], "Installing Norse": [[272, null], [272, "id1"]], "Installing from Conda": [[272, "installing-from-conda"]], "Installing from source": [[272, "installing-from-source"]], "Installing with Docker": [[272, "installing-with-docker"]], "Installing with pip": [[272, "installing-with-pip"]], "Integrate-and-fire": [[267, "integrate-and-fire"]], "Integrate-and-fire (IAF)": [[268, "module-norse.torch.functional.iaf"]], "Introduction to spiking systems": [[274, null]], "Izhikevich": [[267, "module-norse.torch.module.izhikevich"], [268, "module-norse.torch.functional.izhikevich"]], "LIF, adaptive exponential": [[267, "module-norse.torch.module.lif_adex"], [268, "module-norse.torch.functional.lif_adex"]], "LIF, box model": [[267, "module-norse.torch.module.lif_box"], [268, "lif-box-model"]], "LIF, conductance based": [[267, "module-norse.torch.module.coba_lif"], [268, "module-norse.torch.functional.coba_lif"]], "LIF, exponential": [[267, "module-norse.torch.module.lif_ex"], [268, "module-norse.torch.functional.lif_ex"]], "LIF, multicompartmental": [[267, "module-norse.torch.module.lif_mc"]], "LIF, multicompartmental (MC)": [[268, "module-3"]], "LIF, multicompartmental with refraction": [[267, "module-norse.torch.module.lif_mc_refrac"]], "LIF, refractory": [[267, "module-norse.torch.module.lif_refrac"], [268, "module-4"]], "Leaky integrate-and-fire (LIF)": [[267, "module-norse.torch.module.lif"], [268, "module-2"]], "Leaky integrator": [[267, "module-norse.torch.module.leaky_integrator"], [268, "module-norse.torch.functional.leaky_integrator"]], "Logical": [[268, "module-norse.torch.functional.logical"]], "Long short-term memory (LSNN)": [[267, "module-norse.torch.module.lsnn"], [268, "module-5"]], "MNIST": [[276, "mnist"]], "MNIST in PyTorch Lightning": [[276, "mnist-in-pytorch-lightning"]], "Memory task": [[276, "memory-task"]], "Model Defitinition": [[273, "model-defitinition"]], "Model Evaluation": [[273, "model-evaluation"]], "Neuron dynamics and time": [[277, "neuron-dynamics-and-time"]], "Neuron models": [[267, "neuron-models"], [268, "neuron-models"]], "Neurons and neuron state": [[277, "neurons-and-neuron-state"]], "Norse workflow": [[277, "norse-workflow"]], "Optional dependencies": [[272, "optional-dependencies"]], "Our first Spiking Neuron": [[274, "our-first-spiking-neuron"]], "Parameter learning in Spiking Neural Networks": [[273, null]], "Parameters": [[276, "parameters"]], "Plasticity models": [[268, "plasticity-models"]], "Quickstart": [[275, null]], "Receptive fields": [[267, "module-norse.torch.module.receptive_field"], [268, "module-norse.torch.functional.receptive_field"]], "Regularization": [[268, "module-norse.torch.functional.regularization"]], "Required dependencies": [[272, "required-dependencies"]], "Running Norse notebooks with Docker": [[272, "running-norse-notebooks-with-docker"]], "Running Tasks": [[276, null]], "Simulating neurons": [[274, "simulating-neurons"]], "Speech Command recognition task": [[276, "speech-command-recognition-task"]], "Spike-time dependent plasticity (STDP)": [[268, "module-6"]], "Temporal operations": [[268, "module-1"]], "Terminology": [[277, "terminology"]], "Threshold functions": [[268, "module-0"]], "Toy Example: Training a small recurrent SNN on MNIST": [[273, "toy-example-training-a-small-recurrent-snn-on-mnist"]], "Training and Test loop": [[273, "training-and-test-loop"]], "Tsodyks-Markram timing-dependent plasticity (TDP)": [[268, "module-7"]], "UnsatisfiableError: The following specifications were found to be incompatible with each other": [[272, null]], "Visualizing neuron voltage": [[274, "visualizing-neuron-voltage"]], "Working with Norse": [[277, null]], "norse": [[0, null]], "norse.benchmark": [[1, null]], "norse.benchmark.benchmark": [[2, null]], "norse.benchmark.main": [[3, null]], "norse.benchmark.norse_lif": [[4, null]], "norse.benchmark.plot": [[5, null]], "norse.dataset": [[6, null]], "norse.dataset.memory": [[7, null]], "norse.dataset.spiking_heidelberg": [[8, null]], "norse.task": [[9, null]], "norse.task.correlation_experiment": [[10, null]], "norse.task.mnist": [[11, null]], "norse.task.mnist_pl": [[12, null]], "norse.torch": [[13, null], [267, null], [267, "id1"]], "norse.torch.functional": [[14, null], [268, null], [268, "id1"]], "norse.torch.functional.adjoint": [[15, null]], "norse.torch.functional.adjoint.lif_adjoint": [[16, null]], "norse.torch.functional.adjoint.lif_mc_adjoint": [[17, null]], "norse.torch.functional.adjoint.lif_mc_refrac_adjoint": [[18, null]], "norse.torch.functional.adjoint.lif_refrac_adjoint": [[19, null]], "norse.torch.functional.adjoint.lsnn_adjoint": [[20, null]], "norse.torch.functional.adjoint.test": [[21, null]], "norse.torch.functional.adjoint.test.test_lif_adjoint": [[22, null]], "norse.torch.functional.adjoint.test.test_lif_refrac_adjoint": [[23, null]], "norse.torch.functional.adjoint.test.test_lsnn_adjoint": [[24, null]], "norse.torch.functional.coba_lif": [[25, null]], "norse.torch.functional.coba_lif.CobaLIFFeedForwardState": [[160, null]], "norse.torch.functional.coba_lif.CobaLIFParameters": [[161, null]], "norse.torch.functional.coba_lif.coba_lif_feed_forward_step": [[162, null]], "norse.torch.functional.correlation_sensor": [[26, null]], "norse.torch.functional.decode": [[27, null]], "norse.torch.functional.encode": [[28, null]], "norse.torch.functional.filter": [[29, null]], "norse.torch.functional.heaviside": [[30, null], [163, null]], "norse.torch.functional.iaf": [[31, null]], "norse.torch.functional.iaf.IAFFeedForwardState": [[164, null]], "norse.torch.functional.iaf.IAFParameters": [[165, null]], "norse.torch.functional.iaf.iaf_feed_forward_step": [[166, null]], "norse.torch.functional.izhikevich": [[32, null]], "norse.torch.functional.izhikevich.IzhikevichParameters": [[167, null]], "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior": [[168, null]], "norse.torch.functional.izhikevich.accomodation": [[169, null]], "norse.torch.functional.izhikevich.bistability": [[170, null]], "norse.torch.functional.izhikevich.class_1_exc": [[171, null]], "norse.torch.functional.izhikevich.class_2_exc": [[172, null]], "norse.torch.functional.izhikevich.dap": [[173, null]], "norse.torch.functional.izhikevich.inhibition_induced_bursting": [[174, null]], "norse.torch.functional.izhikevich.inhibition_induced_spiking": [[175, null]], "norse.torch.functional.izhikevich.integrator": [[176, null]], "norse.torch.functional.izhikevich.izhikevich_feed_forward_step": [[177, null]], "norse.torch.functional.izhikevich.mixed_mode": [[178, null]], "norse.torch.functional.izhikevich.phasic_bursting": [[179, null]], "norse.torch.functional.izhikevich.phasic_spiking": [[180, null]], "norse.torch.functional.izhikevich.rebound_burst": [[181, null]], "norse.torch.functional.izhikevich.rebound_spike": [[182, null]], "norse.torch.functional.izhikevich.resonator": [[183, null]], "norse.torch.functional.izhikevich.spike_frequency_adaptation": [[184, null]], "norse.torch.functional.izhikevich.spike_latency": [[185, null]], "norse.torch.functional.izhikevich.subthreshold_oscillation": [[186, null]], "norse.torch.functional.izhikevich.tonic_bursting": [[187, null]], "norse.torch.functional.izhikevich.tonic_spiking": [[188, null]], "norse.torch.functional.leaky_integrator": [[33, null]], "norse.torch.functional.leaky_integrator.LIParameters": [[189, null]], "norse.torch.functional.leaky_integrator.LIState": [[190, null]], "norse.torch.functional.leaky_integrator.li_feed_forward_step": [[191, null]], "norse.torch.functional.leaky_integrator_box": [[34, null]], "norse.torch.functional.lif": [[35, null]], "norse.torch.functional.lif_adex": [[36, null]], "norse.torch.functional.lif_adex.LIFAdExFeedForwardState": [[192, null]], "norse.torch.functional.lif_adex.LIFAdExParameters": [[193, null]], "norse.torch.functional.lif_adex.lif_adex_current_encoder": [[194, null]], "norse.torch.functional.lif_adex.lif_adex_feed_forward_step": [[195, null]], "norse.torch.functional.lif_adex_refrac": [[37, null]], "norse.torch.functional.lif_box": [[38, null]], "norse.torch.functional.lif_box.LIFBoxFeedForwardState": [[196, null]], "norse.torch.functional.lif_box.LIFBoxParameters": [[197, null]], "norse.torch.functional.lif_box.lif_box_feed_forward_step": [[198, null]], "norse.torch.functional.lif_correlation": [[39, null]], "norse.torch.functional.lif_ex": [[40, null]], "norse.torch.functional.lif_ex.LIFExFeedForwardState": [[199, null]], "norse.torch.functional.lif_ex.LIFExParameters": [[200, null]], "norse.torch.functional.lif_ex.lif_ex_current_encoder": [[201, null]], "norse.torch.functional.lif_ex.lif_ex_feed_forward_step": [[202, null]], "norse.torch.functional.lif_mc": [[41, null]], "norse.torch.functional.lif_mc_refrac": [[42, null]], "norse.torch.functional.lif_refrac": [[43, null]], "norse.torch.functional.lift": [[44, null], [203, null]], "norse.torch.functional.logical": [[45, null]], "norse.torch.functional.logical.logical_and": [[204, null]], "norse.torch.functional.logical.logical_or": [[205, null]], "norse.torch.functional.logical.logical_xor": [[206, null]], "norse.torch.functional.logical.muller_c": [[207, null]], "norse.torch.functional.logical.posedge_detector": [[208, null]], "norse.torch.functional.lsnn": [[46, null]], "norse.torch.functional.receptive_field": [[47, null]], "norse.torch.functional.receptive_field.gaussian_kernel": [[209, null]], "norse.torch.functional.receptive_field.spatial_receptive_field": [[210, null]], "norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives": [[211, null]], "norse.torch.functional.receptive_field.temporal_scale_distribution": [[212, null]], "norse.torch.functional.regularization": [[48, null]], "norse.torch.functional.regularization.regularize_step": [[213, null]], "norse.torch.functional.regularization.spike_accumulator": [[214, null]], "norse.torch.functional.regularization.voltage_accumulator": [[215, null]], "norse.torch.functional.reset": [[49, null]], "norse.torch.functional.spikes_to_times_decoder": [[50, null]], "norse.torch.functional.stdp": [[51, null]], "norse.torch.functional.stdp_sensor": [[52, null]], "norse.torch.functional.superspike": [[53, null]], "norse.torch.functional.test": [[54, null]], "norse.torch.functional.test.test_coba_lif": [[55, null]], "norse.torch.functional.test.test_decode": [[56, null]], "norse.torch.functional.test.test_encode": [[57, null]], "norse.torch.functional.test.test_exp_filter": [[58, null]], "norse.torch.functional.test.test_heaviside": [[59, null]], "norse.torch.functional.test.test_iaf": [[60, null]], "norse.torch.functional.test.test_izhikevich": [[61, null]], "norse.torch.functional.test.test_leaky_integrator": [[62, null]], "norse.torch.functional.test.test_leaky_integrator_box": [[63, null]], "norse.torch.functional.test.test_lif": [[64, null]], "norse.torch.functional.test.test_lif_adex": [[65, null]], "norse.torch.functional.test.test_lif_adex_refrac": [[66, null]], "norse.torch.functional.test.test_lif_box": [[67, null]], "norse.torch.functional.test.test_lif_ex": [[68, null]], "norse.torch.functional.test.test_lif_mc": [[69, null]], "norse.torch.functional.test.test_lif_mc_refrac": [[70, null]], "norse.torch.functional.test.test_lif_refrac": [[71, null]], "norse.torch.functional.test.test_lift": [[72, null]], "norse.torch.functional.test.test_logical": [[73, null]], "norse.torch.functional.test.test_lsnn": [[74, null]], "norse.torch.functional.test.test_receptive_field": [[75, null]], "norse.torch.functional.test.test_regularization": [[76, null]], "norse.torch.functional.test.test_spikes_to_times_decoder": [[77, null]], "norse.torch.functional.test.test_stdp": [[78, null]], "norse.torch.functional.test.test_stdp_sensor": [[79, null]], "norse.torch.functional.test.test_superspike": [[80, null]], "norse.torch.functional.test.test_threshold": [[81, null]], "norse.torch.functional.test.test_tsodyks_makram": [[82, null]], "norse.torch.functional.threshold": [[83, null]], "norse.torch.functional.tsodyks_makram": [[84, null]], "norse.torch.models": [[85, null]], "norse.torch.models.conv": [[86, null]], "norse.torch.models.mobilenet": [[87, null]], "norse.torch.models.test": [[88, null]], "norse.torch.models.test.test_conv": [[89, null]], "norse.torch.models.test.test_mobilenet": [[90, null]], "norse.torch.models.test.test_vgg": [[91, null]], "norse.torch.models.vgg": [[92, null]], "norse.torch.module": [[93, null]], "norse.torch.module.coba_lif": [[94, null]], "norse.torch.module.coba_lif.CobaLIFCell": [[216, null]], "norse.torch.module.conv": [[95, null]], "norse.torch.module.conv.LConv2d": [[217, null]], "norse.torch.module.encode": [[96, null]], "norse.torch.module.encode.ConstantCurrentLIFEncoder": [[218, null]], "norse.torch.module.encode.PoissonEncoder": [[219, null]], "norse.torch.module.encode.PoissonEncoderStep": [[220, null]], "norse.torch.module.encode.PopulationEncoder": [[221, null]], "norse.torch.module.encode.SignedPoissonEncoder": [[222, null]], "norse.torch.module.encode.SpikeLatencyEncoder": [[223, null]], "norse.torch.module.encode.SpikeLatencyLIFEncoder": [[224, null]], "norse.torch.module.exp_filter": [[97, null]], "norse.torch.module.iaf": [[98, null]], "norse.torch.module.iaf.IAFCell": [[225, null]], "norse.torch.module.iaf.IAFFeedForwardState": [[226, null]], "norse.torch.module.iaf.IAFParameters": [[227, null]], "norse.torch.module.izhikevich": [[99, null]], "norse.torch.module.izhikevich.Izhikevich": [[228, null]], "norse.torch.module.izhikevich.IzhikevichCell": [[229, null]], "norse.torch.module.izhikevich.IzhikevichRecurrent": [[230, null]], "norse.torch.module.izhikevich.IzhikevichRecurrentCell": [[231, null]], "norse.torch.module.izhikevich.IzhikevichSpikingBehavior": [[232, null]], "norse.torch.module.izhikevich.IzhikevichState": [[233, null]], "norse.torch.module.leaky_integrator": [[100, null]], "norse.torch.module.leaky_integrator.LI": [[234, null]], "norse.torch.module.leaky_integrator.LICell": [[235, null]], "norse.torch.module.leaky_integrator.LILinearCell": [[236, null]], "norse.torch.module.leaky_integrator.LIParameters": [[237, null]], "norse.torch.module.leaky_integrator.LIState": [[238, null]], "norse.torch.module.leaky_integrator_box": [[101, null]], "norse.torch.module.lif": [[102, null]], "norse.torch.module.lif.LIF": [[239, null]], "norse.torch.module.lif.LIFCell": [[240, null]], "norse.torch.module.lif.LIFParameters": [[241, null]], "norse.torch.module.lif.LIFRecurrent": [[242, null]], "norse.torch.module.lif.LIFRecurrentCell": [[243, null]], "norse.torch.module.lif.LIFState": [[244, null]], "norse.torch.module.lif_adex": [[103, null]], "norse.torch.module.lif_adex.LIFAdEx": [[245, null]], "norse.torch.module.lif_adex.LIFAdExCell": [[246, null]], "norse.torch.module.lif_adex.LIFAdExRecurrent": [[247, null]], "norse.torch.module.lif_adex.LIFAdExRecurrentCell": [[248, null]], "norse.torch.module.lif_adex_refrac": [[104, null]], "norse.torch.module.lif_box": [[105, null]], "norse.torch.module.lif_box.LIFBoxCell": [[249, null]], "norse.torch.module.lif_box.LIFBoxFeedForwardState": [[250, null]], "norse.torch.module.lif_box.LIFBoxParameters": [[251, null]], "norse.torch.module.lif_correlation": [[106, null]], "norse.torch.module.lif_ex": [[107, null]], "norse.torch.module.lif_ex.LIFEx": [[252, null]], "norse.torch.module.lif_ex.LIFExCell": [[253, null]], "norse.torch.module.lif_ex.LIFExRecurrent": [[254, null]], "norse.torch.module.lif_ex.LIFExRecurrentCell": [[255, null]], "norse.torch.module.lif_mc": [[108, null]], "norse.torch.module.lif_mc.LIFMCRecurrentCell": [[256, null]], "norse.torch.module.lif_mc_refrac": [[109, null]], "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell": [[257, null]], "norse.torch.module.lif_refrac": [[110, null]], "norse.torch.module.lif_refrac.LIFRefracCell": [[258, null]], "norse.torch.module.lif_refrac.LIFRefracRecurrentCell": [[259, null]], "norse.torch.module.lift": [[111, null]], "norse.torch.module.lsnn": [[112, null]], "norse.torch.module.lsnn.LSNN": [[260, null]], "norse.torch.module.lsnn.LSNNCell": [[261, null]], "norse.torch.module.lsnn.LSNNRecurrent": [[262, null]], "norse.torch.module.lsnn.LSNNRecurrentCell": [[263, null]], "norse.torch.module.receptive_field": [[113, null]], "norse.torch.module.receptive_field.SpatialReceptiveField2d": [[264, null]], "norse.torch.module.receptive_field.TemporalReceptiveField": [[265, null]], "norse.torch.module.regularization": [[114, null]], "norse.torch.module.sequential": [[115, null]], "norse.torch.module.snn": [[116, null]], "norse.torch.module.spikes_to_times_decoder": [[117, null]], "norse.torch.module.test": [[118, null]], "norse.torch.module.test.test_coba": [[119, null]], "norse.torch.module.test.test_conv": [[120, null]], "norse.torch.module.test.test_encode": [[121, null]], "norse.torch.module.test.test_exp_filter": [[122, null]], "norse.torch.module.test.test_iaf": [[123, null]], "norse.torch.module.test.test_izhikevich": [[124, null]], "norse.torch.module.test.test_leaky_integrator": [[125, null]], "norse.torch.module.test.test_leaky_integrator_box": [[126, null]], "norse.torch.module.test.test_lif": [[127, null]], "norse.torch.module.test.test_lif_adex": [[128, null]], "norse.torch.module.test.test_lif_adex_refrac": [[129, null]], "norse.torch.module.test.test_lif_box": [[130, null]], "norse.torch.module.test.test_lif_correlation": [[131, null]], "norse.torch.module.test.test_lif_ex": [[132, null]], "norse.torch.module.test.test_lif_mc": [[133, null]], "norse.torch.module.test.test_lif_mc_refrac": [[134, null]], "norse.torch.module.test.test_lif_refrac": [[135, null]], "norse.torch.module.test.test_lift": [[136, null]], "norse.torch.module.test.test_lsnn": [[137, null]], "norse.torch.module.test.test_receptive_field": [[138, null]], "norse.torch.module.test.test_regularization": [[139, null]], "norse.torch.module.test.test_sequential": [[140, null]], "norse.torch.module.test.test_snn": [[141, null]], "norse.torch.module.test.test_spikes_to_times_decoder": [[142, null]], "norse.torch.module.test.test_training": [[143, null]], "norse.torch.utils": [[144, null]], "norse.torch.utils.clone": [[145, null]], "norse.torch.utils.export_nir": [[146, null]], "norse.torch.utils.import_nir": [[147, null]], "norse.torch.utils.plot": [[148, null]], "norse.torch.utils.plot.plot": [[149, null]], "norse.torch.utils.pytree": [[150, null]], "norse.torch.utils.state": [[151, null]], "norse.torch.utils.tensorboard": [[152, null]], "norse.torch.utils.tensorboard.tensorboard": [[153, null]], "norse.torch.utils.test": [[154, null]], "norse.torch.utils.test.test_nir_export": [[155, null]], "norse.torch.utils.test.test_nir_import": [[156, null]], "norse.torch.utils.test.test_tensorboard": [[157, null]], "norse.utils": [[158, null]]}, "docnames": ["_autosummary/norse", "_autosummary/norse.benchmark", "_autosummary/norse.benchmark.benchmark", "_autosummary/norse.benchmark.main", "_autosummary/norse.benchmark.norse_lif", "_autosummary/norse.benchmark.plot", "_autosummary/norse.dataset", "_autosummary/norse.dataset.memory", "_autosummary/norse.dataset.spiking_heidelberg", "_autosummary/norse.task", "_autosummary/norse.task.correlation_experiment", "_autosummary/norse.task.mnist", "_autosummary/norse.task.mnist_pl", "_autosummary/norse.torch", "_autosummary/norse.torch.functional", "_autosummary/norse.torch.functional.adjoint", "_autosummary/norse.torch.functional.adjoint.lif_adjoint", "_autosummary/norse.torch.functional.adjoint.lif_mc_adjoint", "_autosummary/norse.torch.functional.adjoint.lif_mc_refrac_adjoint", "_autosummary/norse.torch.functional.adjoint.lif_refrac_adjoint", "_autosummary/norse.torch.functional.adjoint.lsnn_adjoint", "_autosummary/norse.torch.functional.adjoint.test", "_autosummary/norse.torch.functional.adjoint.test.test_lif_adjoint", "_autosummary/norse.torch.functional.adjoint.test.test_lif_refrac_adjoint", "_autosummary/norse.torch.functional.adjoint.test.test_lsnn_adjoint", "_autosummary/norse.torch.functional.coba_lif", "_autosummary/norse.torch.functional.correlation_sensor", "_autosummary/norse.torch.functional.decode", "_autosummary/norse.torch.functional.encode", "_autosummary/norse.torch.functional.filter", "_autosummary/norse.torch.functional.heaviside", "_autosummary/norse.torch.functional.iaf", "_autosummary/norse.torch.functional.izhikevich", "_autosummary/norse.torch.functional.leaky_integrator", "_autosummary/norse.torch.functional.leaky_integrator_box", "_autosummary/norse.torch.functional.lif", "_autosummary/norse.torch.functional.lif_adex", "_autosummary/norse.torch.functional.lif_adex_refrac", "_autosummary/norse.torch.functional.lif_box", "_autosummary/norse.torch.functional.lif_correlation", "_autosummary/norse.torch.functional.lif_ex", "_autosummary/norse.torch.functional.lif_mc", "_autosummary/norse.torch.functional.lif_mc_refrac", "_autosummary/norse.torch.functional.lif_refrac", "_autosummary/norse.torch.functional.lift", "_autosummary/norse.torch.functional.logical", "_autosummary/norse.torch.functional.lsnn", "_autosummary/norse.torch.functional.receptive_field", "_autosummary/norse.torch.functional.regularization", "_autosummary/norse.torch.functional.reset", "_autosummary/norse.torch.functional.spikes_to_times_decoder", "_autosummary/norse.torch.functional.stdp", "_autosummary/norse.torch.functional.stdp_sensor", "_autosummary/norse.torch.functional.superspike", "_autosummary/norse.torch.functional.test", "_autosummary/norse.torch.functional.test.test_coba_lif", "_autosummary/norse.torch.functional.test.test_decode", "_autosummary/norse.torch.functional.test.test_encode", "_autosummary/norse.torch.functional.test.test_exp_filter", "_autosummary/norse.torch.functional.test.test_heaviside", "_autosummary/norse.torch.functional.test.test_iaf", "_autosummary/norse.torch.functional.test.test_izhikevich", "_autosummary/norse.torch.functional.test.test_leaky_integrator", "_autosummary/norse.torch.functional.test.test_leaky_integrator_box", "_autosummary/norse.torch.functional.test.test_lif", "_autosummary/norse.torch.functional.test.test_lif_adex", "_autosummary/norse.torch.functional.test.test_lif_adex_refrac", "_autosummary/norse.torch.functional.test.test_lif_box", "_autosummary/norse.torch.functional.test.test_lif_ex", "_autosummary/norse.torch.functional.test.test_lif_mc", "_autosummary/norse.torch.functional.test.test_lif_mc_refrac", "_autosummary/norse.torch.functional.test.test_lif_refrac", "_autosummary/norse.torch.functional.test.test_lift", "_autosummary/norse.torch.functional.test.test_logical", "_autosummary/norse.torch.functional.test.test_lsnn", "_autosummary/norse.torch.functional.test.test_receptive_field", "_autosummary/norse.torch.functional.test.test_regularization", "_autosummary/norse.torch.functional.test.test_spikes_to_times_decoder", "_autosummary/norse.torch.functional.test.test_stdp", "_autosummary/norse.torch.functional.test.test_stdp_sensor", "_autosummary/norse.torch.functional.test.test_superspike", "_autosummary/norse.torch.functional.test.test_threshold", "_autosummary/norse.torch.functional.test.test_tsodyks_makram", "_autosummary/norse.torch.functional.threshold", "_autosummary/norse.torch.functional.tsodyks_makram", "_autosummary/norse.torch.models", "_autosummary/norse.torch.models.conv", "_autosummary/norse.torch.models.mobilenet", "_autosummary/norse.torch.models.test", "_autosummary/norse.torch.models.test.test_conv", "_autosummary/norse.torch.models.test.test_mobilenet", "_autosummary/norse.torch.models.test.test_vgg", "_autosummary/norse.torch.models.vgg", "_autosummary/norse.torch.module", "_autosummary/norse.torch.module.coba_lif", "_autosummary/norse.torch.module.conv", "_autosummary/norse.torch.module.encode", "_autosummary/norse.torch.module.exp_filter", "_autosummary/norse.torch.module.iaf", "_autosummary/norse.torch.module.izhikevich", "_autosummary/norse.torch.module.leaky_integrator", "_autosummary/norse.torch.module.leaky_integrator_box", "_autosummary/norse.torch.module.lif", "_autosummary/norse.torch.module.lif_adex", "_autosummary/norse.torch.module.lif_adex_refrac", "_autosummary/norse.torch.module.lif_box", "_autosummary/norse.torch.module.lif_correlation", "_autosummary/norse.torch.module.lif_ex", "_autosummary/norse.torch.module.lif_mc", "_autosummary/norse.torch.module.lif_mc_refrac", "_autosummary/norse.torch.module.lif_refrac", "_autosummary/norse.torch.module.lift", "_autosummary/norse.torch.module.lsnn", "_autosummary/norse.torch.module.receptive_field", "_autosummary/norse.torch.module.regularization", "_autosummary/norse.torch.module.sequential", "_autosummary/norse.torch.module.snn", "_autosummary/norse.torch.module.spikes_to_times_decoder", "_autosummary/norse.torch.module.test", "_autosummary/norse.torch.module.test.test_coba", "_autosummary/norse.torch.module.test.test_conv", "_autosummary/norse.torch.module.test.test_encode", "_autosummary/norse.torch.module.test.test_exp_filter", "_autosummary/norse.torch.module.test.test_iaf", "_autosummary/norse.torch.module.test.test_izhikevich", "_autosummary/norse.torch.module.test.test_leaky_integrator", "_autosummary/norse.torch.module.test.test_leaky_integrator_box", "_autosummary/norse.torch.module.test.test_lif", "_autosummary/norse.torch.module.test.test_lif_adex", "_autosummary/norse.torch.module.test.test_lif_adex_refrac", "_autosummary/norse.torch.module.test.test_lif_box", "_autosummary/norse.torch.module.test.test_lif_correlation", "_autosummary/norse.torch.module.test.test_lif_ex", "_autosummary/norse.torch.module.test.test_lif_mc", "_autosummary/norse.torch.module.test.test_lif_mc_refrac", "_autosummary/norse.torch.module.test.test_lif_refrac", "_autosummary/norse.torch.module.test.test_lift", "_autosummary/norse.torch.module.test.test_lsnn", "_autosummary/norse.torch.module.test.test_receptive_field", "_autosummary/norse.torch.module.test.test_regularization", "_autosummary/norse.torch.module.test.test_sequential", "_autosummary/norse.torch.module.test.test_snn", "_autosummary/norse.torch.module.test.test_spikes_to_times_decoder", "_autosummary/norse.torch.module.test.test_training", "_autosummary/norse.torch.utils", "_autosummary/norse.torch.utils.clone", "_autosummary/norse.torch.utils.export_nir", "_autosummary/norse.torch.utils.import_nir", "_autosummary/norse.torch.utils.plot", "_autosummary/norse.torch.utils.plot.plot", "_autosummary/norse.torch.utils.pytree", "_autosummary/norse.torch.utils.state", "_autosummary/norse.torch.utils.tensorboard", "_autosummary/norse.torch.utils.tensorboard.tensorboard", "_autosummary/norse.torch.utils.test", "_autosummary/norse.torch.utils.test.test_nir_export", "_autosummary/norse.torch.utils.test.test_nir_import", "_autosummary/norse.torch.utils.test.test_tensorboard", "_autosummary/norse.utils", "api", "generated/norse.torch.functional.coba_lif.CobaLIFFeedForwardState", "generated/norse.torch.functional.coba_lif.CobaLIFParameters", "generated/norse.torch.functional.coba_lif.coba_lif_feed_forward_step", "generated/norse.torch.functional.heaviside", "generated/norse.torch.functional.iaf.IAFFeedForwardState", "generated/norse.torch.functional.iaf.IAFParameters", "generated/norse.torch.functional.iaf.iaf_feed_forward_step", "generated/norse.torch.functional.izhikevich.IzhikevichParameters", "generated/norse.torch.functional.izhikevich.IzhikevichSpikingBehavior", "generated/norse.torch.functional.izhikevich.accomodation", "generated/norse.torch.functional.izhikevich.bistability", "generated/norse.torch.functional.izhikevich.class_1_exc", "generated/norse.torch.functional.izhikevich.class_2_exc", "generated/norse.torch.functional.izhikevich.dap", "generated/norse.torch.functional.izhikevich.inhibition_induced_bursting", "generated/norse.torch.functional.izhikevich.inhibition_induced_spiking", "generated/norse.torch.functional.izhikevich.integrator", "generated/norse.torch.functional.izhikevich.izhikevich_feed_forward_step", "generated/norse.torch.functional.izhikevich.mixed_mode", "generated/norse.torch.functional.izhikevich.phasic_bursting", "generated/norse.torch.functional.izhikevich.phasic_spiking", "generated/norse.torch.functional.izhikevich.rebound_burst", "generated/norse.torch.functional.izhikevich.rebound_spike", "generated/norse.torch.functional.izhikevich.resonator", "generated/norse.torch.functional.izhikevich.spike_frequency_adaptation", "generated/norse.torch.functional.izhikevich.spike_latency", "generated/norse.torch.functional.izhikevich.subthreshold_oscillation", "generated/norse.torch.functional.izhikevich.tonic_bursting", "generated/norse.torch.functional.izhikevich.tonic_spiking", "generated/norse.torch.functional.leaky_integrator.LIParameters", "generated/norse.torch.functional.leaky_integrator.LIState", "generated/norse.torch.functional.leaky_integrator.li_feed_forward_step", "generated/norse.torch.functional.lif_adex.LIFAdExFeedForwardState", "generated/norse.torch.functional.lif_adex.LIFAdExParameters", "generated/norse.torch.functional.lif_adex.lif_adex_current_encoder", "generated/norse.torch.functional.lif_adex.lif_adex_feed_forward_step", "generated/norse.torch.functional.lif_box.LIFBoxFeedForwardState", "generated/norse.torch.functional.lif_box.LIFBoxParameters", "generated/norse.torch.functional.lif_box.lif_box_feed_forward_step", "generated/norse.torch.functional.lif_ex.LIFExFeedForwardState", "generated/norse.torch.functional.lif_ex.LIFExParameters", "generated/norse.torch.functional.lif_ex.lif_ex_current_encoder", "generated/norse.torch.functional.lif_ex.lif_ex_feed_forward_step", "generated/norse.torch.functional.lift", "generated/norse.torch.functional.logical.logical_and", "generated/norse.torch.functional.logical.logical_or", "generated/norse.torch.functional.logical.logical_xor", "generated/norse.torch.functional.logical.muller_c", "generated/norse.torch.functional.logical.posedge_detector", "generated/norse.torch.functional.receptive_field.gaussian_kernel", "generated/norse.torch.functional.receptive_field.spatial_receptive_field", "generated/norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives", "generated/norse.torch.functional.receptive_field.temporal_scale_distribution", "generated/norse.torch.functional.regularization.regularize_step", "generated/norse.torch.functional.regularization.spike_accumulator", "generated/norse.torch.functional.regularization.voltage_accumulator", "generated/norse.torch.module.coba_lif.CobaLIFCell", "generated/norse.torch.module.conv.LConv2d", "generated/norse.torch.module.encode.ConstantCurrentLIFEncoder", "generated/norse.torch.module.encode.PoissonEncoder", "generated/norse.torch.module.encode.PoissonEncoderStep", "generated/norse.torch.module.encode.PopulationEncoder", "generated/norse.torch.module.encode.SignedPoissonEncoder", "generated/norse.torch.module.encode.SpikeLatencyEncoder", "generated/norse.torch.module.encode.SpikeLatencyLIFEncoder", "generated/norse.torch.module.iaf.IAFCell", "generated/norse.torch.module.iaf.IAFFeedForwardState", "generated/norse.torch.module.iaf.IAFParameters", "generated/norse.torch.module.izhikevich.Izhikevich", "generated/norse.torch.module.izhikevich.IzhikevichCell", "generated/norse.torch.module.izhikevich.IzhikevichRecurrent", "generated/norse.torch.module.izhikevich.IzhikevichRecurrentCell", "generated/norse.torch.module.izhikevich.IzhikevichSpikingBehavior", "generated/norse.torch.module.izhikevich.IzhikevichState", "generated/norse.torch.module.leaky_integrator.LI", "generated/norse.torch.module.leaky_integrator.LICell", "generated/norse.torch.module.leaky_integrator.LILinearCell", "generated/norse.torch.module.leaky_integrator.LIParameters", "generated/norse.torch.module.leaky_integrator.LIState", "generated/norse.torch.module.lif.LIF", "generated/norse.torch.module.lif.LIFCell", "generated/norse.torch.module.lif.LIFParameters", "generated/norse.torch.module.lif.LIFRecurrent", "generated/norse.torch.module.lif.LIFRecurrentCell", "generated/norse.torch.module.lif.LIFState", "generated/norse.torch.module.lif_adex.LIFAdEx", "generated/norse.torch.module.lif_adex.LIFAdExCell", "generated/norse.torch.module.lif_adex.LIFAdExRecurrent", "generated/norse.torch.module.lif_adex.LIFAdExRecurrentCell", "generated/norse.torch.module.lif_box.LIFBoxCell", "generated/norse.torch.module.lif_box.LIFBoxFeedForwardState", "generated/norse.torch.module.lif_box.LIFBoxParameters", "generated/norse.torch.module.lif_ex.LIFEx", "generated/norse.torch.module.lif_ex.LIFExCell", "generated/norse.torch.module.lif_ex.LIFExRecurrent", "generated/norse.torch.module.lif_ex.LIFExRecurrentCell", "generated/norse.torch.module.lif_mc.LIFMCRecurrentCell", "generated/norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell", "generated/norse.torch.module.lif_refrac.LIFRefracCell", "generated/norse.torch.module.lif_refrac.LIFRefracRecurrentCell", "generated/norse.torch.module.lsnn.LSNN", "generated/norse.torch.module.lsnn.LSNNCell", "generated/norse.torch.module.lsnn.LSNNRecurrent", "generated/norse.torch.module.lsnn.LSNNRecurrentCell", "generated/norse.torch.module.receptive_field.SpatialReceptiveField2d", "generated/norse.torch.module.receptive_field.TemporalReceptiveField", "index", "norse.torch", "norse.torch.functional", "pages/about", "pages/development", "pages/hardware", "pages/installing", "pages/parameters", "pages/spiking", "pages/started", "pages/tasks", "pages/working"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/norse.rst", "_autosummary/norse.benchmark.rst", "_autosummary/norse.benchmark.benchmark.rst", "_autosummary/norse.benchmark.main.rst", "_autosummary/norse.benchmark.norse_lif.rst", "_autosummary/norse.benchmark.plot.rst", "_autosummary/norse.dataset.rst", "_autosummary/norse.dataset.memory.rst", "_autosummary/norse.dataset.spiking_heidelberg.rst", "_autosummary/norse.task.rst", "_autosummary/norse.task.correlation_experiment.rst", "_autosummary/norse.task.mnist.rst", "_autosummary/norse.task.mnist_pl.rst", "_autosummary/norse.torch.rst", "_autosummary/norse.torch.functional.rst", "_autosummary/norse.torch.functional.adjoint.rst", "_autosummary/norse.torch.functional.adjoint.lif_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.lif_mc_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.lif_mc_refrac_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.lif_refrac_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.lsnn_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.test.rst", "_autosummary/norse.torch.functional.adjoint.test.test_lif_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.test.test_lif_refrac_adjoint.rst", "_autosummary/norse.torch.functional.adjoint.test.test_lsnn_adjoint.rst", "_autosummary/norse.torch.functional.coba_lif.rst", "_autosummary/norse.torch.functional.correlation_sensor.rst", "_autosummary/norse.torch.functional.decode.rst", "_autosummary/norse.torch.functional.encode.rst", "_autosummary/norse.torch.functional.filter.rst", "_autosummary/norse.torch.functional.heaviside.rst", "_autosummary/norse.torch.functional.iaf.rst", "_autosummary/norse.torch.functional.izhikevich.rst", "_autosummary/norse.torch.functional.leaky_integrator.rst", "_autosummary/norse.torch.functional.leaky_integrator_box.rst", "_autosummary/norse.torch.functional.lif.rst", "_autosummary/norse.torch.functional.lif_adex.rst", "_autosummary/norse.torch.functional.lif_adex_refrac.rst", "_autosummary/norse.torch.functional.lif_box.rst", "_autosummary/norse.torch.functional.lif_correlation.rst", "_autosummary/norse.torch.functional.lif_ex.rst", "_autosummary/norse.torch.functional.lif_mc.rst", "_autosummary/norse.torch.functional.lif_mc_refrac.rst", "_autosummary/norse.torch.functional.lif_refrac.rst", "_autosummary/norse.torch.functional.lift.rst", "_autosummary/norse.torch.functional.logical.rst", "_autosummary/norse.torch.functional.lsnn.rst", "_autosummary/norse.torch.functional.receptive_field.rst", "_autosummary/norse.torch.functional.regularization.rst", "_autosummary/norse.torch.functional.reset.rst", "_autosummary/norse.torch.functional.spikes_to_times_decoder.rst", "_autosummary/norse.torch.functional.stdp.rst", "_autosummary/norse.torch.functional.stdp_sensor.rst", "_autosummary/norse.torch.functional.superspike.rst", "_autosummary/norse.torch.functional.test.rst", "_autosummary/norse.torch.functional.test.test_coba_lif.rst", "_autosummary/norse.torch.functional.test.test_decode.rst", "_autosummary/norse.torch.functional.test.test_encode.rst", "_autosummary/norse.torch.functional.test.test_exp_filter.rst", "_autosummary/norse.torch.functional.test.test_heaviside.rst", "_autosummary/norse.torch.functional.test.test_iaf.rst", "_autosummary/norse.torch.functional.test.test_izhikevich.rst", "_autosummary/norse.torch.functional.test.test_leaky_integrator.rst", "_autosummary/norse.torch.functional.test.test_leaky_integrator_box.rst", "_autosummary/norse.torch.functional.test.test_lif.rst", "_autosummary/norse.torch.functional.test.test_lif_adex.rst", "_autosummary/norse.torch.functional.test.test_lif_adex_refrac.rst", "_autosummary/norse.torch.functional.test.test_lif_box.rst", "_autosummary/norse.torch.functional.test.test_lif_ex.rst", "_autosummary/norse.torch.functional.test.test_lif_mc.rst", "_autosummary/norse.torch.functional.test.test_lif_mc_refrac.rst", "_autosummary/norse.torch.functional.test.test_lif_refrac.rst", "_autosummary/norse.torch.functional.test.test_lift.rst", "_autosummary/norse.torch.functional.test.test_logical.rst", "_autosummary/norse.torch.functional.test.test_lsnn.rst", "_autosummary/norse.torch.functional.test.test_receptive_field.rst", "_autosummary/norse.torch.functional.test.test_regularization.rst", "_autosummary/norse.torch.functional.test.test_spikes_to_times_decoder.rst", "_autosummary/norse.torch.functional.test.test_stdp.rst", "_autosummary/norse.torch.functional.test.test_stdp_sensor.rst", "_autosummary/norse.torch.functional.test.test_superspike.rst", "_autosummary/norse.torch.functional.test.test_threshold.rst", "_autosummary/norse.torch.functional.test.test_tsodyks_makram.rst", "_autosummary/norse.torch.functional.threshold.rst", "_autosummary/norse.torch.functional.tsodyks_makram.rst", "_autosummary/norse.torch.models.rst", "_autosummary/norse.torch.models.conv.rst", "_autosummary/norse.torch.models.mobilenet.rst", "_autosummary/norse.torch.models.test.rst", "_autosummary/norse.torch.models.test.test_conv.rst", "_autosummary/norse.torch.models.test.test_mobilenet.rst", "_autosummary/norse.torch.models.test.test_vgg.rst", "_autosummary/norse.torch.models.vgg.rst", "_autosummary/norse.torch.module.rst", "_autosummary/norse.torch.module.coba_lif.rst", "_autosummary/norse.torch.module.conv.rst", "_autosummary/norse.torch.module.encode.rst", "_autosummary/norse.torch.module.exp_filter.rst", "_autosummary/norse.torch.module.iaf.rst", "_autosummary/norse.torch.module.izhikevich.rst", "_autosummary/norse.torch.module.leaky_integrator.rst", "_autosummary/norse.torch.module.leaky_integrator_box.rst", "_autosummary/norse.torch.module.lif.rst", "_autosummary/norse.torch.module.lif_adex.rst", "_autosummary/norse.torch.module.lif_adex_refrac.rst", "_autosummary/norse.torch.module.lif_box.rst", "_autosummary/norse.torch.module.lif_correlation.rst", "_autosummary/norse.torch.module.lif_ex.rst", "_autosummary/norse.torch.module.lif_mc.rst", "_autosummary/norse.torch.module.lif_mc_refrac.rst", "_autosummary/norse.torch.module.lif_refrac.rst", "_autosummary/norse.torch.module.lift.rst", "_autosummary/norse.torch.module.lsnn.rst", "_autosummary/norse.torch.module.receptive_field.rst", "_autosummary/norse.torch.module.regularization.rst", "_autosummary/norse.torch.module.sequential.rst", "_autosummary/norse.torch.module.snn.rst", "_autosummary/norse.torch.module.spikes_to_times_decoder.rst", "_autosummary/norse.torch.module.test.rst", "_autosummary/norse.torch.module.test.test_coba.rst", "_autosummary/norse.torch.module.test.test_conv.rst", "_autosummary/norse.torch.module.test.test_encode.rst", "_autosummary/norse.torch.module.test.test_exp_filter.rst", "_autosummary/norse.torch.module.test.test_iaf.rst", "_autosummary/norse.torch.module.test.test_izhikevich.rst", "_autosummary/norse.torch.module.test.test_leaky_integrator.rst", "_autosummary/norse.torch.module.test.test_leaky_integrator_box.rst", "_autosummary/norse.torch.module.test.test_lif.rst", "_autosummary/norse.torch.module.test.test_lif_adex.rst", "_autosummary/norse.torch.module.test.test_lif_adex_refrac.rst", "_autosummary/norse.torch.module.test.test_lif_box.rst", "_autosummary/norse.torch.module.test.test_lif_correlation.rst", "_autosummary/norse.torch.module.test.test_lif_ex.rst", "_autosummary/norse.torch.module.test.test_lif_mc.rst", "_autosummary/norse.torch.module.test.test_lif_mc_refrac.rst", "_autosummary/norse.torch.module.test.test_lif_refrac.rst", "_autosummary/norse.torch.module.test.test_lift.rst", "_autosummary/norse.torch.module.test.test_lsnn.rst", "_autosummary/norse.torch.module.test.test_receptive_field.rst", "_autosummary/norse.torch.module.test.test_regularization.rst", "_autosummary/norse.torch.module.test.test_sequential.rst", "_autosummary/norse.torch.module.test.test_snn.rst", "_autosummary/norse.torch.module.test.test_spikes_to_times_decoder.rst", "_autosummary/norse.torch.module.test.test_training.rst", "_autosummary/norse.torch.utils.rst", "_autosummary/norse.torch.utils.clone.rst", "_autosummary/norse.torch.utils.export_nir.rst", "_autosummary/norse.torch.utils.import_nir.rst", "_autosummary/norse.torch.utils.plot.rst", "_autosummary/norse.torch.utils.plot.plot.rst", "_autosummary/norse.torch.utils.pytree.rst", "_autosummary/norse.torch.utils.state.rst", "_autosummary/norse.torch.utils.tensorboard.rst", "_autosummary/norse.torch.utils.tensorboard.tensorboard.rst", "_autosummary/norse.torch.utils.test.rst", "_autosummary/norse.torch.utils.test.test_nir_export.rst", "_autosummary/norse.torch.utils.test.test_nir_import.rst", "_autosummary/norse.torch.utils.test.test_tensorboard.rst", "_autosummary/norse.utils.rst", "api.rst", "generated/norse.torch.functional.coba_lif.CobaLIFFeedForwardState.rst", "generated/norse.torch.functional.coba_lif.CobaLIFParameters.rst", "generated/norse.torch.functional.coba_lif.coba_lif_feed_forward_step.rst", "generated/norse.torch.functional.heaviside.rst", "generated/norse.torch.functional.iaf.IAFFeedForwardState.rst", "generated/norse.torch.functional.iaf.IAFParameters.rst", "generated/norse.torch.functional.iaf.iaf_feed_forward_step.rst", "generated/norse.torch.functional.izhikevich.IzhikevichParameters.rst", "generated/norse.torch.functional.izhikevich.IzhikevichSpikingBehavior.rst", "generated/norse.torch.functional.izhikevich.accomodation.rst", "generated/norse.torch.functional.izhikevich.bistability.rst", "generated/norse.torch.functional.izhikevich.class_1_exc.rst", "generated/norse.torch.functional.izhikevich.class_2_exc.rst", "generated/norse.torch.functional.izhikevich.dap.rst", "generated/norse.torch.functional.izhikevich.inhibition_induced_bursting.rst", "generated/norse.torch.functional.izhikevich.inhibition_induced_spiking.rst", "generated/norse.torch.functional.izhikevich.integrator.rst", "generated/norse.torch.functional.izhikevich.izhikevich_feed_forward_step.rst", "generated/norse.torch.functional.izhikevich.mixed_mode.rst", "generated/norse.torch.functional.izhikevich.phasic_bursting.rst", "generated/norse.torch.functional.izhikevich.phasic_spiking.rst", "generated/norse.torch.functional.izhikevich.rebound_burst.rst", "generated/norse.torch.functional.izhikevich.rebound_spike.rst", "generated/norse.torch.functional.izhikevich.resonator.rst", "generated/norse.torch.functional.izhikevich.spike_frequency_adaptation.rst", "generated/norse.torch.functional.izhikevich.spike_latency.rst", "generated/norse.torch.functional.izhikevich.subthreshold_oscillation.rst", "generated/norse.torch.functional.izhikevich.tonic_bursting.rst", "generated/norse.torch.functional.izhikevich.tonic_spiking.rst", "generated/norse.torch.functional.leaky_integrator.LIParameters.rst", "generated/norse.torch.functional.leaky_integrator.LIState.rst", "generated/norse.torch.functional.leaky_integrator.li_feed_forward_step.rst", "generated/norse.torch.functional.lif_adex.LIFAdExFeedForwardState.rst", "generated/norse.torch.functional.lif_adex.LIFAdExParameters.rst", "generated/norse.torch.functional.lif_adex.lif_adex_current_encoder.rst", "generated/norse.torch.functional.lif_adex.lif_adex_feed_forward_step.rst", "generated/norse.torch.functional.lif_box.LIFBoxFeedForwardState.rst", "generated/norse.torch.functional.lif_box.LIFBoxParameters.rst", "generated/norse.torch.functional.lif_box.lif_box_feed_forward_step.rst", "generated/norse.torch.functional.lif_ex.LIFExFeedForwardState.rst", "generated/norse.torch.functional.lif_ex.LIFExParameters.rst", "generated/norse.torch.functional.lif_ex.lif_ex_current_encoder.rst", "generated/norse.torch.functional.lif_ex.lif_ex_feed_forward_step.rst", "generated/norse.torch.functional.lift.rst", "generated/norse.torch.functional.logical.logical_and.rst", "generated/norse.torch.functional.logical.logical_or.rst", "generated/norse.torch.functional.logical.logical_xor.rst", "generated/norse.torch.functional.logical.muller_c.rst", "generated/norse.torch.functional.logical.posedge_detector.rst", "generated/norse.torch.functional.receptive_field.gaussian_kernel.rst", "generated/norse.torch.functional.receptive_field.spatial_receptive_field.rst", "generated/norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives.rst", "generated/norse.torch.functional.receptive_field.temporal_scale_distribution.rst", "generated/norse.torch.functional.regularization.regularize_step.rst", "generated/norse.torch.functional.regularization.spike_accumulator.rst", "generated/norse.torch.functional.regularization.voltage_accumulator.rst", "generated/norse.torch.module.coba_lif.CobaLIFCell.rst", "generated/norse.torch.module.conv.LConv2d.rst", "generated/norse.torch.module.encode.ConstantCurrentLIFEncoder.rst", "generated/norse.torch.module.encode.PoissonEncoder.rst", "generated/norse.torch.module.encode.PoissonEncoderStep.rst", "generated/norse.torch.module.encode.PopulationEncoder.rst", "generated/norse.torch.module.encode.SignedPoissonEncoder.rst", "generated/norse.torch.module.encode.SpikeLatencyEncoder.rst", "generated/norse.torch.module.encode.SpikeLatencyLIFEncoder.rst", "generated/norse.torch.module.iaf.IAFCell.rst", "generated/norse.torch.module.iaf.IAFFeedForwardState.rst", "generated/norse.torch.module.iaf.IAFParameters.rst", "generated/norse.torch.module.izhikevich.Izhikevich.rst", "generated/norse.torch.module.izhikevich.IzhikevichCell.rst", "generated/norse.torch.module.izhikevich.IzhikevichRecurrent.rst", "generated/norse.torch.module.izhikevich.IzhikevichRecurrentCell.rst", "generated/norse.torch.module.izhikevich.IzhikevichSpikingBehavior.rst", "generated/norse.torch.module.izhikevich.IzhikevichState.rst", "generated/norse.torch.module.leaky_integrator.LI.rst", "generated/norse.torch.module.leaky_integrator.LICell.rst", "generated/norse.torch.module.leaky_integrator.LILinearCell.rst", "generated/norse.torch.module.leaky_integrator.LIParameters.rst", "generated/norse.torch.module.leaky_integrator.LIState.rst", "generated/norse.torch.module.lif.LIF.rst", "generated/norse.torch.module.lif.LIFCell.rst", "generated/norse.torch.module.lif.LIFParameters.rst", "generated/norse.torch.module.lif.LIFRecurrent.rst", "generated/norse.torch.module.lif.LIFRecurrentCell.rst", "generated/norse.torch.module.lif.LIFState.rst", "generated/norse.torch.module.lif_adex.LIFAdEx.rst", "generated/norse.torch.module.lif_adex.LIFAdExCell.rst", "generated/norse.torch.module.lif_adex.LIFAdExRecurrent.rst", "generated/norse.torch.module.lif_adex.LIFAdExRecurrentCell.rst", "generated/norse.torch.module.lif_box.LIFBoxCell.rst", "generated/norse.torch.module.lif_box.LIFBoxFeedForwardState.rst", "generated/norse.torch.module.lif_box.LIFBoxParameters.rst", "generated/norse.torch.module.lif_ex.LIFEx.rst", "generated/norse.torch.module.lif_ex.LIFExCell.rst", "generated/norse.torch.module.lif_ex.LIFExRecurrent.rst", "generated/norse.torch.module.lif_ex.LIFExRecurrentCell.rst", "generated/norse.torch.module.lif_mc.LIFMCRecurrentCell.rst", "generated/norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell.rst", "generated/norse.torch.module.lif_refrac.LIFRefracCell.rst", "generated/norse.torch.module.lif_refrac.LIFRefracRecurrentCell.rst", "generated/norse.torch.module.lsnn.LSNN.rst", "generated/norse.torch.module.lsnn.LSNNCell.rst", "generated/norse.torch.module.lsnn.LSNNRecurrent.rst", "generated/norse.torch.module.lsnn.LSNNRecurrentCell.rst", "generated/norse.torch.module.receptive_field.SpatialReceptiveField2d.rst", "generated/norse.torch.module.receptive_field.TemporalReceptiveField.rst", "index.rst", "norse.torch.rst", "norse.torch.functional.rst", "pages/about.rst", "pages/development.md", "pages/hardware.rst", "pages/installing.md", "pages/parameters.ipynb", "pages/spiking.ipynb", "pages/started.ipynb", "pages/tasks.rst", "pages/working.ipynb"], "indexentries": {"__init__() (norse.torch.functional.coba_lif.cobaliffeedforwardstate method)": [[160, "norse.torch.functional.coba_lif.CobaLIFFeedForwardState.__init__", false]], "__init__() (norse.torch.functional.coba_lif.cobalifparameters method)": [[161, "norse.torch.functional.coba_lif.CobaLIFParameters.__init__", false]], "__init__() (norse.torch.functional.iaf.iaffeedforwardstate method)": [[164, "norse.torch.functional.iaf.IAFFeedForwardState.__init__", false]], "__init__() (norse.torch.functional.iaf.iafparameters method)": [[165, "norse.torch.functional.iaf.IAFParameters.__init__", false]], "__init__() (norse.torch.functional.izhikevich.izhikevichparameters method)": [[167, "norse.torch.functional.izhikevich.IzhikevichParameters.__init__", false]], "__init__() (norse.torch.functional.izhikevich.izhikevichspikingbehavior method)": [[168, "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior.__init__", false]], "__init__() (norse.torch.functional.leaky_integrator.liparameters method)": [[189, "norse.torch.functional.leaky_integrator.LIParameters.__init__", false]], "__init__() (norse.torch.functional.leaky_integrator.listate method)": [[190, "norse.torch.functional.leaky_integrator.LIState.__init__", false]], "__init__() (norse.torch.functional.lif_adex.lifadexfeedforwardstate method)": [[192, "norse.torch.functional.lif_adex.LIFAdExFeedForwardState.__init__", false]], "__init__() (norse.torch.functional.lif_adex.lifadexparameters method)": [[193, "norse.torch.functional.lif_adex.LIFAdExParameters.__init__", false]], "__init__() (norse.torch.functional.lif_box.lifboxfeedforwardstate method)": [[196, "norse.torch.functional.lif_box.LIFBoxFeedForwardState.__init__", false]], "__init__() (norse.torch.functional.lif_box.lifboxparameters method)": [[197, "norse.torch.functional.lif_box.LIFBoxParameters.__init__", false]], "__init__() (norse.torch.functional.lif_ex.lifexfeedforwardstate method)": [[199, "norse.torch.functional.lif_ex.LIFExFeedForwardState.__init__", false]], "__init__() (norse.torch.functional.lif_ex.lifexparameters method)": [[200, "norse.torch.functional.lif_ex.LIFExParameters.__init__", false]], "__init__() (norse.torch.module.coba_lif.cobalifcell method)": [[216, "norse.torch.module.coba_lif.CobaLIFCell.__init__", false]], "__init__() (norse.torch.module.conv.lconv2d method)": [[217, "norse.torch.module.conv.LConv2d.__init__", false]], "__init__() (norse.torch.module.encode.constantcurrentlifencoder method)": [[218, "norse.torch.module.encode.ConstantCurrentLIFEncoder.__init__", false]], "__init__() (norse.torch.module.encode.poissonencoder method)": [[219, "norse.torch.module.encode.PoissonEncoder.__init__", false]], "__init__() (norse.torch.module.encode.poissonencoderstep method)": [[220, "norse.torch.module.encode.PoissonEncoderStep.__init__", false]], "__init__() (norse.torch.module.encode.populationencoder method)": [[221, "norse.torch.module.encode.PopulationEncoder.__init__", false]], "__init__() (norse.torch.module.encode.signedpoissonencoder method)": [[222, "norse.torch.module.encode.SignedPoissonEncoder.__init__", false]], "__init__() (norse.torch.module.encode.spikelatencyencoder method)": [[223, "norse.torch.module.encode.SpikeLatencyEncoder.__init__", false]], "__init__() (norse.torch.module.encode.spikelatencylifencoder method)": [[224, "norse.torch.module.encode.SpikeLatencyLIFEncoder.__init__", false]], "__init__() (norse.torch.module.iaf.iafcell method)": [[225, "norse.torch.module.iaf.IAFCell.__init__", false]], "__init__() (norse.torch.module.iaf.iaffeedforwardstate method)": [[226, "norse.torch.module.iaf.IAFFeedForwardState.__init__", false]], "__init__() (norse.torch.module.iaf.iafparameters method)": [[227, "norse.torch.module.iaf.IAFParameters.__init__", false]], "__init__() (norse.torch.module.izhikevich.izhikevich method)": [[228, "norse.torch.module.izhikevich.Izhikevich.__init__", false]], "__init__() (norse.torch.module.izhikevich.izhikevichcell method)": [[229, "norse.torch.module.izhikevich.IzhikevichCell.__init__", false]], "__init__() (norse.torch.module.izhikevich.izhikevichrecurrent method)": [[230, "norse.torch.module.izhikevich.IzhikevichRecurrent.__init__", false]], "__init__() (norse.torch.module.izhikevich.izhikevichrecurrentcell method)": [[231, "norse.torch.module.izhikevich.IzhikevichRecurrentCell.__init__", false]], "__init__() (norse.torch.module.izhikevich.izhikevichspikingbehavior method)": [[232, "norse.torch.module.izhikevich.IzhikevichSpikingBehavior.__init__", false]], "__init__() (norse.torch.module.izhikevich.izhikevichstate method)": [[233, "norse.torch.module.izhikevich.IzhikevichState.__init__", false]], "__init__() (norse.torch.module.leaky_integrator.li method)": [[234, "norse.torch.module.leaky_integrator.LI.__init__", false]], "__init__() (norse.torch.module.leaky_integrator.licell method)": [[235, "norse.torch.module.leaky_integrator.LICell.__init__", false]], "__init__() (norse.torch.module.leaky_integrator.lilinearcell method)": [[236, "norse.torch.module.leaky_integrator.LILinearCell.__init__", false]], "__init__() (norse.torch.module.leaky_integrator.liparameters method)": [[237, "norse.torch.module.leaky_integrator.LIParameters.__init__", false]], "__init__() (norse.torch.module.leaky_integrator.listate method)": [[238, "norse.torch.module.leaky_integrator.LIState.__init__", false]], "__init__() (norse.torch.module.lif.lif method)": [[239, "norse.torch.module.lif.LIF.__init__", false]], "__init__() (norse.torch.module.lif.lifcell method)": [[240, "norse.torch.module.lif.LIFCell.__init__", false]], "__init__() (norse.torch.module.lif.lifparameters method)": [[241, "norse.torch.module.lif.LIFParameters.__init__", false]], "__init__() (norse.torch.module.lif.lifrecurrent method)": [[242, "norse.torch.module.lif.LIFRecurrent.__init__", false]], "__init__() (norse.torch.module.lif.lifrecurrentcell method)": [[243, "norse.torch.module.lif.LIFRecurrentCell.__init__", false]], "__init__() (norse.torch.module.lif.lifstate method)": [[244, "norse.torch.module.lif.LIFState.__init__", false]], "__init__() (norse.torch.module.lif_adex.lifadex method)": [[245, "norse.torch.module.lif_adex.LIFAdEx.__init__", false]], "__init__() (norse.torch.module.lif_adex.lifadexcell method)": [[246, "norse.torch.module.lif_adex.LIFAdExCell.__init__", false]], "__init__() (norse.torch.module.lif_adex.lifadexrecurrent method)": [[247, "norse.torch.module.lif_adex.LIFAdExRecurrent.__init__", false]], "__init__() (norse.torch.module.lif_adex.lifadexrecurrentcell method)": [[248, "norse.torch.module.lif_adex.LIFAdExRecurrentCell.__init__", false]], "__init__() (norse.torch.module.lif_box.lifboxcell method)": [[249, "norse.torch.module.lif_box.LIFBoxCell.__init__", false]], "__init__() (norse.torch.module.lif_box.lifboxfeedforwardstate method)": [[250, "norse.torch.module.lif_box.LIFBoxFeedForwardState.__init__", false]], "__init__() (norse.torch.module.lif_box.lifboxparameters method)": [[251, "norse.torch.module.lif_box.LIFBoxParameters.__init__", false]], "__init__() (norse.torch.module.lif_ex.lifex method)": [[252, "norse.torch.module.lif_ex.LIFEx.__init__", false]], "__init__() (norse.torch.module.lif_ex.lifexcell method)": [[253, "norse.torch.module.lif_ex.LIFExCell.__init__", false]], "__init__() (norse.torch.module.lif_ex.lifexrecurrent method)": [[254, "norse.torch.module.lif_ex.LIFExRecurrent.__init__", false]], "__init__() (norse.torch.module.lif_ex.lifexrecurrentcell method)": [[255, "norse.torch.module.lif_ex.LIFExRecurrentCell.__init__", false]], "__init__() (norse.torch.module.lif_mc.lifmcrecurrentcell method)": [[256, "norse.torch.module.lif_mc.LIFMCRecurrentCell.__init__", false]], "__init__() (norse.torch.module.lif_mc_refrac.lifmcrefracrecurrentcell method)": [[257, "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell.__init__", false]], "__init__() (norse.torch.module.lif_refrac.lifrefraccell method)": [[258, "norse.torch.module.lif_refrac.LIFRefracCell.__init__", false]], "__init__() (norse.torch.module.lif_refrac.lifrefracrecurrentcell method)": [[259, "norse.torch.module.lif_refrac.LIFRefracRecurrentCell.__init__", false]], "__init__() (norse.torch.module.lsnn.lsnn method)": [[260, "norse.torch.module.lsnn.LSNN.__init__", false]], "__init__() (norse.torch.module.lsnn.lsnncell method)": [[261, "norse.torch.module.lsnn.LSNNCell.__init__", false]], "__init__() (norse.torch.module.lsnn.lsnnrecurrent method)": [[262, "norse.torch.module.lsnn.LSNNRecurrent.__init__", false]], "__init__() (norse.torch.module.lsnn.lsnnrecurrentcell method)": [[263, "norse.torch.module.lsnn.LSNNRecurrentCell.__init__", false]], "__init__() (norse.torch.module.receptive_field.spatialreceptivefield2d method)": [[264, "norse.torch.module.receptive_field.SpatialReceptiveField2d.__init__", false]], "__init__() (norse.torch.module.receptive_field.temporalreceptivefield method)": [[265, "norse.torch.module.receptive_field.TemporalReceptiveField.__init__", false]], "accomodation (in module norse.torch.functional.izhikevich)": [[169, "norse.torch.functional.izhikevich.accomodation", false]], "bistability (in module norse.torch.functional.izhikevich)": [[170, "norse.torch.functional.izhikevich.bistability", false]], "class_1_exc (in module norse.torch.functional.izhikevich)": [[171, "norse.torch.functional.izhikevich.class_1_exc", false]], "class_2_exc (in module norse.torch.functional.izhikevich)": [[172, "norse.torch.functional.izhikevich.class_2_exc", false]], "coba_lif_feed_forward_step() (in module norse.torch.functional.coba_lif)": [[162, "norse.torch.functional.coba_lif.coba_lif_feed_forward_step", false]], "cobalifcell (class in norse.torch.module.coba_lif)": [[216, "norse.torch.module.coba_lif.CobaLIFCell", false]], "cobaliffeedforwardstate (class in norse.torch.functional.coba_lif)": [[160, "norse.torch.functional.coba_lif.CobaLIFFeedForwardState", false]], "cobalifparameters (class in norse.torch.functional.coba_lif)": [[161, "norse.torch.functional.coba_lif.CobaLIFParameters", false]], "constantcurrentlifencoder (class in norse.torch.module.encode)": [[218, "norse.torch.module.encode.ConstantCurrentLIFEncoder", false]], "dap (in module norse.torch.functional.izhikevich)": [[173, "norse.torch.functional.izhikevich.dap", false]], "gaussian_kernel() (in module norse.torch.functional.receptive_field)": [[209, "norse.torch.functional.receptive_field.gaussian_kernel", false]], "iaf_feed_forward_step() (in module norse.torch.functional.iaf)": [[166, "norse.torch.functional.iaf.iaf_feed_forward_step", false]], "iafcell (class in norse.torch.module.iaf)": [[225, "norse.torch.module.iaf.IAFCell", false]], "iaffeedforwardstate (class in norse.torch.functional.iaf)": [[164, "norse.torch.functional.iaf.IAFFeedForwardState", false]], "iaffeedforwardstate (class in norse.torch.module.iaf)": [[226, "norse.torch.module.iaf.IAFFeedForwardState", false]], "iafparameters (class in norse.torch.functional.iaf)": [[165, "norse.torch.functional.iaf.IAFParameters", false]], "iafparameters (class in norse.torch.module.iaf)": [[227, "norse.torch.module.iaf.IAFParameters", false]], "inhibition_induced_bursting (in module norse.torch.functional.izhikevich)": [[174, "norse.torch.functional.izhikevich.inhibition_induced_bursting", false]], "inhibition_induced_spiking (in module norse.torch.functional.izhikevich)": [[175, "norse.torch.functional.izhikevich.inhibition_induced_spiking", false]], "integrator (in module norse.torch.functional.izhikevich)": [[176, "norse.torch.functional.izhikevich.integrator", false]], "izhikevich (class in norse.torch.module.izhikevich)": [[228, "norse.torch.module.izhikevich.Izhikevich", false]], "izhikevich_feed_forward_step() (in module norse.torch.functional.izhikevich)": [[177, "norse.torch.functional.izhikevich.izhikevich_feed_forward_step", false]], "izhikevichcell (class in norse.torch.module.izhikevich)": [[229, "norse.torch.module.izhikevich.IzhikevichCell", false]], "izhikevichparameters (class in norse.torch.functional.izhikevich)": [[167, "norse.torch.functional.izhikevich.IzhikevichParameters", false]], "izhikevichrecurrent (class in norse.torch.module.izhikevich)": [[230, "norse.torch.module.izhikevich.IzhikevichRecurrent", false]], "izhikevichrecurrentcell (class in norse.torch.module.izhikevich)": [[231, "norse.torch.module.izhikevich.IzhikevichRecurrentCell", false]], "izhikevichspikingbehavior (class in norse.torch.functional.izhikevich)": [[168, "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior", false]], "izhikevichspikingbehavior (class in norse.torch.module.izhikevich)": [[232, "norse.torch.module.izhikevich.IzhikevichSpikingBehavior", false]], "izhikevichstate (class in norse.torch.module.izhikevich)": [[233, "norse.torch.module.izhikevich.IzhikevichState", false]], "lconv2d (class in norse.torch.module.conv)": [[217, "norse.torch.module.conv.LConv2d", false]], "li (class in norse.torch.module.leaky_integrator)": [[234, "norse.torch.module.leaky_integrator.LI", false]], "li_feed_forward_step() (in module norse.torch.functional.leaky_integrator)": [[191, "norse.torch.functional.leaky_integrator.li_feed_forward_step", false]], "licell (class in norse.torch.module.leaky_integrator)": [[235, "norse.torch.module.leaky_integrator.LICell", false]], "lif (class in norse.torch.module.lif)": [[239, "norse.torch.module.lif.LIF", false]], "lif_adex_current_encoder() (in module norse.torch.functional.lif_adex)": [[194, "norse.torch.functional.lif_adex.lif_adex_current_encoder", false]], "lif_adex_feed_forward_step() (in module norse.torch.functional.lif_adex)": [[195, "norse.torch.functional.lif_adex.lif_adex_feed_forward_step", false]], "lif_box_feed_forward_step() (in module norse.torch.functional.lif_box)": [[198, "norse.torch.functional.lif_box.lif_box_feed_forward_step", false]], "lif_ex_current_encoder() (in module norse.torch.functional.lif_ex)": [[201, "norse.torch.functional.lif_ex.lif_ex_current_encoder", false]], "lif_ex_feed_forward_step() (in module norse.torch.functional.lif_ex)": [[202, "norse.torch.functional.lif_ex.lif_ex_feed_forward_step", false]], "lifadex (class in norse.torch.module.lif_adex)": [[245, "norse.torch.module.lif_adex.LIFAdEx", false]], "lifadexcell (class in norse.torch.module.lif_adex)": [[246, "norse.torch.module.lif_adex.LIFAdExCell", false]], "lifadexfeedforwardstate (class in norse.torch.functional.lif_adex)": [[192, "norse.torch.functional.lif_adex.LIFAdExFeedForwardState", false]], "lifadexparameters (class in norse.torch.functional.lif_adex)": [[193, "norse.torch.functional.lif_adex.LIFAdExParameters", false]], "lifadexrecurrent (class in norse.torch.module.lif_adex)": [[247, "norse.torch.module.lif_adex.LIFAdExRecurrent", false]], "lifadexrecurrentcell (class in norse.torch.module.lif_adex)": [[248, "norse.torch.module.lif_adex.LIFAdExRecurrentCell", false]], "lifboxcell (class in norse.torch.module.lif_box)": [[249, "norse.torch.module.lif_box.LIFBoxCell", false]], "lifboxfeedforwardstate (class in norse.torch.functional.lif_box)": [[196, "norse.torch.functional.lif_box.LIFBoxFeedForwardState", false]], "lifboxfeedforwardstate (class in norse.torch.module.lif_box)": [[250, "norse.torch.module.lif_box.LIFBoxFeedForwardState", false]], "lifboxparameters (class in norse.torch.functional.lif_box)": [[197, "norse.torch.functional.lif_box.LIFBoxParameters", false]], "lifboxparameters (class in norse.torch.module.lif_box)": [[251, "norse.torch.module.lif_box.LIFBoxParameters", false]], "lifcell (class in norse.torch.module.lif)": [[240, "norse.torch.module.lif.LIFCell", false]], "lifex (class in norse.torch.module.lif_ex)": [[252, "norse.torch.module.lif_ex.LIFEx", false]], "lifexcell (class in norse.torch.module.lif_ex)": [[253, "norse.torch.module.lif_ex.LIFExCell", false]], "lifexfeedforwardstate (class in norse.torch.functional.lif_ex)": [[199, "norse.torch.functional.lif_ex.LIFExFeedForwardState", false]], "lifexparameters (class in norse.torch.functional.lif_ex)": [[200, "norse.torch.functional.lif_ex.LIFExParameters", false]], "lifexrecurrent (class in norse.torch.module.lif_ex)": [[254, "norse.torch.module.lif_ex.LIFExRecurrent", false]], "lifexrecurrentcell (class in norse.torch.module.lif_ex)": [[255, "norse.torch.module.lif_ex.LIFExRecurrentCell", false]], "lifmcrecurrentcell (class in norse.torch.module.lif_mc)": [[256, "norse.torch.module.lif_mc.LIFMCRecurrentCell", false]], "lifmcrefracrecurrentcell (class in norse.torch.module.lif_mc_refrac)": [[257, "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell", false]], "lifparameters (class in norse.torch.module.lif)": [[241, "norse.torch.module.lif.LIFParameters", false]], "lifrecurrent (class in norse.torch.module.lif)": [[242, "norse.torch.module.lif.LIFRecurrent", false]], "lifrecurrentcell (class in norse.torch.module.lif)": [[243, "norse.torch.module.lif.LIFRecurrentCell", false]], "lifrefraccell (class in norse.torch.module.lif_refrac)": [[258, "norse.torch.module.lif_refrac.LIFRefracCell", false]], "lifrefracrecurrentcell (class in norse.torch.module.lif_refrac)": [[259, "norse.torch.module.lif_refrac.LIFRefracRecurrentCell", false]], "lifstate (class in norse.torch.module.lif)": [[244, "norse.torch.module.lif.LIFState", false]], "lilinearcell (class in norse.torch.module.leaky_integrator)": [[236, "norse.torch.module.leaky_integrator.LILinearCell", false]], "liparameters (class in norse.torch.functional.leaky_integrator)": [[189, "norse.torch.functional.leaky_integrator.LIParameters", false]], "liparameters (class in norse.torch.module.leaky_integrator)": [[237, "norse.torch.module.leaky_integrator.LIParameters", false]], "listate (class in norse.torch.functional.leaky_integrator)": [[190, "norse.torch.functional.leaky_integrator.LIState", false]], "listate (class in norse.torch.module.leaky_integrator)": [[238, "norse.torch.module.leaky_integrator.LIState", false]], "logical_and() (in module norse.torch.functional.logical)": [[204, "norse.torch.functional.logical.logical_and", false]], "logical_or() (in module norse.torch.functional.logical)": [[205, "norse.torch.functional.logical.logical_or", false]], "logical_xor() (in module norse.torch.functional.logical)": [[206, "norse.torch.functional.logical.logical_xor", false]], "lsnn (class in norse.torch.module.lsnn)": [[260, "norse.torch.module.lsnn.LSNN", false]], "lsnncell (class in norse.torch.module.lsnn)": [[261, "norse.torch.module.lsnn.LSNNCell", false]], "lsnnrecurrent (class in norse.torch.module.lsnn)": [[262, "norse.torch.module.lsnn.LSNNRecurrent", false]], "lsnnrecurrentcell (class in norse.torch.module.lsnn)": [[263, "norse.torch.module.lsnn.LSNNRecurrentCell", false]], "mixed_mode (in module norse.torch.functional.izhikevich)": [[178, "norse.torch.functional.izhikevich.mixed_mode", false]], "module": [[0, "module-norse", false], [1, "module-norse.benchmark", false], [2, "module-norse.benchmark.benchmark", false], [3, "module-norse.benchmark.main", false], [4, "module-norse.benchmark.norse_lif", false], [5, "module-norse.benchmark.plot", false], [6, "module-norse.dataset", false], [7, "module-norse.dataset.memory", false], [8, "module-norse.dataset.spiking_heidelberg", false], [9, "module-norse.task", false], [10, "module-norse.task.correlation_experiment", false], [11, "module-norse.task.mnist", false], [12, "module-norse.task.mnist_pl", false], [13, "module-norse.torch", false], [14, "module-norse.torch.functional", false], [15, "module-norse.torch.functional.adjoint", false], [16, "module-norse.torch.functional.adjoint.lif_adjoint", false], [17, "module-norse.torch.functional.adjoint.lif_mc_adjoint", false], [18, "module-norse.torch.functional.adjoint.lif_mc_refrac_adjoint", false], [19, "module-norse.torch.functional.adjoint.lif_refrac_adjoint", false], [20, "module-norse.torch.functional.adjoint.lsnn_adjoint", false], [21, "module-norse.torch.functional.adjoint.test", false], [22, "module-norse.torch.functional.adjoint.test.test_lif_adjoint", false], [23, "module-norse.torch.functional.adjoint.test.test_lif_refrac_adjoint", false], [24, "module-norse.torch.functional.adjoint.test.test_lsnn_adjoint", false], [25, "module-norse.torch.functional.coba_lif", false], [26, "module-norse.torch.functional.correlation_sensor", false], [27, "module-norse.torch.functional.decode", false], [28, "module-norse.torch.functional.encode", false], [29, "module-norse.torch.functional.filter", false], [30, "module-norse.torch.functional.heaviside", false], [31, "module-norse.torch.functional.iaf", false], [32, "module-norse.torch.functional.izhikevich", false], [33, "module-norse.torch.functional.leaky_integrator", false], [34, "module-norse.torch.functional.leaky_integrator_box", false], [35, "module-norse.torch.functional.lif", false], [36, "module-norse.torch.functional.lif_adex", false], [37, "module-norse.torch.functional.lif_adex_refrac", false], [38, "module-norse.torch.functional.lif_box", false], [39, "module-norse.torch.functional.lif_correlation", false], [40, "module-norse.torch.functional.lif_ex", false], [41, "module-norse.torch.functional.lif_mc", false], [42, "module-norse.torch.functional.lif_mc_refrac", false], [43, "module-norse.torch.functional.lif_refrac", false], [44, "module-norse.torch.functional.lift", false], [45, "module-norse.torch.functional.logical", false], [46, "module-norse.torch.functional.lsnn", false], [47, "module-norse.torch.functional.receptive_field", false], [48, "module-norse.torch.functional.regularization", false], [49, "module-norse.torch.functional.reset", false], [50, "module-norse.torch.functional.spikes_to_times_decoder", false], [51, "module-norse.torch.functional.stdp", false], [52, "module-norse.torch.functional.stdp_sensor", false], [53, "module-norse.torch.functional.superspike", false], [54, "module-norse.torch.functional.test", false], [55, "module-norse.torch.functional.test.test_coba_lif", false], [56, "module-norse.torch.functional.test.test_decode", false], [57, "module-norse.torch.functional.test.test_encode", false], [58, "module-norse.torch.functional.test.test_exp_filter", false], [59, "module-norse.torch.functional.test.test_heaviside", false], [60, "module-norse.torch.functional.test.test_iaf", false], [61, "module-norse.torch.functional.test.test_izhikevich", false], [62, "module-norse.torch.functional.test.test_leaky_integrator", false], [63, "module-norse.torch.functional.test.test_leaky_integrator_box", false], [64, "module-norse.torch.functional.test.test_lif", false], [65, "module-norse.torch.functional.test.test_lif_adex", false], [66, "module-norse.torch.functional.test.test_lif_adex_refrac", false], [67, "module-norse.torch.functional.test.test_lif_box", false], [68, "module-norse.torch.functional.test.test_lif_ex", false], [69, "module-norse.torch.functional.test.test_lif_mc", false], [70, "module-norse.torch.functional.test.test_lif_mc_refrac", false], [71, "module-norse.torch.functional.test.test_lif_refrac", false], [72, "module-norse.torch.functional.test.test_lift", false], [73, "module-norse.torch.functional.test.test_logical", false], [74, "module-norse.torch.functional.test.test_lsnn", false], [75, "module-norse.torch.functional.test.test_receptive_field", false], [76, "module-norse.torch.functional.test.test_regularization", false], [77, "module-norse.torch.functional.test.test_spikes_to_times_decoder", false], [78, "module-norse.torch.functional.test.test_stdp", false], [79, "module-norse.torch.functional.test.test_stdp_sensor", false], [80, "module-norse.torch.functional.test.test_superspike", false], [81, "module-norse.torch.functional.test.test_threshold", false], [82, "module-norse.torch.functional.test.test_tsodyks_makram", false], [83, "module-norse.torch.functional.threshold", false], [84, "module-norse.torch.functional.tsodyks_makram", false], [85, "module-norse.torch.models", false], [86, "module-norse.torch.models.conv", false], [87, "module-norse.torch.models.mobilenet", false], [88, "module-norse.torch.models.test", false], [89, "module-norse.torch.models.test.test_conv", false], [90, "module-norse.torch.models.test.test_mobilenet", false], [91, "module-norse.torch.models.test.test_vgg", false], [92, "module-norse.torch.models.vgg", false], [93, "module-norse.torch.module", false], [94, "module-norse.torch.module.coba_lif", false], [95, "module-norse.torch.module.conv", false], [96, "module-norse.torch.module.encode", false], [97, "module-norse.torch.module.exp_filter", false], [98, "module-norse.torch.module.iaf", false], [99, "module-norse.torch.module.izhikevich", false], [100, "module-norse.torch.module.leaky_integrator", false], [101, "module-norse.torch.module.leaky_integrator_box", false], [102, "module-norse.torch.module.lif", false], [103, "module-norse.torch.module.lif_adex", false], [104, "module-norse.torch.module.lif_adex_refrac", false], [105, "module-norse.torch.module.lif_box", false], [106, "module-norse.torch.module.lif_correlation", false], [107, "module-norse.torch.module.lif_ex", false], [108, "module-norse.torch.module.lif_mc", false], [109, "module-norse.torch.module.lif_mc_refrac", false], [110, "module-norse.torch.module.lif_refrac", false], [111, "module-norse.torch.module.lift", false], [112, "module-norse.torch.module.lsnn", false], [113, "module-norse.torch.module.receptive_field", false], [114, "module-norse.torch.module.regularization", false], [115, "module-norse.torch.module.sequential", false], [116, "module-norse.torch.module.snn", false], [117, "module-norse.torch.module.spikes_to_times_decoder", false], [118, "module-norse.torch.module.test", false], [119, "module-norse.torch.module.test.test_coba", false], [120, "module-norse.torch.module.test.test_conv", false], [121, "module-norse.torch.module.test.test_encode", false], [122, "module-norse.torch.module.test.test_exp_filter", false], [123, "module-norse.torch.module.test.test_iaf", false], [124, "module-norse.torch.module.test.test_izhikevich", false], [125, "module-norse.torch.module.test.test_leaky_integrator", false], [126, "module-norse.torch.module.test.test_leaky_integrator_box", false], [127, "module-norse.torch.module.test.test_lif", false], [128, "module-norse.torch.module.test.test_lif_adex", false], [129, "module-norse.torch.module.test.test_lif_adex_refrac", false], [130, "module-norse.torch.module.test.test_lif_box", false], [131, "module-norse.torch.module.test.test_lif_correlation", false], [132, "module-norse.torch.module.test.test_lif_ex", false], [133, "module-norse.torch.module.test.test_lif_mc", false], [134, "module-norse.torch.module.test.test_lif_mc_refrac", false], [135, "module-norse.torch.module.test.test_lif_refrac", false], [136, "module-norse.torch.module.test.test_lift", false], [137, "module-norse.torch.module.test.test_lsnn", false], [138, "module-norse.torch.module.test.test_receptive_field", false], [139, "module-norse.torch.module.test.test_regularization", false], [140, "module-norse.torch.module.test.test_sequential", false], [141, "module-norse.torch.module.test.test_snn", false], [142, "module-norse.torch.module.test.test_spikes_to_times_decoder", false], [143, "module-norse.torch.module.test.test_training", false], [144, "module-norse.torch.utils", false], [145, "module-norse.torch.utils.clone", false], [146, "module-norse.torch.utils.export_nir", false], [147, "module-norse.torch.utils.import_nir", false], [148, "module-norse.torch.utils.plot", false], [149, "module-norse.torch.utils.plot.plot", false], [150, "module-norse.torch.utils.pytree", false], [151, "module-norse.torch.utils.state", false], [152, "module-norse.torch.utils.tensorboard", false], [153, "module-norse.torch.utils.tensorboard.tensorboard", false], [154, "module-norse.torch.utils.test", false], [155, "module-norse.torch.utils.test.test_nir_export", false], [156, "module-norse.torch.utils.test.test_nir_import", false], [157, "module-norse.torch.utils.test.test_tensorboard", false], [158, "module-norse.utils", false], [163, "module-norse.torch.functional.heaviside", false], [203, "module-norse.torch.functional.lift", false], [267, "module-norse.torch.module", false], [267, "module-norse.torch.module.coba_lif", false], [267, "module-norse.torch.module.conv", false], [267, "module-norse.torch.module.encode", false], [267, "module-norse.torch.module.iaf", false], [267, "module-norse.torch.module.izhikevich", false], [267, "module-norse.torch.module.leaky_integrator", false], [267, "module-norse.torch.module.lif", false], [267, "module-norse.torch.module.lif_adex", false], [267, "module-norse.torch.module.lif_box", false], [267, "module-norse.torch.module.lif_ex", false], [267, "module-norse.torch.module.lif_mc", false], [267, "module-norse.torch.module.lif_mc_refrac", false], [267, "module-norse.torch.module.lif_refrac", false], [267, "module-norse.torch.module.lsnn", false], [267, "module-norse.torch.module.receptive_field", false], [268, "module-0", false], [268, "module-1", false], [268, "module-2", false], [268, "module-3", false], [268, "module-4", false], [268, "module-5", false], [268, "module-6", false], [268, "module-7", false], [268, "module-norse.torch.functional", false], [268, "module-norse.torch.functional.coba_lif", false], [268, "module-norse.torch.functional.iaf", false], [268, "module-norse.torch.functional.izhikevich", false], [268, "module-norse.torch.functional.leaky_integrator", false], [268, "module-norse.torch.functional.lif_adex", false], [268, "module-norse.torch.functional.lif_box", false], [268, "module-norse.torch.functional.lif_ex", false], [268, "module-norse.torch.functional.logical", false], [268, "module-norse.torch.functional.receptive_field", false], [268, "module-norse.torch.functional.regularization", false]], "muller_c() (in module norse.torch.functional.logical)": [[207, "norse.torch.functional.logical.muller_c", false]], "norse": [[0, "module-norse", false]], "norse.benchmark": [[1, "module-norse.benchmark", false]], "norse.benchmark.benchmark": [[2, "module-norse.benchmark.benchmark", false]], "norse.benchmark.main": [[3, "module-norse.benchmark.main", false]], "norse.benchmark.norse_lif": [[4, "module-norse.benchmark.norse_lif", false]], "norse.benchmark.plot": [[5, "module-norse.benchmark.plot", false]], "norse.dataset": [[6, "module-norse.dataset", false]], "norse.dataset.memory": [[7, "module-norse.dataset.memory", false]], "norse.dataset.spiking_heidelberg": [[8, "module-norse.dataset.spiking_heidelberg", false]], "norse.task": [[9, "module-norse.task", false]], "norse.task.correlation_experiment": [[10, "module-norse.task.correlation_experiment", false]], "norse.task.mnist": [[11, "module-norse.task.mnist", false]], "norse.task.mnist_pl": [[12, "module-norse.task.mnist_pl", false]], "norse.torch": [[13, "module-norse.torch", false]], "norse.torch.functional": [[14, "module-norse.torch.functional", false], [268, "module-0", false], [268, "module-1", false], [268, "module-2", false], [268, "module-3", false], [268, "module-4", false], [268, "module-5", false], [268, "module-6", false], [268, "module-7", false], [268, "module-norse.torch.functional", false]], "norse.torch.functional.adjoint": [[15, "module-norse.torch.functional.adjoint", false]], "norse.torch.functional.adjoint.lif_adjoint": [[16, "module-norse.torch.functional.adjoint.lif_adjoint", false]], "norse.torch.functional.adjoint.lif_mc_adjoint": [[17, "module-norse.torch.functional.adjoint.lif_mc_adjoint", false]], "norse.torch.functional.adjoint.lif_mc_refrac_adjoint": [[18, "module-norse.torch.functional.adjoint.lif_mc_refrac_adjoint", false]], "norse.torch.functional.adjoint.lif_refrac_adjoint": [[19, "module-norse.torch.functional.adjoint.lif_refrac_adjoint", false]], "norse.torch.functional.adjoint.lsnn_adjoint": [[20, "module-norse.torch.functional.adjoint.lsnn_adjoint", false]], "norse.torch.functional.adjoint.test": [[21, "module-norse.torch.functional.adjoint.test", false]], "norse.torch.functional.adjoint.test.test_lif_adjoint": [[22, "module-norse.torch.functional.adjoint.test.test_lif_adjoint", false]], "norse.torch.functional.adjoint.test.test_lif_refrac_adjoint": [[23, "module-norse.torch.functional.adjoint.test.test_lif_refrac_adjoint", false]], "norse.torch.functional.adjoint.test.test_lsnn_adjoint": [[24, "module-norse.torch.functional.adjoint.test.test_lsnn_adjoint", false]], "norse.torch.functional.coba_lif": [[25, "module-norse.torch.functional.coba_lif", false], [268, "module-norse.torch.functional.coba_lif", false]], "norse.torch.functional.correlation_sensor": [[26, "module-norse.torch.functional.correlation_sensor", false]], "norse.torch.functional.decode": [[27, "module-norse.torch.functional.decode", false]], "norse.torch.functional.encode": [[28, "module-norse.torch.functional.encode", false]], "norse.torch.functional.filter": [[29, "module-norse.torch.functional.filter", false]], "norse.torch.functional.heaviside": [[30, "module-norse.torch.functional.heaviside", false], [163, "module-norse.torch.functional.heaviside", false]], "norse.torch.functional.iaf": [[31, "module-norse.torch.functional.iaf", false], [268, "module-norse.torch.functional.iaf", false]], "norse.torch.functional.izhikevich": [[32, "module-norse.torch.functional.izhikevich", false], [268, "module-norse.torch.functional.izhikevich", false]], "norse.torch.functional.leaky_integrator": [[33, "module-norse.torch.functional.leaky_integrator", false], [268, "module-norse.torch.functional.leaky_integrator", false]], "norse.torch.functional.leaky_integrator_box": [[34, "module-norse.torch.functional.leaky_integrator_box", false]], "norse.torch.functional.lif": [[35, "module-norse.torch.functional.lif", false]], "norse.torch.functional.lif_adex": [[36, "module-norse.torch.functional.lif_adex", false], [268, "module-norse.torch.functional.lif_adex", false]], "norse.torch.functional.lif_adex_refrac": [[37, "module-norse.torch.functional.lif_adex_refrac", false]], "norse.torch.functional.lif_box": [[38, "module-norse.torch.functional.lif_box", false], [268, "module-norse.torch.functional.lif_box", false]], "norse.torch.functional.lif_correlation": [[39, "module-norse.torch.functional.lif_correlation", false]], "norse.torch.functional.lif_ex": [[40, "module-norse.torch.functional.lif_ex", false], [268, "module-norse.torch.functional.lif_ex", false]], "norse.torch.functional.lif_mc": [[41, "module-norse.torch.functional.lif_mc", false]], "norse.torch.functional.lif_mc_refrac": [[42, "module-norse.torch.functional.lif_mc_refrac", false]], "norse.torch.functional.lif_refrac": [[43, "module-norse.torch.functional.lif_refrac", false]], "norse.torch.functional.lift": [[44, "module-norse.torch.functional.lift", false], [203, "module-norse.torch.functional.lift", false]], "norse.torch.functional.logical": [[45, "module-norse.torch.functional.logical", false], [268, "module-norse.torch.functional.logical", false]], "norse.torch.functional.lsnn": [[46, "module-norse.torch.functional.lsnn", false]], "norse.torch.functional.receptive_field": [[47, "module-norse.torch.functional.receptive_field", false], [268, "module-norse.torch.functional.receptive_field", false]], "norse.torch.functional.regularization": [[48, "module-norse.torch.functional.regularization", false], [268, "module-norse.torch.functional.regularization", false]], "norse.torch.functional.reset": [[49, "module-norse.torch.functional.reset", false]], "norse.torch.functional.spikes_to_times_decoder": [[50, "module-norse.torch.functional.spikes_to_times_decoder", false]], "norse.torch.functional.stdp": [[51, "module-norse.torch.functional.stdp", false]], "norse.torch.functional.stdp_sensor": [[52, "module-norse.torch.functional.stdp_sensor", false]], "norse.torch.functional.superspike": [[53, "module-norse.torch.functional.superspike", false]], "norse.torch.functional.test": [[54, "module-norse.torch.functional.test", false]], "norse.torch.functional.test.test_coba_lif": [[55, "module-norse.torch.functional.test.test_coba_lif", false]], "norse.torch.functional.test.test_decode": [[56, "module-norse.torch.functional.test.test_decode", false]], "norse.torch.functional.test.test_encode": [[57, "module-norse.torch.functional.test.test_encode", false]], "norse.torch.functional.test.test_exp_filter": [[58, "module-norse.torch.functional.test.test_exp_filter", false]], "norse.torch.functional.test.test_heaviside": [[59, "module-norse.torch.functional.test.test_heaviside", false]], "norse.torch.functional.test.test_iaf": [[60, "module-norse.torch.functional.test.test_iaf", false]], "norse.torch.functional.test.test_izhikevich": [[61, "module-norse.torch.functional.test.test_izhikevich", false]], "norse.torch.functional.test.test_leaky_integrator": [[62, "module-norse.torch.functional.test.test_leaky_integrator", false]], "norse.torch.functional.test.test_leaky_integrator_box": [[63, "module-norse.torch.functional.test.test_leaky_integrator_box", false]], "norse.torch.functional.test.test_lif": [[64, "module-norse.torch.functional.test.test_lif", false]], "norse.torch.functional.test.test_lif_adex": [[65, "module-norse.torch.functional.test.test_lif_adex", false]], "norse.torch.functional.test.test_lif_adex_refrac": [[66, "module-norse.torch.functional.test.test_lif_adex_refrac", false]], "norse.torch.functional.test.test_lif_box": [[67, "module-norse.torch.functional.test.test_lif_box", false]], "norse.torch.functional.test.test_lif_ex": [[68, "module-norse.torch.functional.test.test_lif_ex", false]], "norse.torch.functional.test.test_lif_mc": [[69, "module-norse.torch.functional.test.test_lif_mc", false]], "norse.torch.functional.test.test_lif_mc_refrac": [[70, "module-norse.torch.functional.test.test_lif_mc_refrac", false]], "norse.torch.functional.test.test_lif_refrac": [[71, "module-norse.torch.functional.test.test_lif_refrac", false]], "norse.torch.functional.test.test_lift": [[72, "module-norse.torch.functional.test.test_lift", false]], "norse.torch.functional.test.test_logical": [[73, "module-norse.torch.functional.test.test_logical", false]], "norse.torch.functional.test.test_lsnn": [[74, "module-norse.torch.functional.test.test_lsnn", false]], "norse.torch.functional.test.test_receptive_field": [[75, "module-norse.torch.functional.test.test_receptive_field", false]], "norse.torch.functional.test.test_regularization": [[76, "module-norse.torch.functional.test.test_regularization", false]], "norse.torch.functional.test.test_spikes_to_times_decoder": [[77, "module-norse.torch.functional.test.test_spikes_to_times_decoder", false]], "norse.torch.functional.test.test_stdp": [[78, "module-norse.torch.functional.test.test_stdp", false]], "norse.torch.functional.test.test_stdp_sensor": [[79, "module-norse.torch.functional.test.test_stdp_sensor", false]], "norse.torch.functional.test.test_superspike": [[80, "module-norse.torch.functional.test.test_superspike", false]], "norse.torch.functional.test.test_threshold": [[81, "module-norse.torch.functional.test.test_threshold", false]], "norse.torch.functional.test.test_tsodyks_makram": [[82, "module-norse.torch.functional.test.test_tsodyks_makram", false]], "norse.torch.functional.threshold": [[83, "module-norse.torch.functional.threshold", false]], "norse.torch.functional.tsodyks_makram": [[84, "module-norse.torch.functional.tsodyks_makram", false]], "norse.torch.models": [[85, "module-norse.torch.models", false]], "norse.torch.models.conv": [[86, "module-norse.torch.models.conv", false]], "norse.torch.models.mobilenet": [[87, "module-norse.torch.models.mobilenet", false]], "norse.torch.models.test": [[88, "module-norse.torch.models.test", false]], "norse.torch.models.test.test_conv": [[89, "module-norse.torch.models.test.test_conv", false]], "norse.torch.models.test.test_mobilenet": [[90, "module-norse.torch.models.test.test_mobilenet", false]], "norse.torch.models.test.test_vgg": [[91, "module-norse.torch.models.test.test_vgg", false]], "norse.torch.models.vgg": [[92, "module-norse.torch.models.vgg", false]], "norse.torch.module": [[93, "module-norse.torch.module", false], [267, "module-norse.torch.module", false]], "norse.torch.module.coba_lif": [[94, "module-norse.torch.module.coba_lif", false], [267, "module-norse.torch.module.coba_lif", false]], "norse.torch.module.conv": [[95, "module-norse.torch.module.conv", false], [267, "module-norse.torch.module.conv", false]], "norse.torch.module.encode": [[96, "module-norse.torch.module.encode", false], [267, "module-norse.torch.module.encode", false]], "norse.torch.module.exp_filter": [[97, "module-norse.torch.module.exp_filter", false]], "norse.torch.module.iaf": [[98, "module-norse.torch.module.iaf", false], [267, "module-norse.torch.module.iaf", false]], "norse.torch.module.izhikevich": [[99, "module-norse.torch.module.izhikevich", false], [267, "module-norse.torch.module.izhikevich", false]], "norse.torch.module.leaky_integrator": [[100, "module-norse.torch.module.leaky_integrator", false], [267, "module-norse.torch.module.leaky_integrator", false]], "norse.torch.module.leaky_integrator_box": [[101, "module-norse.torch.module.leaky_integrator_box", false]], "norse.torch.module.lif": [[102, "module-norse.torch.module.lif", false], [267, "module-norse.torch.module.lif", false]], "norse.torch.module.lif_adex": [[103, "module-norse.torch.module.lif_adex", false], [267, "module-norse.torch.module.lif_adex", false]], "norse.torch.module.lif_adex_refrac": [[104, "module-norse.torch.module.lif_adex_refrac", false]], "norse.torch.module.lif_box": [[105, "module-norse.torch.module.lif_box", false], [267, "module-norse.torch.module.lif_box", false]], "norse.torch.module.lif_correlation": [[106, "module-norse.torch.module.lif_correlation", false]], "norse.torch.module.lif_ex": [[107, "module-norse.torch.module.lif_ex", false], [267, "module-norse.torch.module.lif_ex", false]], "norse.torch.module.lif_mc": [[108, "module-norse.torch.module.lif_mc", false], [267, "module-norse.torch.module.lif_mc", false]], "norse.torch.module.lif_mc_refrac": [[109, "module-norse.torch.module.lif_mc_refrac", false], [267, "module-norse.torch.module.lif_mc_refrac", false]], "norse.torch.module.lif_refrac": [[110, "module-norse.torch.module.lif_refrac", false], [267, "module-norse.torch.module.lif_refrac", false]], "norse.torch.module.lift": [[111, "module-norse.torch.module.lift", false]], "norse.torch.module.lsnn": [[112, "module-norse.torch.module.lsnn", false], [267, "module-norse.torch.module.lsnn", false]], "norse.torch.module.receptive_field": [[113, "module-norse.torch.module.receptive_field", false], [267, "module-norse.torch.module.receptive_field", false]], "norse.torch.module.regularization": [[114, "module-norse.torch.module.regularization", false]], "norse.torch.module.sequential": [[115, "module-norse.torch.module.sequential", false]], "norse.torch.module.snn": [[116, "module-norse.torch.module.snn", false]], "norse.torch.module.spikes_to_times_decoder": [[117, "module-norse.torch.module.spikes_to_times_decoder", false]], "norse.torch.module.test": [[118, "module-norse.torch.module.test", false]], "norse.torch.module.test.test_coba": [[119, "module-norse.torch.module.test.test_coba", false]], "norse.torch.module.test.test_conv": [[120, "module-norse.torch.module.test.test_conv", false]], "norse.torch.module.test.test_encode": [[121, "module-norse.torch.module.test.test_encode", false]], "norse.torch.module.test.test_exp_filter": [[122, "module-norse.torch.module.test.test_exp_filter", false]], "norse.torch.module.test.test_iaf": [[123, "module-norse.torch.module.test.test_iaf", false]], "norse.torch.module.test.test_izhikevich": [[124, "module-norse.torch.module.test.test_izhikevich", false]], "norse.torch.module.test.test_leaky_integrator": [[125, "module-norse.torch.module.test.test_leaky_integrator", false]], "norse.torch.module.test.test_leaky_integrator_box": [[126, "module-norse.torch.module.test.test_leaky_integrator_box", false]], "norse.torch.module.test.test_lif": [[127, "module-norse.torch.module.test.test_lif", false]], "norse.torch.module.test.test_lif_adex": [[128, "module-norse.torch.module.test.test_lif_adex", false]], "norse.torch.module.test.test_lif_adex_refrac": [[129, "module-norse.torch.module.test.test_lif_adex_refrac", false]], "norse.torch.module.test.test_lif_box": [[130, "module-norse.torch.module.test.test_lif_box", false]], "norse.torch.module.test.test_lif_correlation": [[131, "module-norse.torch.module.test.test_lif_correlation", false]], "norse.torch.module.test.test_lif_ex": [[132, "module-norse.torch.module.test.test_lif_ex", false]], "norse.torch.module.test.test_lif_mc": [[133, "module-norse.torch.module.test.test_lif_mc", false]], "norse.torch.module.test.test_lif_mc_refrac": [[134, "module-norse.torch.module.test.test_lif_mc_refrac", false]], "norse.torch.module.test.test_lif_refrac": [[135, "module-norse.torch.module.test.test_lif_refrac", false]], "norse.torch.module.test.test_lift": [[136, "module-norse.torch.module.test.test_lift", false]], "norse.torch.module.test.test_lsnn": [[137, "module-norse.torch.module.test.test_lsnn", false]], "norse.torch.module.test.test_receptive_field": [[138, "module-norse.torch.module.test.test_receptive_field", false]], "norse.torch.module.test.test_regularization": [[139, "module-norse.torch.module.test.test_regularization", false]], "norse.torch.module.test.test_sequential": [[140, "module-norse.torch.module.test.test_sequential", false]], "norse.torch.module.test.test_snn": [[141, "module-norse.torch.module.test.test_snn", false]], "norse.torch.module.test.test_spikes_to_times_decoder": [[142, "module-norse.torch.module.test.test_spikes_to_times_decoder", false]], "norse.torch.module.test.test_training": [[143, "module-norse.torch.module.test.test_training", false]], "norse.torch.utils": [[144, "module-norse.torch.utils", false]], "norse.torch.utils.clone": [[145, "module-norse.torch.utils.clone", false]], "norse.torch.utils.export_nir": [[146, "module-norse.torch.utils.export_nir", false]], "norse.torch.utils.import_nir": [[147, "module-norse.torch.utils.import_nir", false]], "norse.torch.utils.plot": [[148, "module-norse.torch.utils.plot", false]], "norse.torch.utils.plot.plot": [[149, "module-norse.torch.utils.plot.plot", false]], "norse.torch.utils.pytree": [[150, "module-norse.torch.utils.pytree", false]], "norse.torch.utils.state": [[151, "module-norse.torch.utils.state", false]], "norse.torch.utils.tensorboard": [[152, "module-norse.torch.utils.tensorboard", false]], "norse.torch.utils.tensorboard.tensorboard": [[153, "module-norse.torch.utils.tensorboard.tensorboard", false]], "norse.torch.utils.test": [[154, "module-norse.torch.utils.test", false]], "norse.torch.utils.test.test_nir_export": [[155, "module-norse.torch.utils.test.test_nir_export", false]], "norse.torch.utils.test.test_nir_import": [[156, "module-norse.torch.utils.test.test_nir_import", false]], "norse.torch.utils.test.test_tensorboard": [[157, "module-norse.torch.utils.test.test_tensorboard", false]], "norse.utils": [[158, "module-norse.utils", false]], "phasic_bursting (in module norse.torch.functional.izhikevich)": [[179, "norse.torch.functional.izhikevich.phasic_bursting", false]], "phasic_spiking (in module norse.torch.functional.izhikevich)": [[180, "norse.torch.functional.izhikevich.phasic_spiking", false]], "poissonencoder (class in norse.torch.module.encode)": [[219, "norse.torch.module.encode.PoissonEncoder", false]], "poissonencoderstep (class in norse.torch.module.encode)": [[220, "norse.torch.module.encode.PoissonEncoderStep", false]], "populationencoder (class in norse.torch.module.encode)": [[221, "norse.torch.module.encode.PopulationEncoder", false]], "posedge_detector() (in module norse.torch.functional.logical)": [[208, "norse.torch.functional.logical.posedge_detector", false]], "rebound_burst (in module norse.torch.functional.izhikevich)": [[181, "norse.torch.functional.izhikevich.rebound_burst", false]], "rebound_spike (in module norse.torch.functional.izhikevich)": [[182, "norse.torch.functional.izhikevich.rebound_spike", false]], "regularize_step() (in module norse.torch.functional.regularization)": [[213, "norse.torch.functional.regularization.regularize_step", false]], "resonator (in module norse.torch.functional.izhikevich)": [[183, "norse.torch.functional.izhikevich.resonator", false]], "signedpoissonencoder (class in norse.torch.module.encode)": [[222, "norse.torch.module.encode.SignedPoissonEncoder", false]], "spatial_receptive_field() (in module norse.torch.functional.receptive_field)": [[210, "norse.torch.functional.receptive_field.spatial_receptive_field", false]], "spatial_receptive_fields_with_derivatives() (in module norse.torch.functional.receptive_field)": [[211, "norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives", false]], "spatialreceptivefield2d (class in norse.torch.module.receptive_field)": [[264, "norse.torch.module.receptive_field.SpatialReceptiveField2d", false]], "spike_accumulator() (in module norse.torch.functional.regularization)": [[214, "norse.torch.functional.regularization.spike_accumulator", false]], "spike_frequency_adaptation (in module norse.torch.functional.izhikevich)": [[184, "norse.torch.functional.izhikevich.spike_frequency_adaptation", false]], "spike_latency (in module norse.torch.functional.izhikevich)": [[185, "norse.torch.functional.izhikevich.spike_latency", false]], "spikelatencyencoder (class in norse.torch.module.encode)": [[223, "norse.torch.module.encode.SpikeLatencyEncoder", false]], "spikelatencylifencoder (class in norse.torch.module.encode)": [[224, "norse.torch.module.encode.SpikeLatencyLIFEncoder", false]], "subthreshold_oscillation (in module norse.torch.functional.izhikevich)": [[186, "norse.torch.functional.izhikevich.subthreshold_oscillation", false]], "temporal_scale_distribution() (in module norse.torch.functional.receptive_field)": [[212, "norse.torch.functional.receptive_field.temporal_scale_distribution", false]], "temporalreceptivefield (class in norse.torch.module.receptive_field)": [[265, "norse.torch.module.receptive_field.TemporalReceptiveField", false]], "tonic_bursting (in module norse.torch.functional.izhikevich)": [[187, "norse.torch.functional.izhikevich.tonic_bursting", false]], "tonic_spiking (in module norse.torch.functional.izhikevich)": [[188, "norse.torch.functional.izhikevich.tonic_spiking", false]], "voltage_accumulator() (in module norse.torch.functional.regularization)": [[215, "norse.torch.functional.regularization.voltage_accumulator", false]]}, "objects": {"": [[0, 0, 0, "-", "norse"]], "norse": [[1, 0, 0, "-", "benchmark"], [6, 0, 0, "-", "dataset"], [9, 0, 0, "-", "task"], [13, 0, 0, "-", "torch"], [158, 0, 0, "-", "utils"]], "norse.benchmark": [[2, 0, 0, "-", "benchmark"], [3, 0, 0, "-", "main"], [4, 0, 0, "-", "norse_lif"], [5, 0, 0, "-", "plot"]], "norse.dataset": [[7, 0, 0, "-", "memory"], [8, 0, 0, "-", "spiking_heidelberg"]], "norse.task": [[10, 0, 0, "-", "correlation_experiment"], [11, 0, 0, "-", "mnist"], [12, 0, 0, "-", "mnist_pl"]], "norse.torch": [[268, 0, 0, "module-7", "functional"], [85, 0, 0, "-", "models"], [267, 0, 0, "-", "module"], [144, 0, 0, "-", "utils"]], "norse.torch.functional": [[15, 0, 0, "-", "adjoint"], [268, 0, 0, "-", "coba_lif"], [26, 0, 0, "-", "correlation_sensor"], [27, 0, 0, "-", "decode"], [28, 0, 0, "-", "encode"], [29, 0, 0, "-", "filter"], [163, 0, 0, "-", "heaviside"], [268, 0, 0, "-", "iaf"], [268, 0, 0, "-", "izhikevich"], [268, 0, 0, "-", "leaky_integrator"], [34, 0, 0, "-", "leaky_integrator_box"], [35, 0, 0, "-", "lif"], [268, 0, 0, "-", "lif_adex"], [37, 0, 0, "-", "lif_adex_refrac"], [268, 0, 0, "-", "lif_box"], [39, 0, 0, "-", "lif_correlation"], [268, 0, 0, "-", "lif_ex"], [41, 0, 0, "-", "lif_mc"], [42, 0, 0, "-", "lif_mc_refrac"], [43, 0, 0, "-", "lif_refrac"], [203, 0, 0, "-", "lift"], [268, 0, 0, "-", "logical"], [46, 0, 0, "-", "lsnn"], [268, 0, 0, "-", "receptive_field"], [268, 0, 0, "-", "regularization"], [49, 0, 0, "-", "reset"], [50, 0, 0, "-", "spikes_to_times_decoder"], [51, 0, 0, "-", "stdp"], [52, 0, 0, "-", "stdp_sensor"], [53, 0, 0, "-", "superspike"], [54, 0, 0, "-", "test"], [83, 0, 0, "-", "threshold"], [84, 0, 0, "-", "tsodyks_makram"]], "norse.torch.functional.adjoint": [[16, 0, 0, "-", "lif_adjoint"], [17, 0, 0, "-", "lif_mc_adjoint"], [18, 0, 0, "-", "lif_mc_refrac_adjoint"], [19, 0, 0, "-", "lif_refrac_adjoint"], [20, 0, 0, "-", "lsnn_adjoint"], [21, 0, 0, "-", "test"]], "norse.torch.functional.adjoint.test": [[22, 0, 0, "-", "test_lif_adjoint"], [23, 0, 0, "-", "test_lif_refrac_adjoint"], [24, 0, 0, "-", "test_lsnn_adjoint"]], "norse.torch.functional.coba_lif": [[160, 1, 1, "", "CobaLIFFeedForwardState"], [161, 1, 1, "", "CobaLIFParameters"], [162, 3, 1, "", "coba_lif_feed_forward_step"]], "norse.torch.functional.coba_lif.CobaLIFFeedForwardState": [[160, 2, 1, "", "__init__"]], "norse.torch.functional.coba_lif.CobaLIFParameters": [[161, 2, 1, "", "__init__"]], "norse.torch.functional.iaf": [[164, 1, 1, "", "IAFFeedForwardState"], [165, 1, 1, "", "IAFParameters"], [166, 3, 1, "", "iaf_feed_forward_step"]], "norse.torch.functional.iaf.IAFFeedForwardState": [[164, 2, 1, "", "__init__"]], "norse.torch.functional.iaf.IAFParameters": [[165, 2, 1, "", "__init__"]], "norse.torch.functional.izhikevich": [[167, 1, 1, "", "IzhikevichParameters"], [168, 1, 1, "", "IzhikevichSpikingBehavior"], [169, 4, 1, "", "accomodation"], [170, 4, 1, "", "bistability"], [171, 4, 1, "", "class_1_exc"], [172, 4, 1, "", "class_2_exc"], [173, 4, 1, "", "dap"], [174, 4, 1, "", "inhibition_induced_bursting"], [175, 4, 1, "", "inhibition_induced_spiking"], [176, 4, 1, "", "integrator"], [177, 3, 1, "", "izhikevich_feed_forward_step"], [178, 4, 1, "", "mixed_mode"], [179, 4, 1, "", "phasic_bursting"], [180, 4, 1, "", "phasic_spiking"], [181, 4, 1, "", "rebound_burst"], [182, 4, 1, "", "rebound_spike"], [183, 4, 1, "", "resonator"], [184, 4, 1, "", "spike_frequency_adaptation"], [185, 4, 1, "", "spike_latency"], [186, 4, 1, "", "subthreshold_oscillation"], [187, 4, 1, "", "tonic_bursting"], [188, 4, 1, "", "tonic_spiking"]], "norse.torch.functional.izhikevich.IzhikevichParameters": [[167, 2, 1, "", "__init__"]], "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior": [[168, 2, 1, "", "__init__"]], "norse.torch.functional.leaky_integrator": [[189, 1, 1, "", "LIParameters"], [190, 1, 1, "", "LIState"], [191, 3, 1, "", "li_feed_forward_step"]], "norse.torch.functional.leaky_integrator.LIParameters": [[189, 2, 1, "", "__init__"]], "norse.torch.functional.leaky_integrator.LIState": [[190, 2, 1, "", "__init__"]], "norse.torch.functional.lif_adex": [[192, 1, 1, "", "LIFAdExFeedForwardState"], [193, 1, 1, "", "LIFAdExParameters"], [194, 3, 1, "", "lif_adex_current_encoder"], [195, 3, 1, "", "lif_adex_feed_forward_step"]], "norse.torch.functional.lif_adex.LIFAdExFeedForwardState": [[192, 2, 1, "", "__init__"]], "norse.torch.functional.lif_adex.LIFAdExParameters": [[193, 2, 1, "", "__init__"]], "norse.torch.functional.lif_box": [[196, 1, 1, "", "LIFBoxFeedForwardState"], [197, 1, 1, "", "LIFBoxParameters"], [198, 3, 1, "", "lif_box_feed_forward_step"]], "norse.torch.functional.lif_box.LIFBoxFeedForwardState": [[196, 2, 1, "", "__init__"]], "norse.torch.functional.lif_box.LIFBoxParameters": [[197, 2, 1, "", "__init__"]], "norse.torch.functional.lif_ex": [[199, 1, 1, "", "LIFExFeedForwardState"], [200, 1, 1, "", "LIFExParameters"], [201, 3, 1, "", "lif_ex_current_encoder"], [202, 3, 1, "", "lif_ex_feed_forward_step"]], "norse.torch.functional.lif_ex.LIFExFeedForwardState": [[199, 2, 1, "", "__init__"]], "norse.torch.functional.lif_ex.LIFExParameters": [[200, 2, 1, "", "__init__"]], "norse.torch.functional.logical": [[204, 3, 1, "", "logical_and"], [205, 3, 1, "", "logical_or"], [206, 3, 1, "", "logical_xor"], [207, 3, 1, "", "muller_c"], [208, 3, 1, "", "posedge_detector"]], "norse.torch.functional.receptive_field": [[209, 3, 1, "", "gaussian_kernel"], [210, 3, 1, "", "spatial_receptive_field"], [211, 3, 1, "", "spatial_receptive_fields_with_derivatives"], [212, 3, 1, "", "temporal_scale_distribution"]], "norse.torch.functional.regularization": [[213, 3, 1, "", "regularize_step"], [214, 3, 1, "", "spike_accumulator"], [215, 3, 1, "", "voltage_accumulator"]], "norse.torch.functional.test": [[55, 0, 0, "-", "test_coba_lif"], [56, 0, 0, "-", "test_decode"], [57, 0, 0, "-", "test_encode"], [58, 0, 0, "-", "test_exp_filter"], [59, 0, 0, "-", "test_heaviside"], [60, 0, 0, "-", "test_iaf"], [61, 0, 0, "-", "test_izhikevich"], [62, 0, 0, "-", "test_leaky_integrator"], [63, 0, 0, "-", "test_leaky_integrator_box"], [64, 0, 0, "-", "test_lif"], [65, 0, 0, "-", "test_lif_adex"], [66, 0, 0, "-", "test_lif_adex_refrac"], [67, 0, 0, "-", "test_lif_box"], [68, 0, 0, "-", "test_lif_ex"], [69, 0, 0, "-", "test_lif_mc"], [70, 0, 0, "-", "test_lif_mc_refrac"], [71, 0, 0, "-", "test_lif_refrac"], [72, 0, 0, "-", "test_lift"], [73, 0, 0, "-", "test_logical"], [74, 0, 0, "-", "test_lsnn"], [75, 0, 0, "-", "test_receptive_field"], [76, 0, 0, "-", "test_regularization"], [77, 0, 0, "-", "test_spikes_to_times_decoder"], [78, 0, 0, "-", "test_stdp"], [79, 0, 0, "-", "test_stdp_sensor"], [80, 0, 0, "-", "test_superspike"], [81, 0, 0, "-", "test_threshold"], [82, 0, 0, "-", "test_tsodyks_makram"]], "norse.torch.models": [[86, 0, 0, "-", "conv"], [87, 0, 0, "-", "mobilenet"], [88, 0, 0, "-", "test"], [92, 0, 0, "-", "vgg"]], "norse.torch.models.test": [[89, 0, 0, "-", "test_conv"], [90, 0, 0, "-", "test_mobilenet"], [91, 0, 0, "-", "test_vgg"]], "norse.torch.module": [[267, 0, 0, "-", "coba_lif"], [267, 0, 0, "-", "conv"], [267, 0, 0, "-", "encode"], [97, 0, 0, "-", "exp_filter"], [267, 0, 0, "-", "iaf"], [267, 0, 0, "-", "izhikevich"], [267, 0, 0, "-", "leaky_integrator"], [101, 0, 0, "-", "leaky_integrator_box"], [267, 0, 0, "-", "lif"], [267, 0, 0, "-", "lif_adex"], [104, 0, 0, "-", "lif_adex_refrac"], [267, 0, 0, "-", "lif_box"], [106, 0, 0, "-", "lif_correlation"], [267, 0, 0, "-", "lif_ex"], [267, 0, 0, "-", "lif_mc"], [267, 0, 0, "-", "lif_mc_refrac"], [267, 0, 0, "-", "lif_refrac"], [111, 0, 0, "-", "lift"], [267, 0, 0, "-", "lsnn"], [267, 0, 0, "-", "receptive_field"], [114, 0, 0, "-", "regularization"], [115, 0, 0, "-", "sequential"], [116, 0, 0, "-", "snn"], [117, 0, 0, "-", "spikes_to_times_decoder"], [118, 0, 0, "-", "test"]], "norse.torch.module.coba_lif": [[216, 1, 1, "", "CobaLIFCell"]], "norse.torch.module.coba_lif.CobaLIFCell": [[216, 2, 1, "", "__init__"]], "norse.torch.module.conv": [[217, 1, 1, "", "LConv2d"]], "norse.torch.module.conv.LConv2d": [[217, 2, 1, "", "__init__"]], "norse.torch.module.encode": [[218, 1, 1, "", "ConstantCurrentLIFEncoder"], [219, 1, 1, "", "PoissonEncoder"], [220, 1, 1, "", "PoissonEncoderStep"], [221, 1, 1, "", "PopulationEncoder"], [222, 1, 1, "", "SignedPoissonEncoder"], [223, 1, 1, "", "SpikeLatencyEncoder"], [224, 1, 1, "", "SpikeLatencyLIFEncoder"]], "norse.torch.module.encode.ConstantCurrentLIFEncoder": [[218, 2, 1, "", "__init__"]], "norse.torch.module.encode.PoissonEncoder": [[219, 2, 1, "", "__init__"]], "norse.torch.module.encode.PoissonEncoderStep": [[220, 2, 1, "", "__init__"]], "norse.torch.module.encode.PopulationEncoder": [[221, 2, 1, "", "__init__"]], "norse.torch.module.encode.SignedPoissonEncoder": [[222, 2, 1, "", "__init__"]], "norse.torch.module.encode.SpikeLatencyEncoder": [[223, 2, 1, "", "__init__"]], "norse.torch.module.encode.SpikeLatencyLIFEncoder": [[224, 2, 1, "", "__init__"]], "norse.torch.module.iaf": [[225, 1, 1, "", "IAFCell"], [226, 1, 1, "", "IAFFeedForwardState"], [227, 1, 1, "", "IAFParameters"]], "norse.torch.module.iaf.IAFCell": [[225, 2, 1, "", "__init__"]], "norse.torch.module.iaf.IAFFeedForwardState": [[226, 2, 1, "", "__init__"]], "norse.torch.module.iaf.IAFParameters": [[227, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich": [[228, 1, 1, "", "Izhikevich"], [229, 1, 1, "", "IzhikevichCell"], [230, 1, 1, "", "IzhikevichRecurrent"], [231, 1, 1, "", "IzhikevichRecurrentCell"], [232, 1, 1, "", "IzhikevichSpikingBehavior"], [233, 1, 1, "", "IzhikevichState"]], "norse.torch.module.izhikevich.Izhikevich": [[228, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichCell": [[229, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichRecurrent": [[230, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichRecurrentCell": [[231, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichSpikingBehavior": [[232, 2, 1, "", "__init__"]], "norse.torch.module.izhikevich.IzhikevichState": [[233, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator": [[234, 1, 1, "", "LI"], [235, 1, 1, "", "LICell"], [236, 1, 1, "", "LILinearCell"], [237, 1, 1, "", "LIParameters"], [238, 1, 1, "", "LIState"]], "norse.torch.module.leaky_integrator.LI": [[234, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LICell": [[235, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LILinearCell": [[236, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LIParameters": [[237, 2, 1, "", "__init__"]], "norse.torch.module.leaky_integrator.LIState": [[238, 2, 1, "", "__init__"]], "norse.torch.module.lif": [[239, 1, 1, "", "LIF"], [240, 1, 1, "", "LIFCell"], [241, 1, 1, "", "LIFParameters"], [242, 1, 1, "", "LIFRecurrent"], [243, 1, 1, "", "LIFRecurrentCell"], [244, 1, 1, "", "LIFState"]], "norse.torch.module.lif.LIF": [[239, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFCell": [[240, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFParameters": [[241, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFRecurrent": [[242, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFRecurrentCell": [[243, 2, 1, "", "__init__"]], "norse.torch.module.lif.LIFState": [[244, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex": [[245, 1, 1, "", "LIFAdEx"], [246, 1, 1, "", "LIFAdExCell"], [247, 1, 1, "", "LIFAdExRecurrent"], [248, 1, 1, "", "LIFAdExRecurrentCell"]], "norse.torch.module.lif_adex.LIFAdEx": [[245, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex.LIFAdExCell": [[246, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex.LIFAdExRecurrent": [[247, 2, 1, "", "__init__"]], "norse.torch.module.lif_adex.LIFAdExRecurrentCell": [[248, 2, 1, "", "__init__"]], "norse.torch.module.lif_box": [[249, 1, 1, "", "LIFBoxCell"], [250, 1, 1, "", "LIFBoxFeedForwardState"], [251, 1, 1, "", "LIFBoxParameters"]], "norse.torch.module.lif_box.LIFBoxCell": [[249, 2, 1, "", "__init__"]], "norse.torch.module.lif_box.LIFBoxFeedForwardState": [[250, 2, 1, "", "__init__"]], "norse.torch.module.lif_box.LIFBoxParameters": [[251, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex": [[252, 1, 1, "", "LIFEx"], [253, 1, 1, "", "LIFExCell"], [254, 1, 1, "", "LIFExRecurrent"], [255, 1, 1, "", "LIFExRecurrentCell"]], "norse.torch.module.lif_ex.LIFEx": [[252, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex.LIFExCell": [[253, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex.LIFExRecurrent": [[254, 2, 1, "", "__init__"]], "norse.torch.module.lif_ex.LIFExRecurrentCell": [[255, 2, 1, "", "__init__"]], "norse.torch.module.lif_mc": [[256, 1, 1, "", "LIFMCRecurrentCell"]], "norse.torch.module.lif_mc.LIFMCRecurrentCell": [[256, 2, 1, "", "__init__"]], "norse.torch.module.lif_mc_refrac": [[257, 1, 1, "", "LIFMCRefracRecurrentCell"]], "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell": [[257, 2, 1, "", "__init__"]], "norse.torch.module.lif_refrac": [[258, 1, 1, "", "LIFRefracCell"], [259, 1, 1, "", "LIFRefracRecurrentCell"]], "norse.torch.module.lif_refrac.LIFRefracCell": [[258, 2, 1, "", "__init__"]], "norse.torch.module.lif_refrac.LIFRefracRecurrentCell": [[259, 2, 1, "", "__init__"]], "norse.torch.module.lsnn": [[260, 1, 1, "", "LSNN"], [261, 1, 1, "", "LSNNCell"], [262, 1, 1, "", "LSNNRecurrent"], [263, 1, 1, "", "LSNNRecurrentCell"]], "norse.torch.module.lsnn.LSNN": [[260, 2, 1, "", "__init__"]], "norse.torch.module.lsnn.LSNNCell": [[261, 2, 1, "", "__init__"]], "norse.torch.module.lsnn.LSNNRecurrent": [[262, 2, 1, "", "__init__"]], "norse.torch.module.lsnn.LSNNRecurrentCell": [[263, 2, 1, "", "__init__"]], "norse.torch.module.receptive_field": [[264, 1, 1, "", "SpatialReceptiveField2d"], [265, 1, 1, "", "TemporalReceptiveField"]], "norse.torch.module.receptive_field.SpatialReceptiveField2d": [[264, 2, 1, "", "__init__"]], "norse.torch.module.receptive_field.TemporalReceptiveField": [[265, 2, 1, "", "__init__"]], "norse.torch.module.test": [[119, 0, 0, "-", "test_coba"], [120, 0, 0, "-", "test_conv"], [121, 0, 0, "-", "test_encode"], [122, 0, 0, "-", "test_exp_filter"], [123, 0, 0, "-", "test_iaf"], [124, 0, 0, "-", "test_izhikevich"], [125, 0, 0, "-", "test_leaky_integrator"], [126, 0, 0, "-", "test_leaky_integrator_box"], [127, 0, 0, "-", "test_lif"], [128, 0, 0, "-", "test_lif_adex"], [129, 0, 0, "-", "test_lif_adex_refrac"], [130, 0, 0, "-", "test_lif_box"], [131, 0, 0, "-", "test_lif_correlation"], [132, 0, 0, "-", "test_lif_ex"], [133, 0, 0, "-", "test_lif_mc"], [134, 0, 0, "-", "test_lif_mc_refrac"], [135, 0, 0, "-", "test_lif_refrac"], [136, 0, 0, "-", "test_lift"], [137, 0, 0, "-", "test_lsnn"], [138, 0, 0, "-", "test_receptive_field"], [139, 0, 0, "-", "test_regularization"], [140, 0, 0, "-", "test_sequential"], [141, 0, 0, "-", "test_snn"], [142, 0, 0, "-", "test_spikes_to_times_decoder"], [143, 0, 0, "-", "test_training"]], "norse.torch.utils": [[145, 0, 0, "-", "clone"], [146, 0, 0, "-", "export_nir"], [147, 0, 0, "-", "import_nir"], [148, 0, 0, "-", "plot"], [150, 0, 0, "-", "pytree"], [151, 0, 0, "-", "state"], [152, 0, 0, "-", "tensorboard"], [154, 0, 0, "-", "test"]], "norse.torch.utils.plot": [[149, 0, 0, "-", "plot"]], "norse.torch.utils.tensorboard": [[153, 0, 0, "-", "tensorboard"]], "norse.torch.utils.test": [[155, 0, 0, "-", "test_nir_export"], [156, 0, 0, "-", "test_nir_import"], [157, 0, 0, "-", "test_tensorboard"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "terms": {"": [29, 48, 114, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 209, 210, 213, 214, 215, 223, 232, 266, 268, 269, 270, 273, 274, 275, 277], "0": [8, 30, 35, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 200, 201, 202, 208, 210, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 273, 274, 275, 277], "00": 273, "000": 276, "0000": [218, 221, 273], "0000e": 273, "0003": 273, "001": [162, 166, 177, 191, 194, 195, 198, 201, 202, 216, 218, 219, 220, 222, 224, 225, 228, 230, 231, 236, 239, 240, 242, 245, 247, 249, 252, 254, 260, 261, 262, 265, 273, 274], "0012": [260, 261, 262, 263], "002": 273, "0022": 273, "0023": 273, "0059": 273, "0065": 273, "0067": 273, "0079": 273, "0081": 273, "0088": 273, "01": [184, 273], "0114": 273, "0122": 273, "0125": 273, "0127": 273, "0143": 273, "015": 212, "0159": 273, "0191": 273, "02": [169, 171, 175, 176, 178, 179, 180, 185, 187, 188, 273], "0200": [193, 194, 195, 245, 246, 247, 248], "0210": 273, "0242": 273, "026": 174, "0281": 273, "0283": 273, "03": [181, 182, 273], "0302": 273, "0307": 273, "0314": 273, "0343": 273, "0366": 273, "0369": 273, "0370": 273, "0390": 273, "04": [167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 273], "0404": 273, "0416": 273, "0418": 273, "0420": 273, "0429": 273, "0436": 273, "0445": 273, "0465": 273, "0473": 273, "0496": 275, "04v\u00b2": [229, 231], "05": [179, 186], "0539": 273, "0552": 273, "0559": 273, "0613": 212, "0621": 273, "0659": 273, "06725": 269, "0681": 273, "07": 272, "0703": 273, "0709": 273, "0714": 273, "0732": 273, "0733": 273, "07407": 8, "0786": 273, "0797": 273, "0801": 273, "0816": 273, "0835": 273, "0844": 273, "0849": 273, "0861": 273, "0878": 273, "0882": 273, "0932": 273, "0938": 273, "0945": 273, "0950": 273, "0951": 273, "09574": [260, 262], "0968": 273, "0x7f1b67676510": 274, "0x7fe665b8a8e0": 273, "0x7fe665b8efd0": 273, "1": [9, 30, 33, 34, 35, 46, 100, 163, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 183, 193, 194, 195, 197, 198, 200, 201, 202, 208, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 234, 235, 236, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277], "10": [161, 162, 210, 212, 216, 228, 229, 230, 234, 239, 242, 245, 247, 248, 252, 253, 254, 255, 259, 262, 266, 270, 271, 273, 274, 276, 277], "100": [161, 162, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 200, 201, 202, 216, 218, 219, 222, 224, 225, 227, 234, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 270, 271, 273, 274], "1000": [220, 273, 274], "1007": 212, "101": 273, "1016": 273, "102": 273, "1020": 273, "103": 273, "1037": 273, "105": 273, "106": 273, "107": 273, "1071": 273, "108": [171, 176, 273], "1081": 273, "1082": 273, "1084": 273, "1089": 273, "109": 273, "1097": 273, "110": 273, "1108": 273, "111": 273, "113": 273, "114": 273, "115": 273, "1170": 273, "1173": 273, "118": 273, "1185": 273, "119": 273, "120": 273, "1200": [183, 186], "1205": 273, "122": 273, "1224e": 273, "123": 273, "1230": 273, "124": 273, "126": 273, "1273": 273, "128": 273, "1287": 273, "130": 273, "1307": 273, "131": 273, "132": 273, "134": 273, "1384": 273, "14": [173, 178, 184, 185, 187, 188], "140": [167, 169, 170, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 229, 231, 273], "142": 273, "1446": 273, "1475e": 273, "15": 170, "150": 274, "1504e": 273, "1508": 273, "1515": 273, "1543": 273, "1555": 273, "1591": 273, "1593": 273, "16": [169, 172, 179, 180, 181, 182, 183, 186, 216, 218, 229, 231, 246, 248, 253, 255, 258, 259, 270], "1669": 273, "1681": 273, "1712": 273, "1723": 273, "1803": [260, 262], "1806": 273, "1811e": 273, "1878": 273, "1910": 8, "2": [9, 172, 173, 174, 178, 184, 185, 187, 188, 193, 194, 195, 210, 212, 218, 228, 230, 231, 234, 239, 240, 242, 243, 245, 246, 247, 248, 252, 254, 260, 262, 264, 265, 270, 273, 274, 275, 276, 277], "20": [161, 162, 216, 246, 248, 253, 255, 258, 259, 266, 271, 273, 274], "200": [179, 181, 182, 189, 191, 193, 194, 195, 200, 201, 202, 218, 224, 234, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 273, 274], "2000": [161, 162, 216, 218], "2001": 223, "2016": [212, 273], "2018": 266, "2019": 8, "2020": [266, 269], "2021": [113, 266, 267], "2022": 269, "2023": [113, 267], "2033": 273, "2047e": 273, "2060": 273, "21": 173, "2117": 273, "2161": 273, "2168": 273, "2171": 273, "2181": [266, 269], "2183": 273, "2217": 273, "2220": 273, "2225": 273, "2278": 273, "2294": 273, "2299e": 273, "2300": 273, "2331": 273, "2362": 273, "2416": 273, "25": [179, 180, 181, 182], "250": [167, 170, 171, 172, 174, 175, 176, 178, 180, 183, 184, 185, 186, 187, 188], "2500": [161, 162, 216], "256": 273, "26": [170, 172, 183, 186], "2647": 273, "2660": 273, "2679": 273, "2699e": 273, "27": 273, "2754": 273, "2757": 273, "28": [266, 271, 273], "280": 272, "2809": 273, "2867": 273, "2872": 273, "2879": 273, "28x28": 266, "2958": 273, "2963": 273, "2d": [149, 209, 217], "2x2": 209, "3": [221, 272, 273, 274, 277], "30": [167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 229, 231, 246, 258], "3023": 273, "3081": 273, "3085e": 273, "32": 273, "3251": 273, "3253": 273, "3267": 273, "3285": 273, "32x32": 276, "3311": 273, "3311e": 273, "3351": 273, "3395": 273, "3426": 273, "3470": 273, "3540": 273, "3563": 273, "3578": 273, "3723": 273, "3725": 273, "3732": 273, "3752": 273, "3769": 273, "3800": 218, "3829": 273, "3868": 273, "3883": 273, "390900948": [266, 269], "3929": 273, "3962": 273, "3966": 273, "3d": 149, "4": [8, 169, 171, 176, 178, 182, 193, 194, 195, 218, 231, 240, 242, 243, 245, 246, 247, 248, 254, 265, 273, 274, 275], "40": [274, 277], "4000": 218, "4050e": 273, "4071": 273, "4072": 273, "4103": 273, "4107": 273, "41421": [212, 265], "4154": 273, "4158": 273, "4183": 273, "4256": 273, "4283": 273, "4295": 273, "4297": 273, "4326": 273, "4332": 273, "4352": 273, "4375": 273, "44": 273, "4411": 273, "4420": 273, "4422025": 266, "4441": 273, "45": 174, "4543": 273, "4561": 273, "4563": 273, "4574e": 273, "4582": 273, "4590": 273, "4601": 273, "4615": 273, "4641": 273, "4654": 273, "4665e": 273, "4692e": 273, "4695": 273, "4731": 273, "4763": 273, "4768": 273, "4787": 273, "4794": 273, "4816": 273, "4838": 273, "4896": 273, "4926": 273, "4930e": 273, "4952": 273, "4962": 273, "4977": 273, "4979": 273, "4999e": 273, "5": [161, 162, 167, 169, 170, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 210, 216, 221, 228, 230, 231, 239, 240, 242, 243, 245, 247, 252, 254, 257, 258, 259, 260, 262, 264, 273, 274], "50": [187, 266], "500": 169, "5000": [193, 194, 195, 200, 201, 202, 245, 246, 247, 248, 252, 253, 254, 255, 266], "5025": 273, "5089": 273, "5121": 273, "5165": 273, "5169": 273, "5170": 273, "52": 181, "5249": 273, "5254": 273, "5279": 273, "5281": 266, "5285": 273, "5298": 273, "53": 273, "5310": 273, "5322": 273, "5333": 273, "5371": 273, "5386": 273, "5401": 273, "5420": 273, "5445": 273, "5450": 273, "5496": 273, "55": [169, 171, 176, 178, 179], "5509": 273, "5523": 273, "5536": 273, "5589": 273, "5625": 273, "5628": 273, "5655": 273, "5662e": 273, "5674": 273, "57": 273, "5708": 273, "5712": 273, "5724": 273, "5779": 273, "5810": 273, "5828": 273, "5847": 273, "5869": 273, "5879": 273, "5881": 273, "5914": 273, "5922": 273, "5937": 273, "5944": 273, "5968": 273, "5970": 273, "5989e": 273, "5v": [229, 231], "6": [171, 176, 180, 185, 188], "60": [161, 162, 170, 171, 173, 175, 176, 182, 183, 186, 216, 273, 274, 276], "6008": 273, "6023": 273, "6052": 273, "6053": 273, "6065": 221, "6068": 273, "6074e": 273, "6090": 273, "6092e": 273, "61": [170, 273], "6102": 273, "6106": 273, "6166": 273, "6176": 273, "6186": 273, "6199e": 273, "62": [183, 186, 273], "6236": 273, "6271": 273, "6281": 273, "63": [174, 175], "6322": 273, "6341e": 273, "6343e": 273, "6367": 273, "64": [172, 179, 180, 181, 182], "6400": 172, "6406": 273, "6444": 273, "65": [169, 172, 180, 184, 185, 188, 273], "6512": 273, "6523": 273, "6608": 273, "6617": 273, "6621": 273, "6644": 273, "6668": 273, "6845": 273, "6850": 273, "69": 273, "6913": 273, "7": [272, 273], "70": [161, 162, 173, 178, 184, 185, 187, 188, 216, 273, 276], "7032": 273, "7052": 273, "7102": 273, "7173": 273, "7182": 273, "7185": 273, "7264e": 273, "7279": 273, "7312e": 273, "74": 273, "7478": 273, "7498": 273, "75": 273, "7600": 218, "7616": 273, "7639": 273, "77": 273, "7738": 273, "7753": 273, "78": 273, "7826": 273, "785907": [266, 269], "7877": 273, "7976": 273, "7fgn359": 272, "8": [175, 184, 209, 210, 218, 264, 272, 274], "80": 273, "800": 266, "8000": [174, 175, 218, 260, 261, 262, 263], "8011e": 273, "8042": 273, "81": 273, "8174": 273, "8175": 273, "82": 273, "8241e": 273, "8471": 273, "8495": 273, "85": [273, 274], "8600": 170, "8613": 273, "8698": 273, "87": 273, "8721": 273, "8799": 273, "88": 273, "8800": 273, "8820": 273, "8825": 221, "8831e": 273, "8837": 273, "8868": 273, "8888": 272, "89": 273, "8977": 273, "9": [212, 264, 266, 270, 272, 273, 274], "90": [273, 277], "9056e": 273, "9058": 273, "91": 273, "9130": 273, "92": 273, "9216": 273, "94": 273, "945539": [266, 269], "95": 273, "9547": 273, "96": 273, "9618e": 273, "97": 273, "98": 273, "9805": 273, "9836e": 273, "99": [266, 273], "A": [8, 30, 33, 35, 38, 44, 46, 47, 100, 102, 105, 112, 148, 152, 163, 203, 209, 213, 214, 215, 221, 228, 230, 234, 239, 242, 245, 247, 252, 254, 260, 262, 265, 266, 267, 268, 270, 272, 273, 275], "And": [270, 272], "As": [266, 270, 273, 274], "At": [273, 277], "But": 274, "By": 274, "For": [113, 223, 266, 267, 269, 270, 272, 273, 277], "If": [212, 264, 265, 266, 271, 272, 273, 274, 275, 276, 277], "In": [11, 12, 33, 34, 35, 46, 48, 100, 101, 267, 268, 270, 272, 273, 274, 277], "It": [38, 48, 105, 195, 198, 202, 246, 249, 267, 268, 270, 271, 273, 276], "No": 274, "One": 274, "Or": 272, "The": [8, 33, 35, 46, 48, 100, 209, 210, 212, 213, 214, 215, 217, 218, 221, 228, 230, 234, 239, 242, 245, 247, 252, 254, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277], "These": [9, 113, 267, 276], "To": [266, 270, 271, 272, 274, 275, 277], "Will": [231, 242, 243, 247, 248, 254, 265], "With": [266, 273, 277], "_": [34, 44, 203, 214, 271, 273, 274], "__init__": [160, 161, 164, 165, 167, 168, 189, 190, 192, 193, 196, 197, 199, 200, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 270, 271, 273], "__version__": 274, "_outer_": 234, "a_": [194, 195, 246, 248], "ab": [8, 260, 262], "about": [266, 273, 275, 276, 277], "abov": [217, 231, 242, 243, 247, 248, 254, 270, 274, 275, 276, 277], "abseil": 276, "absolut": [258, 259], "academ": 269, "acceler": [266, 277], "access": [270, 272, 273, 274, 276], "accommod": 270, "accord": 212, "account": 273, "accumul": [213, 214, 215], "accuraci": [266, 273, 277], "achiev": [266, 270, 277], "across": [33, 100, 264, 267, 268], "action": 275, "activ": [15, 35, 44, 203, 221, 239, 240, 242, 243, 265, 266, 274, 275, 277], "activation_state_map": 265, "actual": [221, 275], "ad": [33, 100, 166, 217, 225, 267, 268, 270, 273, 274], "ada": [193, 194, 195, 246, 248], "adam": 273, "adapt": [46, 192, 193, 194, 195, 201, 202, 246, 248, 253, 255, 260, 261, 262, 277], "adaptation_curr": 193, "adaptation_spik": 193, "adaptive_exponential_integr": [194, 195, 246, 248], "add": [33, 34, 46, 100, 101, 267, 268, 272], "addit": [9, 217, 236, 264, 272, 273, 276], "addmmbackward0": 275, "address": 272, "adher": [93, 267, 271], "adjoint": [260, 261, 262, 263, 273], "adopt": 273, "advanc": 269, "advantag": [266, 273], "after": [167, 228, 230, 234, 239, 242, 245, 247, 252, 254, 273], "aggreg": [27, 213, 214, 215, 264], "agreement": [266, 269], "ai": 266, "aid": 266, "aim": [48, 266, 268], "al": [33, 34, 35, 113, 267, 268], "algorithm": [266, 277], "align": [33, 34, 35, 46, 100, 194, 195, 201, 202, 216, 229, 231, 234, 235, 236, 240, 243, 246, 248, 253, 255, 256, 258, 259, 261, 263, 267, 268], "all": [215, 217, 223, 228, 230, 234, 239, 242, 245, 247, 252, 254, 270, 273, 274, 276], "allow": [101, 228, 230, 231, 239, 242, 243, 245, 247, 248, 252, 253, 254, 255, 256, 259, 260, 261, 262, 272, 277], "along": 217, "alpha": [29, 161, 165, 167, 193, 197, 200, 227, 241, 251, 270, 273, 274], "alreadi": [272, 273], "also": [221, 231, 236, 242, 243, 247, 248, 254, 256, 259, 262, 263, 266, 270, 272, 273, 274, 276, 277], "altern": [266, 276], "alwai": [266, 273, 275], "amount": [12, 33, 100, 267, 268], "an": [29, 46, 48, 165, 166, 193, 194, 195, 198, 200, 202, 213, 214, 217, 224, 225, 227, 231, 236, 246, 249, 265, 266, 268, 270, 272, 273, 274, 276, 277], "anaconda": 266, "analysi": 6, "andrew": 221, "angl": [210, 264], "ani": [34, 213, 214, 215, 269, 270, 273, 276, 277], "ann": 277, "anoth": [266, 276, 277], "apart": 277, "api": 270, "appear": 273, "append": [273, 274], "appli": [46, 195, 202, 217, 239, 240, 242, 243, 246, 266, 270, 277], "applic": [228, 230, 234, 239, 242, 245, 247, 252, 254, 269, 270, 273, 274], "approach": [35, 273, 277], "appropri": 273, "approxim": 270, "apt": 272, "ar": [27, 33, 100, 113, 143, 204, 205, 206, 207, 208, 216, 219, 220, 222, 223, 243, 248, 253, 255, 256, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "arbitrari": [195, 198, 202, 246, 249, 262, 265], "arbitrarili": 273, "architectur": 277, "area": 269, "arg": [217, 223, 230, 271], "argmax": 273, "argument": [209, 210, 212, 217, 240, 264], "around": [12, 266, 270], "arrai": 223, "arriv": [274, 276, 277], "arrow": 270, "art": 274, "articl": [194, 195, 212, 246, 248, 271, 276], "artifici": [35, 266, 274, 277], "arxiv": [8, 260, 262], "as_tensor": [218, 221, 223, 270, 274], "assum": [219, 220, 222, 223, 266, 275], "aswel": 274, "attribut": [160, 161, 164, 165, 167, 168, 189, 190, 192, 193, 196, 197, 199, 200, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "audienc": 270, "audio": 8, "autaps": [231, 242, 243, 247, 248, 253, 254, 256, 259, 273], "author": [266, 273], "autograd": 273, "automat": [265, 270], "av": 167, "avail": [33, 34, 35, 266, 268, 270, 272], "avoid": [33, 100, 267, 268], "awar": 269, "ax": 273, "axhlin": 274, "axi": [209, 210, 277], "axvlin": 274, "b": [8, 46, 167, 261, 263, 270], "backpropag": 276, "backward": 273, "balanc": [266, 276], "base": [15, 113, 116, 148, 160, 161, 162, 211, 212, 213, 216, 265, 266, 269, 272, 277], "bash": 272, "basi": 221, "basic": [223, 275, 277], "batch": [228, 230, 231, 239, 240, 242, 243, 245, 247, 252, 254, 266, 273, 276], "batch_siz": [216, 229, 231, 246, 248, 253, 255, 258, 259, 271, 273], "becaus": [38, 105, 267, 268, 269, 272, 273, 275, 277], "becom": [273, 277], "been": 273, "befor": [272, 273, 275], "begin": [30, 33, 34, 35, 46, 100, 163, 194, 195, 201, 202, 216, 229, 231, 234, 235, 236, 240, 243, 246, 248, 253, 255, 256, 258, 259, 261, 263, 267, 268], "beginn": [271, 275], "behavior": [168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 232], "behaviour": [35, 265, 274], "behind": 277, "being": [33, 100, 266, 267, 268, 270], "bellec": [46, 112, 266, 267, 276], "below": [272, 274, 275, 276, 277], "benchmark": 266, "benefit": [269, 272, 273], "benefiti": 273, "best": [266, 273], "beta": [261, 263], "better": [270, 277], "between": [33, 100, 212, 217, 218, 221, 256, 265, 267, 268, 274, 277], "bia": [167, 273], "bin": 273, "binari": [113, 219, 220, 267, 274, 277], "bio": [8, 266], "biolog": [270, 273, 274, 275, 276, 277], "bit": 270, "bitvector": [204, 205, 206, 207, 208], "black": 270, "block": [217, 267], "boilerpl": [12, 270, 273], "book": [33, 34, 35, 268], "bool": [231, 239, 240, 242, 243, 247, 248, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264], "both": [33, 100, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 273, 277], "bottleneck": 269, "box": [34, 38, 101, 105, 270], "brain": 274, "bring": 266, "broad": 269, "broken": 270, "browser": 272, "buffer": 271, "build": [46, 112, 267, 270, 271, 272, 276, 277], "built": [270, 271, 276], "bundl": 266, "bv": [229, 231], "c": [8, 167, 207, 209, 212, 229, 231, 265, 266, 272], "c3se": 269, "c_": [216, 217], "c_m_inv": 161, "calcul": 221, "call": [33, 100, 267, 268, 271, 273, 274, 276, 277], "callabl": [197, 221, 251, 265], "can": [9, 33, 34, 35, 38, 48, 105, 114, 212, 217, 221, 224, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "cannot": [38, 105, 267, 268, 273, 275], "capacit": 161, "capacitor": 274, "care": 273, "cartpol": [9, 266], "case": [30, 33, 35, 100, 163, 217, 267, 268, 270, 273], "caus": 167, "causal": 212, "caveat": 275, "cc": 8, "cd": 272, "cell": [213, 214, 215, 223, 229, 235, 236, 261, 273, 274, 277], "center": [209, 210, 221, 269], "centr": 269, "certain": [35, 270, 276, 277], "ch": [201, 202, 253, 255], "ch5": [201, 202, 253, 255], "challeng": 273, "chalmer": 269, "chanc": 277, "chang": [33, 35, 100, 212, 221, 265, 267, 268, 270], "channel": [217, 264, 265, 266, 272], "charg": [33, 100, 267, 268], "chat": 272, "checkpoint": [12, 273, 276], "choic": [273, 274, 277], "choos": 273, "chose": 269, "chosen": [272, 273], "christian": [266, 269, 273], "cifar": [266, 276], "cifar10": 266, "circuit": 274, "circumv": 270, "cite": 266, "class": [2, 4, 7, 8, 11, 12, 16, 17, 18, 19, 20, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 50, 51, 52, 53, 80, 83, 84, 86, 87, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 124, 127, 143, 147, 150, 157, 160, 161, 164, 165, 167, 168, 189, 190, 192, 193, 196, 197, 199, 200, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 270, 271, 273, 276], "classif": [266, 276], "classifi": 276, "clear": 273, "cli": 276, "clone": 272, "close": [221, 270, 272, 273, 274], "closer": 274, "cluster": [266, 269], "cmake": 272, "cobaliffeedforwardst": 162, "cobalifparamet": [162, 216], "code": [12, 15, 221, 223, 266, 270, 273, 274, 275, 277], "coincid": [219, 220, 222, 224], "collab": 266, "collect": [48, 268], "color": 274, "com": [212, 266, 272, 273], "combin": [35, 38, 102, 105, 211, 266, 267, 268, 274], "come": 273, "command": 272, "comment": 269, "commerci": 269, "compar": [38, 105, 267, 268, 274], "compart": 256, "compat": [166, 225, 266], "complex": 275, "compneuro": 8, "compon": [14, 48, 266, 268, 270], "compos": [270, 273], "comprehens": 266, "comput": [161, 165, 166, 167, 193, 194, 195, 198, 200, 201, 202, 204, 205, 206, 207, 216, 225, 227, 229, 231, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 263, 266, 269, 274], "computation": [38, 105, 267, 268, 270, 277], "concept": 270, "concern": [269, 273], "conclud": [273, 275], "conda": 266, "condit": [46, 166, 194, 195, 198, 202, 216, 225, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263], "conduct": [160, 161, 162, 167, 216, 256], "configur": [228, 230, 239, 242, 245, 247, 252, 254, 260, 261, 262, 275, 276], "connect": [217, 231, 242, 243, 247, 248, 253, 254, 255, 256, 259, 273], "consequent": 274, "consid": [273, 277], "consist": [274, 277], "consol": 266, "constant": [33, 46, 100, 161, 167, 189, 193, 200, 218, 223, 237, 265, 267, 268, 274, 277], "constant_current_encod": 271, "constant_current_lif_encod": 218, "constantcurrentlifencod": [223, 224, 271, 273], "constitu": 270, "construct": 275, "contain": [13, 48, 114, 214, 215, 228, 230, 234, 239, 242, 245, 247, 252, 254, 266, 268, 270, 272, 273, 274, 277], "content": 277, "context": 273, "continu": 275, "continuous_upd": 274, "contrast": [46, 274], "control": [33, 35, 100, 267, 268, 273, 276], "conv2d": [217, 264, 266], "conveni": 274, "convent": 274, "convert": [27, 28, 277], "convinc": 269, "convnet4": 271, "convolut": [11, 12, 195, 202, 217, 246, 264, 274, 277], "convolv": [217, 266], "coordin": 210, "copi": 272, "correct": [266, 271, 273, 277], "correctli": 271, "correlation_experi": 276, "correspond": 276, "cortex": 223, "could": [273, 274], "council": 269, "count": [48, 213, 268, 273], "counter": 276, "counterpart": 270, "coupl": [167, 193, 256], "cours": 274, "covari": 209, "cover": [271, 274], "cpehl": 266, "cpu": 273, "cramer": 8, "creat": [47, 209, 210, 211, 264, 265, 266, 268, 269, 272, 275], "credit": 221, "crucial": 277, "cuda": [271, 272, 273], "cumbersom": 270, "curiou": 274, "current": [33, 34, 35, 38, 100, 101, 105, 162, 166, 190, 192, 194, 195, 198, 199, 201, 202, 218, 238, 244, 246, 248, 249, 267, 268, 272, 274, 277], "curv": [221, 277], "custom": [231, 242, 243, 247, 248, 254], "d": [46, 112, 167, 229, 231, 266, 267, 272], "darjan": 276, "data": [6, 29, 97, 148, 152, 214, 215, 218, 221, 223, 228, 230, 231, 234, 239, 240, 242, 243, 245, 246, 247, 252, 254, 260, 262, 266, 271, 273, 274, 277], "databas": 276, "dataload": 273, "datapoint": 266, "dataset": [266, 276, 277], "debian": 272, "decad": 266, "decai": [274, 277], "decid": 213, "decod": [266, 273], "decreas": [273, 274], "deep": [0, 13, 266, 272, 275], "def": [270, 271, 273, 274], "default": [35, 48, 193, 209, 210, 212, 213, 214, 215, 217, 221, 228, 230, 231, 239, 240, 242, 243, 245, 247, 248, 252, 253, 254, 255, 256, 259, 260, 261, 262, 264, 265, 268, 273, 274], "delta": [29, 218], "delta_t": [193, 194, 195, 200, 201, 202, 246, 248, 253, 255], "demonstr": [266, 270, 273, 275, 276], "denot": [217, 265], "depend": [9, 48, 144, 266, 276, 277], "depth": 275, "deriv": [113, 210, 267, 270], "describ": [33, 34, 35, 100, 101, 209, 266, 267, 268, 270, 271, 272, 276, 277], "descript": 276, "design": 275, "desir": [48, 114, 268], "detach": [273, 274], "detail": [266, 272, 275, 276], "determin": [46, 161, 165, 167, 193, 200, 208, 227, 273, 276, 277], "deutsch": [266, 269], "dev": 272, "dev5": 274, "develop": [269, 272], "deviat": 273, "devic": [217, 271, 273, 276], "dfg": [266, 269], "did": 269, "differ": [27, 28, 33, 34, 100, 221, 266, 267, 268, 274, 275, 277], "differenti": [209, 270], "digit": [8, 11, 12, 276], "dilat": 217, "dim": [271, 273], "dimens": [27, 217, 219, 222, 234, 265, 274, 275, 277], "dimension": [264, 265], "dir": 272, "direct": [217, 269], "directli": 270, "directori": [266, 270, 272], "discontinu": 270, "discord": [266, 272], "discret": [234, 235, 236, 277], "discretis": [273, 274], "distanc": 221, "distance_funct": 221, "distinct": 273, "distinguish": 277, "distribut": [265, 273], "distro": 272, "do": [0, 13, 272, 273, 274], "doc": [217, 266], "docker": 266, "doctor": 266, "document": [217, 266, 277], "doe": [28, 273], "doi": 266, "domain": [28, 209, 210, 211, 264, 269, 277], "don": 273, "done": [9, 270, 272, 274, 275, 276, 277], "dot": [33, 34, 35, 46, 100, 166, 194, 195, 198, 201, 202, 216, 225, 229, 231, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 267, 268, 270], "down": 270, "download": [272, 273], "drawn": [38, 105, 267, 268], "driven": [266, 269], "dt": [162, 166, 177, 191, 194, 195, 198, 201, 202, 216, 218, 219, 220, 222, 224, 225, 228, 230, 231, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 273, 274], "dtype": 217, "dure": [218, 264, 272], "dx": [210, 264], "dy": [210, 264], "dynam": [33, 34, 35, 46, 167, 266, 268, 270, 273], "e": [29, 266, 269, 275, 276], "e_": 216, "e_rev_": 161, "e_rev_i": 161, "each": [33, 48, 100, 218, 221, 267, 268, 270, 274, 276, 277], "easi": [273, 276], "easier": 272, "easiest": 273, "ec": [266, 269], "eccentr": [209, 210], "ed": 27, "effect": 275, "efficaci": 277, "effici": [209, 269, 277], "effort": [266, 269], "egholm": 266, "either": [217, 270, 271, 272, 277], "electr": 277, "element": [207, 217], "elia": 276, "els": [30, 163, 273], "emit": [219, 220, 222, 275, 277], "empti": 264, "enabl": [269, 272], "encod": [57, 121, 266, 273], "encourag": 266, "end": [30, 33, 34, 35, 46, 100, 163, 194, 195, 201, 202, 216, 229, 231, 234, 235, 236, 240, 243, 246, 248, 253, 255, 256, 258, 259, 261, 263, 267, 268], "energi": 269, "engin": 269, "enough": 273, "enter": 273, "entri": 215, "environ": [272, 276], "epfl": [201, 202, 253, 255], "epoch": [273, 276], "eq": 273, "equal": 221, "equat": [33, 46, 100, 166, 194, 195, 198, 202, 216, 225, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 267, 268, 277], "error": [48, 213, 268], "essenti": [270, 273], "et": [33, 34, 35, 113, 267, 268], "etc": 12, "euclidean": 221, "euclidean_dist": 221, "euler": [162, 194, 195, 198, 201, 202, 216, 231, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263], "eval": 273, "evalu": 8, "even": [274, 276], "event": [27, 35, 38, 102, 105, 113, 148, 266, 267, 268, 269, 274], "eventu": 274, "everi": [33, 34, 100, 101, 267, 268], "everyth": [30, 163, 275], "evolut": 274, "exactli": 277, "exampl": [216, 218, 221, 223, 228, 229, 230, 231, 234, 239, 240, 242, 243, 245, 246, 247, 248, 252, 253, 254, 255, 258, 259, 264, 271, 276], "exc": [266, 269], "excel": [266, 269, 271], "exchang": 274, "excitatori": [160, 161], "exclud": 34, "exclus": [212, 265], "exdb": 273, "execut": [9, 274, 275, 277], "exercis": 276, "exist": [270, 272, 273, 275, 277], "exp": [194, 195, 201, 202, 246, 248, 253, 255], "exp_filt": 58, "expand": 266, "expect": [217, 266, 273, 274, 275, 277], "experi": [9, 266, 273, 274, 277], "explain": [270, 277], "explan": 9, "explicit": [273, 274], "exploit": 266, "explor": [269, 273, 274], "exponenti": [29, 97, 193, 194, 195, 200, 202, 246, 248, 253, 255, 265, 274], "ext": 217, "extend": 13, "extens": 276, "extract": 273, "f": [8, 35, 273], "f_max": [219, 220, 222], "facilit": 273, "fact": 269, "factor": [29, 192, 221], "fals": [231, 239, 240, 242, 243, 247, 248, 253, 254, 255, 256, 259, 260, 261, 262, 263, 273, 274], "familiar": 275, "familiaris": 271, "famou": 277, "far": 275, "fast": [33, 100, 223, 267, 268], "fastest": 266, "fc_out": 273, "featur": [231, 236, 243, 248, 256, 259, 262, 263, 272, 277], "feed": [160, 164, 192, 196, 199, 226, 246, 250], "feedforward": [166, 225], "field": [35, 47, 113, 209, 210, 211, 212, 221, 264, 265], "fig": [270, 273, 277], "fig_working_ap": 277, "figsiz": 273, "figur": [270, 274], "file": 270, "filesystem": 272, "filter_inv": 29, "final": [266, 270, 273, 277], "find": [266, 269, 276], "fire": [35, 38, 46, 105, 164, 165, 166, 193, 194, 195, 198, 200, 201, 202, 225, 226, 227, 240, 243, 249, 266, 270, 274, 275, 277], "fire_model": [194, 195, 246, 248], "first": [27, 33, 100, 217, 223, 224, 265, 267, 268, 270, 272, 273, 277], "fit": 277, "fix": [218, 273], "flag": [264, 276], "flatten": 266, "float": [161, 162, 165, 166, 167, 177, 191, 193, 194, 195, 197, 198, 200, 201, 202, 210, 211, 212, 216, 218, 219, 220, 222, 224, 225, 227, 228, 230, 231, 234, 235, 236, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265], "floatslid": 274, "flow": [33, 100, 267, 268], "fluctuat": 167, "folder": 270, "follow": [194, 195, 198, 201, 202, 216, 229, 231, 240, 243, 246, 248, 249, 253, 255, 258, 259, 261, 263, 266, 269, 270, 273, 277], "forc": 276, "forg": 272, "forschungsgemeinschaft": [266, 269], "forward": [48, 160, 164, 192, 196, 199, 213, 221, 226, 246, 250, 260, 262, 268, 271, 273], "found": [33, 34, 35, 266, 268, 270, 277], "foundat": [266, 269, 274], "four": 217, "framework": [266, 269], "franz": 276, "free": 277, "freeli": [33, 34, 35, 268], "frequenc": [219, 220, 222], "from": [34, 113, 193, 194, 195, 201, 202, 208, 210, 212, 213, 214, 215, 217, 228, 229, 230, 231, 234, 239, 242, 245, 246, 247, 248, 252, 253, 254, 255, 260, 262, 264, 265, 266, 267, 269, 270, 271, 273, 274, 277], "full": 272, "fulli": 274, "function": [3, 4, 5, 10, 11, 12, 13, 87, 89, 90, 91, 92, 97, 100, 101, 102, 105, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 153, 155, 156, 157, 221, 239, 240, 242, 243, 246, 249, 251, 264, 265, 267, 270, 271, 273, 274, 275, 277], "functool": 274, "fund": [266, 269], "fundament": [266, 270, 273, 277], "further": [274, 275, 276], "futur": 213, "g": [46, 112, 266, 267, 275, 276], "g9e602aca": 274, "g_": 256, "g_coupl": [256, 257], "g_e": [160, 216], "g_i": [160, 216], "g_l": [161, 216], "ganglion": 223, "gaussian": [209, 221], "gaussian_rbf": 221, "gener": [195, 198, 202, 212, 217, 246, 249, 265, 266, 273], "german": [266, 269], "germani": [266, 269], "gerstner": [33, 34, 35, 268], "get": [221, 272, 273, 275, 277], "gg": 272, "git": [266, 272], "github": [266, 272, 277], "give": [38, 105, 267, 268, 276], "given": [46, 210, 273, 274], "go": 272, "goal": 274, "googl": 266, "gpu": [266, 271, 276], "grad_fn": 275, "gradient": [35, 143, 161, 165, 167, 193, 200, 227, 266, 270, 273, 277], "grant": [266, 269], "gravit": 276, "great": 273, "greater": 167, "grei": 274, "grid": 274, "group": 217, "groups_not": 217, "growth": [193, 200], "gt": [30, 35, 163], "guarante": 273, "guid": [266, 272], "guidelin": 266, "guillaum": 276, "gym": [9, 276], "gz": 273, "h": [30, 35, 163, 217], "h_": 217, "ha": [208, 215, 266, 269, 270, 271, 272, 273], "hajek": 276, "handl": 275, "handwritten": 276, "happen": [270, 272, 274], "hardcod": 265, "hardest": 277, "hardwar": [269, 272, 274], "have": [28, 33, 34, 100, 224, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277], "haven": 273, "hbp": [266, 269], "header": 272, "heavisid": 35, "heidelberg": [8, 266, 269], "height": 217, "help": [266, 276], "helper": 274, "henc": 34, "here": [217, 266, 271, 272, 273, 277], "hertz": [219, 220, 222], "hesit": 272, "hidden": [216, 231, 236, 242, 243, 247, 248, 253, 254, 255, 256, 259, 262, 263, 273], "hidden_featur": 273, "hidden_s": [216, 230, 231, 236, 242, 243, 247, 248, 253, 254, 255, 256, 257, 259, 262, 263, 273], "hierarchi": 270, "high": [167, 266, 269], "higher": [219, 222, 266, 272, 274, 277], "highli": 275, "highlight": 217, "hint": 272, "hist": 273, "histogram": 273, "histori": 275, "histtyp": 273, "hit": [274, 275, 277], "home": 273, "honestli": 275, "hopefulli": 272, "horizon": [266, 269], "host": 269, "hotspot": 272, "how": [9, 33, 100, 266, 267, 268, 270, 271, 273, 274, 275, 276, 277], "howev": [266, 270, 273], "hpc": [266, 276], "hpc2n": 269, "html": [201, 202, 217, 253, 255, 271, 275, 277], "http": [8, 194, 195, 201, 202, 212, 217, 246, 248, 253, 255, 260, 262, 266, 271, 272, 273, 275, 277], "hyper": [161, 165, 167, 193, 200, 227], "hyperparamet": [270, 273], "hypothet": 270, "i": [0, 9, 13, 33, 34, 35, 38, 46, 48, 97, 100, 105, 190, 192, 194, 195, 198, 199, 201, 202, 207, 210, 212, 213, 217, 221, 229, 231, 234, 235, 236, 238, 240, 243, 244, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "i_": [194, 195, 202, 234, 235, 236, 246], "iaffeedforwardst": 166, "iafparamet": [166, 225], "idea": 277, "ideal": 6, "identifi": [223, 274], "idiosyncrasi": 271, "idx1": 273, "idx3": 273, "igitugraz": [46, 112, 267], "ignor": [212, 265, 270], "illustr": [9, 266, 273, 276, 277], "imag": [217, 221, 273, 276], "imagin": [221, 270], "immedi": [34, 274, 277], "impact": 34, "impati": 273, "imper": 270, "implement": [38, 105, 194, 195, 198, 201, 202, 216, 217, 229, 231, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 258, 259, 261, 263, 266, 267, 268, 273, 274, 277], "import": [229, 231, 260, 262, 264, 266, 271, 273, 274, 275, 276, 277], "importerror": 273, "imposs": [38, 105, 267, 268], "in_channel": [217, 264], "includ": [9, 48, 266, 268, 269, 276], "inclus": 213, "incom": [33, 34, 100, 101, 265, 267, 268, 277], "incorpor": 273, "increas": [35, 221, 274, 277], "increasingli": 274, "inde": 270, "independ": 273, "index": [221, 273], "indic": 274, "individu": 221, "infer": 266, "infinit": 224, "inflow": 35, "influenc": [274, 275], "inform": [33, 34, 35, 101, 102, 112, 148, 213, 266, 267, 268, 272, 274], "infrastructur": [266, 269], "inhibitori": [160, 161], "initi": [210, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 273], "initialis": [271, 273], "inject": [27, 274, 275], "inner": 275, "innerv": 270, "input": [28, 33, 34, 46, 100, 101, 160, 161, 162, 166, 190, 192, 194, 195, 198, 199, 201, 202, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 229, 231, 234, 236, 238, 242, 243, 244, 246, 247, 248, 249, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 273, 275, 277], "input_curr": [177, 194, 201], "input_featur": [271, 273], "input_s": [216, 230, 231, 236, 242, 243, 247, 248, 253, 254, 255, 256, 257, 259, 262, 263, 273], "input_spik": [166, 195, 202], "input_spike_train": 274, "input_tensor": [162, 191, 198, 249, 270], "input_weight": [231, 242, 243, 247, 248, 254], "inspir": [266, 270, 274, 276], "instal": 276, "instanc": [28, 143, 276], "instantan": [38, 101, 105, 267, 268], "instanti": 273, "instead": 273, "institut": 266, "int": [209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 224, 230, 231, 236, 242, 243, 247, 248, 253, 254, 255, 256, 257, 259, 262, 263, 264, 265], "intact": 143, "integ": 214, "integr": [33, 34, 38, 100, 101, 105, 162, 164, 165, 166, 189, 190, 193, 194, 195, 198, 200, 201, 202, 216, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 266, 269, 270, 274, 275, 277], "integrate_and_record_voltag": 274, "intend": 270, "interact": 274, "interest": [266, 269], "interf": 272, "interfac": [93, 267, 272, 276], "intern": [216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 273], "interpret": 270, "introduct": [273, 275, 277], "introspect": 272, "intslid": 274, "invari": [113, 267], "invers": [33, 100, 161, 167, 189, 193, 200, 237, 267, 268, 273, 274], "invest": 266, "investig": 274, "invok": [266, 273], "involv": 273, "io": [266, 272, 277], "ip": 272, "ipywidget": 274, "is_avail": 273, "isol": [270, 272], "issu": [266, 272], "item": 273, "iter": [218, 234, 265], "its": [38, 105, 221, 267, 268, 270, 274], "izhikevich": 270, "izhikevichcel": 228, "izhikevichparamet": [168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 228, 230, 231, 232], "izhikevichrecurrentcel": 230, "izhikevichspikingbehavior": [228, 229, 230, 231], "izhikevichst": [168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 228, 230, 231, 232], "j": [8, 223], "jan": 266, "jegp": 266, "jen": [266, 269], "job": [48, 268], "jointli": 273, "jump": [38, 46, 101, 105, 166, 194, 195, 198, 202, 216, 225, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 267, 268, 270], "jupyt": [266, 272], "just": [48, 268, 273, 274], "juwel": 276, "k": [167, 221], "keep": [228, 230, 239, 242, 245, 247, 252, 254, 266, 270, 275, 277], "keepdim": 273, "kernel": [209, 210, 217, 221], "kernel_s": 217, "know": [270, 274, 275], "knowledg": [273, 275], "known": [231, 236, 243, 248, 256, 259, 262, 263, 272], "kth": 266, "kwarg": [223, 228, 229, 230, 231, 234, 235, 239, 240, 242, 243, 245, 246, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "l": [228, 230, 231, 234, 239, 240, 242, 243, 245, 247, 252, 254], "label": [273, 274, 276], "lambda": 265, "laptop": 266, "larg": [33, 100, 267, 268, 269, 273, 276], "last": [228, 230, 234, 239, 242, 245, 247, 252, 254, 273, 274], "later": [48, 268, 270, 276], "latest": 272, "layer": [48, 114, 149, 228, 230, 234, 239, 242, 245, 247, 252, 254, 260, 262, 266, 268, 270, 273, 274, 275], "lead": [274, 277], "leak": [33, 34, 35, 46, 100, 101, 161, 189, 193, 194, 195, 198, 200, 201, 202, 216, 234, 235, 236, 237, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 267, 268], "leaki": [33, 34, 38, 100, 101, 105, 166, 189, 190, 193, 194, 195, 198, 200, 201, 202, 225, 234, 235, 236, 237, 238, 240, 243, 249, 266, 270, 274, 275, 277], "leaky_integr": [35, 38, 102, 105, 267, 268], "leaky_integrator_box": 265, "learn": [0, 11, 12, 13, 266, 272, 274, 275, 276], "leav": [38, 105, 267, 268, 273], "lecun": 273, "left": [194, 195, 201, 202, 246, 248, 253, 255, 270], "legend": [273, 274], "legenstein": [46, 112, 266, 267, 276], "len": 273, "length": 221, "less": [46, 277], "let": 277, "lgplv3": 266, "li": 274, "liboxcel": 265, "liboxparamet": 265, "librari": [0, 12, 13, 266, 272, 274, 276, 277], "licel": [234, 266, 273], "licens": 8, "lif": [38, 46, 105, 160, 161, 162, 166, 194, 195, 196, 198, 202, 216, 224, 246, 248, 249, 250, 253, 255, 256, 258, 259, 261, 270, 271, 274, 275, 277], "lif_ex": 246, "lif_feed_forward_step": 270, "lif_integr": 274, "lif_voltage_trac": 274, "lifadex": [192, 194], "lifadexcel": 245, "lifadexfeedforwardst": 195, "lifadexlay": 245, "lifadexparamet": [194, 195, 245, 246, 247, 248], "lifadexrecurrentcel": 247, "lifadexst": 247, "lifboxfeedforwardst": [198, 249], "lifboxparamet": [198, 249], "lifcel": [239, 266, 270, 271, 274, 277], "lifconvnet": 271, "lifex": [199, 201, 246, 255], "lifexcel": 252, "lifexfeedforwardst": 202, "lifexparamet": [201, 202, 252, 253, 254, 255], "lifexrecurrentcel": 254, "lifexst": [245, 252, 254], "lifparamet": [216, 218, 224, 239, 240, 242, 243, 256, 273, 274], "lifrecurrentcel": [242, 273], "lifrefracparamet": [257, 258, 259], "lifstat": [239, 240, 242, 243], "lift": [27, 277], "lightn": [12, 266, 272], "like": [9, 28, 213, 272, 276, 277], "limit": 273, "lindeberg": [113, 212, 267], "lindeberg2016": 212, "line": [272, 273, 274, 276], "line2d": 274, "linear": [236, 266, 273, 274, 275], "link": [212, 276], "linspac": 265, "linux": 272, "liparamet": [191, 234, 235, 236, 274], "list": [221, 266, 272, 273, 277], "listat": [191, 234], "literatur": [266, 277], "littl": [266, 276], "live": [274, 275, 277], "load": 276, "local": [266, 272, 277], "log": [12, 273, 276], "log_p_i": [271, 273], "log_softmax": [271, 273], "logarithm": [212, 265], "lognorm": 273, "long": [46, 112, 260, 262, 277], "look": [274, 275, 276, 277], "loop": 270, "loss": 273, "low": 167, "lr": 273, "lsnn": [266, 277], "lsnncell": 277, "lsnnparamet": [260, 261, 262, 263], "lsnnrecurr": [266, 277], "lsnnrecurrentcel": 277, "luckili": 270, "m": [167, 193, 200, 264, 266, 271, 273, 274, 276], "maass": [46, 112, 266, 267, 276], "machin": [273, 274], "mai": [144, 270], "main": [271, 277], "mainli": [273, 277], "maintain": [266, 269], "make": [38, 105, 223, 267, 268, 272, 275], "manag": 272, "mani": [27, 276, 277], "manipul": 274, "markram": 277, "math": 29, "matplotlib": [144, 273, 274], "matplotlibrc": 274, "matric": 273, "matrix": [209, 231, 242, 243, 247, 248, 254], "max": [271, 273, 274], "max_epoch": 273, "max_scal": [212, 265], "maxim": [219, 220, 222], "maximum": [212, 221, 265], "maxpool2d": 266, "mean": [33, 46, 100, 267, 268, 270, 272, 273, 277], "mean_loss": 273, "meant": [195, 202, 246, 277], "measur": [223, 273], "mechan": 49, "mem": [33, 34, 35, 46, 100, 193, 194, 195, 198, 200, 201, 202, 216, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 267, 268, 274], "mem_inv": [33, 100, 267, 268], "membran": [33, 34, 35, 48, 100, 101, 114, 160, 161, 164, 167, 189, 190, 192, 193, 194, 196, 199, 200, 215, 218, 226, 233, 237, 238, 244, 250, 267, 268, 274, 277], "memebran": 277, "memori": [46, 112, 260, 262, 277], "mention": 270, "met": 272, "method": [35, 160, 161, 164, 165, 167, 168, 189, 190, 192, 193, 196, 197, 199, 200, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 270, 271, 272, 273, 274, 277], "methodinstructionsprerequisit": 266, "might": [271, 272, 274], "millisecond": 274, "min": 274, "min_scal": [212, 265], "miniconda": 266, "minimum": [212, 265], "mirror": 27, "ml": 273, "mn": 167, "mnist": [12, 266, 271, 277], "mnist_pl": [266, 276], "mock_data": 270, "model": [35, 38, 102, 105, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 194, 195, 198, 202, 216, 219, 220, 222, 224, 229, 231, 232, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 263, 266, 272, 276], "model_aft": 273, "modern": 266, "modul": [0, 1, 6, 9, 13, 14, 15, 21, 27, 34, 35, 38, 44, 46, 47, 48, 54, 57, 58, 85, 88, 144, 148, 152, 154, 158, 195, 198, 202, 203, 266, 267, 268, 270, 271, 273, 274, 275, 277], "modular": 270, "modulenotfounderror": 274, "moment": 273, "month": 266, "more": [33, 34, 35, 46, 48, 101, 102, 112, 167, 194, 195, 198, 201, 202, 216, 229, 231, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 258, 259, 261, 263, 266, 267, 268, 270, 272, 273, 275, 276, 277], "most": [272, 273, 274], "mostli": 269, "motiv": [269, 274], "move": 271, "much": 276, "muller": 207, "multi": 256, "multidisciplinari": 269, "mv": [165, 167, 193, 200, 227, 229, 231], "my_dynam": 270, "myparamet": 270, "n": [30, 35, 163, 193, 194, 217, 264, 265, 272, 277], "n_scale": [212, 265], "na": [167, 193], "naiss": 269, "naiv": 273, "name": [38, 105, 266, 267, 268, 273, 274], "namedtupl": [265, 270], "nation": 269, "natur": [38, 105, 267, 268, 270, 275], "necessari": [270, 271], "necessarili": 273, "need": [27, 270, 272, 275, 276, 277], "neg": 273, "net": [8, 276], "network": [0, 6, 8, 11, 12, 13, 14, 35, 93, 116, 144, 267, 268, 269, 272, 274, 275, 276, 277], "neumann": 269, "neural": [0, 6, 8, 13, 14, 35, 93, 116, 267, 268, 269, 274, 275, 276, 277], "neuralensembl": 193, "neuromorph": [266, 269, 274], "neuron": [15, 33, 34, 35, 38, 44, 46, 100, 101, 102, 105, 148, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 213, 216, 218, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 271, 276], "neuronaldynam": [201, 202, 253, 255], "never": [33, 34, 100, 101, 267, 268, 277], "new": [214, 215, 270, 272, 275], "new_stat": 266, "next": [207, 270], "next_stat": 275, "nll_loss": 273, "nn": [93, 114, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 273, 275], "nn_tutori": 271, "no_grad": 273, "node": 266, "non": [266, 274, 277], "none": [212, 213, 214, 215, 217, 221, 223, 231, 252, 254, 256, 257, 264, 265, 273, 274], "norm": [113, 267], "normal": [231, 242, 243, 247, 248, 254, 270, 273], "nors": [273, 274, 276], "norse2021": 266, "north": 269, "notat": 217, "note": [9, 28, 266, 270, 272, 273, 275, 276, 277], "notebook": [266, 273, 274, 275], "noth": 273, "notic": [33, 100, 267, 268, 275], "now": [269, 270, 271, 272, 273, 277], "np": [273, 274], "num_neuron": 274, "number": [30, 163, 211, 212, 217, 218, 219, 221, 222, 224, 231, 236, 242, 243, 247, 248, 254, 256, 259, 262, 263, 264, 265, 266, 270, 273, 274, 276], "numer": [27, 28, 213, 269], "numpi": [273, 274], "nvidia": 272, "object": [113, 267, 270], "occur": [33, 35, 100, 208, 218, 224, 267, 268], "od": [194, 195, 198, 201, 202, 216, 229, 231, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 258, 259, 261, 263], "offer": [28, 272], "offici": [46, 112, 267, 272], "often": [270, 273], "omit": 101, "onc": [270, 274, 277], "one": [194, 195, 198, 201, 202, 213, 216, 219, 222, 229, 231, 240, 243, 246, 248, 249, 253, 255, 258, 259, 261, 263, 266, 271, 274, 275, 276, 277], "ones": [273, 275, 277], "onli": [273, 274, 275, 277], "onlin": [33, 34, 35, 201, 202, 253, 255, 268], "openai": [9, 276], "oper": [48, 114, 217, 274, 277], "optim": [15, 264, 270, 273, 277], "optimis": [272, 273], "optimiz": [228, 230, 239, 242, 245, 247, 252, 254, 260, 261, 262], "optimize_field": 264, "option": [212, 213, 214, 215, 217, 265], "order": [223, 264, 273], "org": [8, 194, 195, 217, 246, 248, 260, 262, 266, 271, 272, 275], "oscil": 167, "other": [33, 34, 48, 100, 101, 114, 212, 267, 268, 273, 274, 277], "our": [266, 269, 271, 272, 273, 275, 277], "ourselv": 266, "out": [33, 34, 38, 100, 101, 105, 217, 262, 267, 268, 272, 273], "out_channel": 217, "out_featur": 221, "outer": 275, "output": [48, 216, 217, 221, 229, 246, 248, 253, 255, 258, 259, 260, 262, 266, 268, 273, 274, 275, 277], "output_featur": 273, "outsid": 269, "over": [33, 34, 35, 48, 100, 101, 114, 149, 194, 195, 201, 202, 215, 234, 246, 248, 253, 255, 265, 267, 268, 270, 274, 275, 277], "overhead": 276, "overwrit": 265, "own": [266, 269, 270, 271, 275, 277], "p": [162, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 194, 195, 198, 201, 202, 216, 218, 224, 225, 228, 230, 231, 232, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 270, 272, 273, 274], "packag": [13, 144, 270, 272], "pad": 217, "page": [9, 272, 274, 275, 276, 277], "paper": [113, 266, 267, 276], "parallelis": 276, "paramet": [33, 35, 48, 100, 114, 148, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 274, 277], "parameter": [33, 100, 267, 268], "parametr": [165, 167, 193, 200, 227], "parametrizedlifrecurrentcel": 273, "part": [217, 270, 277], "partial": [269, 274], "particular": [101, 274], "particularli": 276, "pass": [217, 274, 277], "passion": 266, "past": 272, "path": 272, "pattern": 276, "peak": 277, "pedersen": [113, 266, 267, 269], "pehl": [266, 269, 273], "per": [221, 266], "perfect": 275, "perform": [266, 269], "period": [224, 258, 259], "person": 269, "physic": [38, 105, 267, 268], "pickl": 27, "pip": [266, 276], "pip3": 272, "pixel": [210, 266], "place": 274, "plai": [266, 277], "plan": 269, "plastic": 277, "platform": [269, 271], "plausibl": 277, "pleas": [9, 266, 270, 272, 275, 276], "plot": [273, 274], "plt": [273, 274], "plug": [266, 277], "point": [33, 35, 100, 267, 268, 270, 274], "pointwis": 217, "poisson": 28, "polici": 266, "popul": [221, 273], "popular": [35, 38, 102, 105, 267, 268, 277], "population_encod": 28, "port": 277, "posit": [209, 210, 223, 273], "possibl": [167, 266, 269, 271, 275], "post": 8, "postdoc": 266, "potenti": [160, 161, 164, 165, 167, 189, 192, 193, 196, 199, 200, 215, 226, 227, 233, 237, 244, 250, 274, 275], "practic": [46, 266, 270, 273], "pre": 273, "pred": 273, "preexist": 266, "prefer": 272, "preinstal": 272, "preliminari": 266, "prerequisit": [266, 272], "present": 266, "press": [274, 275, 277], "pretti": 270, "previou": [207, 277], "primari": 272, "primarili": 269, "primit": [266, 271], "principl": 274, "print": 273, "probabl": [273, 276], "problem": 270, "process": 274, "produc": [35, 38, 102, 105, 217, 267, 268, 274], "product": 277, "program": 276, "programm": [266, 269], "programmat": 270, "project": 269, "promis": 266, "propag": 143, "properli": 143, "properti": [48, 114, 215, 268, 269], "proven": 266, "provid": [204, 205, 206, 207, 208, 212, 265, 266, 269, 272, 275, 276, 277], "public": 273, "publish": 266, "pull": [266, 272], "push": 213, "py": [270, 272, 273], "pynn": 193, "pypi": 266, "pyplot": [273, 274], "python": [266, 270, 272, 276, 277], "python3": [272, 276], "pytorch": [12, 13, 27, 195, 202, 217, 246, 266, 267, 270, 271, 272, 273, 274, 275, 277], "pytre": [198, 249], "q": 8, "qu": 266, "quai": [266, 272], "question": 269, "quickli": [274, 275], "quickstart_tutori": 275, "r": [46, 112, 223, 266, 267], "radial": 221, "radian": 210, "randn": [216, 229, 246, 248, 253, 255, 258, 259, 266, 270, 271, 273], "random": [231, 242, 243, 247, 248, 254, 273, 277], "rang": [219, 220, 222, 265, 270, 273, 274], "rapid": [33, 100, 267, 268], "rare": 277, "rate": [33, 100, 223, 267, 268, 276], "rather": [28, 270, 273], "ratio": [210, 264], "raw": 273, "re": 270, "reach": [272, 274], "react": 277, "read": [48, 266, 268, 270, 275], "realist": 275, "realiz": 270, "reason": [266, 272], "rec": [194, 195, 216, 243, 248, 253, 255, 256, 259, 263], "recal": [33, 100, 267, 268, 276], "recalcul": [33, 100, 267, 268], "receiv": [266, 269], "recent": [273, 274], "recept": [47, 113, 209, 210, 211, 212, 221, 264, 265], "recognit": [11, 12], "recommend": [271, 272, 275, 277], "record": 274, "recoveri": [167, 233, 277], "rectifi": [273, 274], "recurr": [216, 229, 231, 234, 235, 240, 242, 243, 244, 245, 246, 247, 248, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 266, 274, 275, 276, 277], "recurrent_cel": 273, "recurrent_weight": [231, 242, 243, 247, 248, 254], "recurs": 212, "red": [270, 274], "reduc": [12, 275], "reduct": 273, "ref": 272, "refer": [9, 35, 266, 270, 272, 277], "referenc": 217, "refrac": [258, 259], "refractori": [224, 258, 259], "regard": 274, "regist": [271, 272, 273], "regular": [35, 46, 275], "regularis": 114, "regularizationst": [214, 215], "reinstal": 272, "relat": 153, "relev": [161, 165, 167, 193, 200, 227], "reli": 272, "relu": [216, 274], "remain": 273, "rememb": 275, "remix": 277, "remov": [223, 231, 242, 243, 247, 248, 254, 272], "repeat": 274, "replac": [272, 274, 275, 277], "replic": 277, "repres": [219, 220, 221, 222], "represent": 27, "reproduc": 217, "requir": [9, 215, 265, 266, 273, 276, 277], "requires_grad": [169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 273], "research": [266, 269, 274, 277], "resembl": 273, "reset": [161, 165, 166, 167, 193, 194, 195, 198, 200, 202, 216, 225, 227, 240, 243, 248, 249, 253, 255, 256, 258, 259, 261, 263, 274, 277], "reset_method": [197, 251], "reset_valu": [197, 198, 249, 251], "reshap": 271, "resolv": 270, "resourc": [269, 274], "respect": [33, 100, 210, 216, 221, 243, 248, 253, 255, 256, 259, 263, 267, 268], "respond": 277, "rest": 161, "restrict": 274, "result": [167, 195, 202, 219, 222, 224, 246, 273, 274], "retin": 223, "return": [28, 213, 214, 215, 221, 228, 230, 231, 234, 239, 240, 242, 243, 245, 247, 252, 254, 270, 271, 273, 274, 275], "rev_": 216, "rev_i": 216, "revers": 161, "rf_paramet": 264, "rho": [258, 259], "rho_": [258, 259], "richardson": 221, "right": [194, 195, 201, 202, 246, 248, 253, 255, 270, 273], "rnn": [274, 275], "robert": 276, "robot": 276, "root": [272, 273], "rotat": 210, "royal": 266, "rsnn": 271, "rudimentari": 270, "rule": 97, "rullen": 223, "run": [9, 273, 277], "run_train": 273, "runner": 273, "runtim": 272, "s0": [216, 229, 246, 248, 253, 255, 258, 259], "s1": 273, "s10851": 212, "s2": [201, 202, 253, 255], "salaj": [46, 112, 266, 267, 276], "same": [46, 217, 270, 274], "sampl": [209, 210, 221, 273, 277], "scalabl": 266, "scalar": [270, 277], "scale": [113, 167, 210, 212, 221, 264, 265, 266, 267, 273, 276], "scaleabl": 266, "scatter": 265, "schemmel": 8, "scherr": 276, "scholar": 266, "scholarpedia": [194, 195, 246, 248], "scienc": 269, "scope": 269, "script": 1, "scriptmodul": [216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "seamlessli": [275, 277], "second": [33, 100, 217, 267, 268, 274], "section": 277, "see": [35, 100, 101, 102, 112, 113, 217, 223, 266, 267, 270, 272, 273, 274, 275, 277], "seen": [273, 277], "select": [265, 272], "self": [231, 242, 243, 247, 248, 253, 254, 255, 256, 259, 266, 271, 273], "semant": 266, "sens": [223, 269, 274], "sensit": 167, "seq_length": [218, 219, 222, 224, 271, 273], "sequenc": [228, 230, 239, 242, 245, 247, 252, 254, 274], "sequence_length": [219, 222, 224], "sequenti": [223, 266, 275], "sequentialst": [266, 275], "seri": [29, 97, 277], "serv": [9, 266, 273, 276, 277], "server": 272, "set": [35, 212, 221, 231, 242, 243, 247, 248, 254, 264, 265, 266, 274, 275], "set_detect_anomali": 273, "set_xlabel": 273, "setup": [271, 272], "sever": [266, 273, 277], "shape": [217, 262, 264, 265, 266, 271, 273, 274], "share": [216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "sharp": [193, 200], "shd": 8, "shift": [38, 105, 267, 268], "short": [46, 112, 260, 262, 277], "shortcut": 273, "should": [212, 213, 219, 220, 222, 224, 265, 270, 271, 273, 275, 277], "show": [270, 272, 274, 275], "shown": 277, "shuffl": 273, "side": 217, "sign": 222, "signal": [113, 267, 277], "similar": [46, 224, 275, 276], "similarli": [270, 273], "simlar": [44, 203], "simpl": [266, 267, 269, 271, 273, 274, 275, 277], "simpler": [38, 105, 267, 268], "simplest": [217, 274], "simpli": [27, 48, 268, 271, 275, 277], "simplic": 273, "simplifi": [38, 105, 267, 268, 270, 271], "simul": [218, 265, 275, 276, 277], "sinc": [265, 270, 271, 274], "singl": [166, 194, 195, 198, 201, 202, 216, 217, 225, 229, 231, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 263, 266, 273, 275], "singular": 221, "situat": [27, 273], "size": [209, 210, 211, 216, 217, 231, 236, 243, 248, 253, 255, 256, 259, 262, 263, 264, 265, 276], "slider": 274, "slow": [33, 100, 167, 267, 268], "slower": [167, 274], "small": [33, 100, 266, 267, 268], "smaller": [167, 274], "smooth": [29, 97], "snn": [270, 277], "snncell": 265, "so": [33, 34, 100, 266, 267, 268, 270, 273, 274, 275, 276], "softwar": 266, "solut": [272, 275], "solv": [269, 270, 277], "some": [9, 28, 33, 34, 48, 100, 101, 213, 214, 215, 267, 268, 270, 272, 273, 274, 276, 277], "someon": 277, "sometim": 271, "sophist": 273, "sourc": [160, 161, 162, 164, 165, 166, 167, 168, 177, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266], "space": [113, 217, 265, 267, 274], "spars": [239, 240, 242, 243, 266, 269, 274, 277], "spatial": [211, 264], "spatio": 212, "specif": [9, 113, 194, 195, 198, 201, 202, 216, 229, 231, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 258, 259, 261, 263, 267, 270, 274, 276, 277], "speech_command": 276, "speed": [193, 200, 269], "spike": [0, 6, 8, 11, 12, 13, 14, 28, 33, 34, 35, 38, 46, 48, 93, 100, 101, 102, 105, 113, 114, 116, 149, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 198, 200, 202, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 227, 228, 229, 230, 231, 232, 239, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 259, 263, 267, 269, 270, 275, 276, 277], "spike_accumul": 213, "spiking_method": [228, 229, 230, 231], "springer": 212, "sq": 167, "sqrt": [212, 265], "squar": [167, 210], "sscce": 266, "stabl": 217, "stack": [273, 274], "stai": 143, "stand": 35, "standard": [266, 273], "start": [272, 274, 275, 277], "state": [48, 96, 121, 160, 162, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 198, 199, 201, 202, 207, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 274], "stateless": [14, 27, 28, 268], "stdp": 277, "step": [30, 35, 48, 162, 163, 166, 194, 195, 198, 201, 202, 213, 216, 217, 218, 219, 220, 222, 224, 225, 228, 229, 230, 231, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 268, 270, 272, 273, 274], "stepwis": 34, "stimul": 274, "store": [275, 276], "str": [161, 165, 167, 193, 197, 200, 217, 227, 241, 251, 270], "stradmann": 8, "straightforward": 270, "strategi": [266, 269], "stride": 217, "strive": 266, "strong": 223, "strongli": 167, "structur": [266, 269, 270], "student": 266, "studi": 270, "style": 274, "subject": 270, "subpackag": 144, "subplot": 273, "subramonei": [46, 112, 266, 267], "subthreshold": 167, "subtract": [33, 100, 267, 268], "success": 274, "successfulli": 276, "sudden": [38, 105, 267, 268], "suffici": 269, "sugar": 270, "suggest": [266, 277], "suit": 275, "sum": [214, 267, 273], "super": [161, 162, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 197, 198, 200, 201, 202, 216, 218, 224, 225, 227, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 271, 273], "supercomput": 269, "superspik": [35, 270, 277], "support": [271, 272, 273, 277], "surrog": [161, 165, 167, 193, 200, 227, 270, 273, 277], "sweden": [266, 269], "swedish": 269, "syn": [33, 35, 46, 100, 193, 194, 195, 200, 201, 202, 216, 234, 235, 236, 240, 243, 246, 248, 253, 255, 256, 258, 259, 261, 263, 267, 268, 274], "syn_inv": [33, 100, 267, 268], "synaps": 266, "synapt": [161, 162, 189, 192, 193, 199, 200, 237, 244, 273, 274], "syntact": 270, "synthet": 35, "system": [38, 105, 267, 268, 270, 273, 275, 277], "systemat": 8, "t": [29, 217, 273, 274, 277], "t0": 274, "t1": 274, "t10k": 273, "t_0": 274, "t_1": 274, "tabl": 277, "take": [195, 198, 202, 213, 221, 223, 246, 249, 265, 272, 273, 274, 275, 277], "taken": 266, "target": 273, "task": [266, 271, 272, 273, 277], "tau": [33, 100, 267, 268], "tau_": [29, 33, 34, 35, 46, 100, 193, 194, 195, 198, 200, 201, 202, 216, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 267, 268, 273, 274], "tau_ada_inv": 193, "tau_b": 46, "tau_inv": 167, "tau_mem": 274, "tau_mem_inv": [189, 193, 197, 200, 237, 241, 251, 273, 274], "tau_mem_inv_aft": 273, "tau_mem_inv_befor": 273, "tau_syn": 274, "tau_syn_exc_inv": 161, "tau_syn_inh_inv": 161, "tau_syn_inv": [189, 193, 200, 237, 241, 273, 274], "techiqu": 97, "techniqu": 273, "technologi": 266, "tediou": 270, "tell": 223, "tempor": [6, 27, 212, 217, 223, 228, 230, 239, 242, 245, 247, 252, 254, 265, 274, 276, 277], "temptest2": 272, "tension": 277, "tensor": [27, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 273, 274, 275, 277], "tensorboard": [144, 272, 276], "term": [34, 38, 46, 48, 101, 105, 112, 198, 213, 218, 249, 260, 262, 277], "test": 270, "test_load": 273, "test_loss": 273, "text": [33, 34, 35, 46, 100, 166, 193, 194, 195, 198, 200, 201, 202, 216, 225, 229, 231, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 267, 268, 273, 274], "th": [35, 46, 166, 194, 195, 198, 201, 202, 210, 216, 225, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 273, 274], "than": 277, "thei": [27, 266, 270, 273, 274, 275, 277], "them": [273, 274, 277], "theori": [113, 267], "therefor": [27, 269, 270, 273, 275, 277], "theta": [35, 46, 166, 194, 195, 198, 202, 216, 225, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263], "thi": [11, 12, 13, 33, 34, 35, 38, 46, 48, 100, 101, 105, 114, 217, 223, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "thing": [270, 271, 274, 275, 277], "thorough": 9, "thorp": 223, "those": 273, "though": 273, "thought": 224, "three": [272, 277], "threshold": [35, 38, 102, 105, 161, 165, 167, 193, 200, 227, 261, 267, 270, 273, 274, 277], "through": [269, 271, 276], "thumb": 97, "time": [27, 29, 33, 34, 44, 46, 48, 97, 100, 101, 114, 149, 161, 162, 166, 167, 189, 193, 194, 195, 198, 200, 201, 202, 203, 212, 215, 216, 217, 218, 219, 220, 222, 223, 224, 228, 229, 230, 231, 234, 237, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 260, 261, 262, 265, 267, 274, 275, 276], "time_const": 265, "timeconst": 273, "timestep": [33, 34, 100, 101, 166, 194, 195, 198, 201, 202, 218, 225, 228, 230, 234, 235, 236, 239, 242, 245, 247, 249, 252, 254, 256, 258, 259, 263, 265, 266, 267, 268, 274, 275, 277], "titl": 266, "togeth": [166, 194, 195, 198, 202, 216, 225, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263], "tonic": [229, 231], "tonic_spik": [229, 231], "tool": [1, 266, 269, 277], "toolset": 269, "top": [271, 272], "torch": [266, 270, 271, 272, 273, 274, 275, 277], "torchtext": 272, "torchvis": [272, 273], "total": 214, "totensor": 273, "tqdm": 273, "trace": 274, "traceback": [273, 274], "track": [113, 228, 230, 239, 242, 245, 247, 252, 254, 267, 270, 277], "train": [11, 12, 143, 219, 222, 224, 264, 266, 272, 274, 275, 276], "train_data": 273, "train_load": 273, "training_loss": 273, "trang": 273, "transform": [273, 274], "transit": [166, 194, 195, 198, 202, 208, 216, 225, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263], "translat": [113, 267], "treat": 273, "tri": 277, "trigger": 193, "trivial": 275, "troubleshoot": 266, "true": [169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 239, 240, 242, 243, 264, 273], "truncat": [30, 163], "try": [266, 272], "tsodyk": 277, "tupl": [162, 166, 177, 191, 194, 195, 198, 201, 202, 213, 217, 228, 230, 231, 234, 239, 240, 242, 243, 245, 247, 252, 254, 265, 266, 270], "turn": [217, 273, 274], "tutori": [266, 271, 273, 275], "two": [33, 100, 217, 218, 221, 266, 267, 268, 272, 274, 275, 277], "type": [9, 197, 213, 221, 251, 265, 266, 270, 272, 276], "typic": [27, 213, 221, 274, 277], "u": [167, 229, 231, 233, 266, 273, 277], "ubuntu": 272, "ubyt": 273, "under": [8, 266, 269], "underli": 270, "understand": 270, "undertaken": 269, "unfortun": 270, "uninstal": 272, "uniqu": 223, "unit": [261, 263, 266, 274], "univers": 266, "unix": 272, "unless": 270, "unlik": 273, "until": 267, "unus": [166, 225], "up": [33, 34, 100, 101, 266, 267, 268, 270, 273, 276], "updat": 277, "uppmax": 269, "uppsala": 269, "upright": 276, "url": [266, 272], "us": [9, 12, 27, 29, 35, 97, 113, 161, 165, 166, 167, 193, 194, 195, 198, 200, 201, 202, 216, 217, 219, 220, 222, 224, 225, 227, 228, 230, 231, 234, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 267, 270, 271, 272, 273, 274, 275, 276, 277], "usag": [260, 262], "user": [48, 268, 270], "util": [198, 249, 273], "v": [33, 34, 35, 46, 100, 160, 164, 166, 167, 190, 192, 194, 195, 196, 198, 199, 201, 202, 215, 216, 225, 226, 229, 231, 233, 234, 235, 236, 238, 240, 243, 244, 246, 248, 249, 250, 253, 255, 256, 258, 259, 261, 263, 267, 268, 272, 274, 277], "v_": [33, 34, 35, 46, 100, 166, 194, 195, 198, 201, 202, 216, 225, 234, 235, 236, 240, 243, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 267, 268, 273, 274], "v_leak": [189, 193, 197, 200, 237, 241, 251, 273, 274], "v_reset": [161, 165, 193, 197, 200, 227, 241, 251, 273], "v_rest": 161, "v_th": [165, 167, 193, 197, 200, 227, 241, 251, 273, 274], "v_th_after": 273, "v_th_befor": 273, "v_thresh": 161, "valu": [28, 167, 193, 212, 213, 217, 219, 220, 221, 222, 224, 265, 270, 273, 274, 275, 277], "van": 223, "vanilla": [9, 276], "variabl": [167, 233, 275, 277], "variant": 266, "veri": [102, 267, 273, 276], "verifi": 276, "version": [12, 38, 105, 234, 235, 236, 266, 267, 268, 271, 272, 273], "versu": 223, "vertic": 274, "via": [28, 266, 270, 272, 277], "view": [271, 273], "view_a": 273, "visual": [113, 223, 267, 270], "visualis": [221, 272], "vo": 273, "voila": 272, "voltag": [33, 34, 35, 100, 101, 190, 194, 201, 215, 218, 234, 238, 267, 268, 271, 273, 277], "voltage_trac": 274, "von": 269, "w": [33, 34, 35, 46, 112, 217, 234, 235, 236, 266, 267, 268, 270], "w_": [216, 217, 243, 248, 255, 256, 259, 263], "wa": 266, "wai": [28, 266, 273, 274], "want": 270, "warmli": 266, "we": [11, 12, 33, 100, 217, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "weight": [148, 231, 236, 242, 243, 247, 248, 254, 264, 273], "welcom": 266, "were": 269, "what": [9, 213, 223, 276], "when": [46, 270, 272, 277], "where": [27, 29, 48, 114, 195, 202, 216, 243, 246, 248, 253, 255, 256, 259, 263, 264, 265, 266, 268, 270, 271, 274, 276], "whether": [208, 239, 240, 242, 243], "which": [9, 48, 210, 212, 213, 217, 219, 220, 221, 222, 228, 230, 239, 242, 245, 247, 252, 254, 260, 261, 262, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277], "while": [33, 34, 100, 101, 267, 268, 269, 273, 277], "white": 277, "whose": [221, 274], "why": 270, "wide": 275, "width": 217, "wikipedia": [33, 34, 35, 48, 100, 267, 268], "window": [29, 97], "wise": 274, "wish": [266, 270, 275], "wit": 262, "within": [266, 269, 277], "without": [198, 229, 231, 234, 235, 240, 243, 246, 249, 253, 258, 260, 261, 272, 276, 277], "wolfgang": 276, "word": [33, 34, 100, 101, 267, 268, 274, 277], "work": [46, 112, 267, 269, 270, 272, 273, 274, 275], "worth": [270, 271], "would": [270, 272, 273, 275, 277], "wouldn": 277, "wrap": [228, 230, 234, 239, 242, 245, 247, 252, 254, 275], "wrapper": 270, "write": [152, 266, 270, 273], "www": [194, 195, 246, 248], "x": [29, 204, 205, 206, 209, 210, 264, 271, 273, 277], "x_1": 207, "x_2": 207, "xlabel": [273, 274], "xor": 206, "y": [8, 29, 204, 205, 206, 209, 210, 264, 277], "y_prev": 207, "yann": 273, "year": 266, "ylabel": 274, "you": [27, 266, 270, 271, 272, 273, 274, 275, 276, 277], "your": [266, 270, 271, 272, 275], "yourself": 271, "z": [35, 46, 166, 194, 195, 198, 202, 208, 213, 214, 215, 216, 221, 225, 240, 243, 244, 246, 248, 249, 253, 255, 256, 258, 259, 261, 263, 270, 273, 274], "z_": [194, 195, 216, 243, 248, 253, 255, 256, 259, 263], "z_prev": 208, "z_r": [258, 259], "zenk": 8, "zenodo": 266, "zero": [215, 228, 230, 231, 234, 239, 240, 242, 243, 245, 247, 252, 254, 260, 262, 266, 274], "zero_grad": 273}, "titles": ["norse", "norse.benchmark", "norse.benchmark.benchmark", "norse.benchmark.main", "norse.benchmark.norse_lif", "norse.benchmark.plot", "norse.dataset", "norse.dataset.memory", "norse.dataset.spiking_heidelberg", "norse.task", "norse.task.correlation_experiment", "norse.task.mnist", "norse.task.mnist_pl", "norse.torch", "norse.torch.functional", "norse.torch.functional.adjoint", "norse.torch.functional.adjoint.lif_adjoint", "norse.torch.functional.adjoint.lif_mc_adjoint", "norse.torch.functional.adjoint.lif_mc_refrac_adjoint", "norse.torch.functional.adjoint.lif_refrac_adjoint", "norse.torch.functional.adjoint.lsnn_adjoint", "norse.torch.functional.adjoint.test", "norse.torch.functional.adjoint.test.test_lif_adjoint", "norse.torch.functional.adjoint.test.test_lif_refrac_adjoint", "norse.torch.functional.adjoint.test.test_lsnn_adjoint", "norse.torch.functional.coba_lif", "norse.torch.functional.correlation_sensor", "norse.torch.functional.decode", "norse.torch.functional.encode", "norse.torch.functional.filter", "norse.torch.functional.heaviside", "norse.torch.functional.iaf", "norse.torch.functional.izhikevich", "norse.torch.functional.leaky_integrator", "norse.torch.functional.leaky_integrator_box", "norse.torch.functional.lif", "norse.torch.functional.lif_adex", "norse.torch.functional.lif_adex_refrac", "norse.torch.functional.lif_box", "norse.torch.functional.lif_correlation", "norse.torch.functional.lif_ex", "norse.torch.functional.lif_mc", "norse.torch.functional.lif_mc_refrac", "norse.torch.functional.lif_refrac", "norse.torch.functional.lift", "norse.torch.functional.logical", "norse.torch.functional.lsnn", "norse.torch.functional.receptive_field", "norse.torch.functional.regularization", "norse.torch.functional.reset", "norse.torch.functional.spikes_to_times_decoder", "norse.torch.functional.stdp", "norse.torch.functional.stdp_sensor", "norse.torch.functional.superspike", "norse.torch.functional.test", "norse.torch.functional.test.test_coba_lif", "norse.torch.functional.test.test_decode", "norse.torch.functional.test.test_encode", "norse.torch.functional.test.test_exp_filter", "norse.torch.functional.test.test_heaviside", "norse.torch.functional.test.test_iaf", "norse.torch.functional.test.test_izhikevich", "norse.torch.functional.test.test_leaky_integrator", "norse.torch.functional.test.test_leaky_integrator_box", "norse.torch.functional.test.test_lif", "norse.torch.functional.test.test_lif_adex", "norse.torch.functional.test.test_lif_adex_refrac", "norse.torch.functional.test.test_lif_box", "norse.torch.functional.test.test_lif_ex", "norse.torch.functional.test.test_lif_mc", "norse.torch.functional.test.test_lif_mc_refrac", "norse.torch.functional.test.test_lif_refrac", "norse.torch.functional.test.test_lift", "norse.torch.functional.test.test_logical", "norse.torch.functional.test.test_lsnn", "norse.torch.functional.test.test_receptive_field", "norse.torch.functional.test.test_regularization", "norse.torch.functional.test.test_spikes_to_times_decoder", "norse.torch.functional.test.test_stdp", "norse.torch.functional.test.test_stdp_sensor", "norse.torch.functional.test.test_superspike", "norse.torch.functional.test.test_threshold", "norse.torch.functional.test.test_tsodyks_makram", "norse.torch.functional.threshold", "norse.torch.functional.tsodyks_makram", "norse.torch.models", "norse.torch.models.conv", "norse.torch.models.mobilenet", "norse.torch.models.test", "norse.torch.models.test.test_conv", "norse.torch.models.test.test_mobilenet", "norse.torch.models.test.test_vgg", "norse.torch.models.vgg", "norse.torch.module", "norse.torch.module.coba_lif", "norse.torch.module.conv", "norse.torch.module.encode", "norse.torch.module.exp_filter", "norse.torch.module.iaf", "norse.torch.module.izhikevich", "norse.torch.module.leaky_integrator", "norse.torch.module.leaky_integrator_box", "norse.torch.module.lif", "norse.torch.module.lif_adex", "norse.torch.module.lif_adex_refrac", "norse.torch.module.lif_box", "norse.torch.module.lif_correlation", "norse.torch.module.lif_ex", "norse.torch.module.lif_mc", "norse.torch.module.lif_mc_refrac", "norse.torch.module.lif_refrac", "norse.torch.module.lift", "norse.torch.module.lsnn", "norse.torch.module.receptive_field", "norse.torch.module.regularization", "norse.torch.module.sequential", "norse.torch.module.snn", "norse.torch.module.spikes_to_times_decoder", "norse.torch.module.test", "norse.torch.module.test.test_coba", "norse.torch.module.test.test_conv", "norse.torch.module.test.test_encode", "norse.torch.module.test.test_exp_filter", "norse.torch.module.test.test_iaf", "norse.torch.module.test.test_izhikevich", "norse.torch.module.test.test_leaky_integrator", "norse.torch.module.test.test_leaky_integrator_box", "norse.torch.module.test.test_lif", "norse.torch.module.test.test_lif_adex", "norse.torch.module.test.test_lif_adex_refrac", "norse.torch.module.test.test_lif_box", "norse.torch.module.test.test_lif_correlation", "norse.torch.module.test.test_lif_ex", "norse.torch.module.test.test_lif_mc", "norse.torch.module.test.test_lif_mc_refrac", "norse.torch.module.test.test_lif_refrac", "norse.torch.module.test.test_lift", "norse.torch.module.test.test_lsnn", "norse.torch.module.test.test_receptive_field", "norse.torch.module.test.test_regularization", "norse.torch.module.test.test_sequential", "norse.torch.module.test.test_snn", "norse.torch.module.test.test_spikes_to_times_decoder", "norse.torch.module.test.test_training", "norse.torch.utils", "norse.torch.utils.clone", "norse.torch.utils.export_nir", "norse.torch.utils.import_nir", "norse.torch.utils.plot", "norse.torch.utils.plot.plot", "norse.torch.utils.pytree", "norse.torch.utils.state", "norse.torch.utils.tensorboard", "norse.torch.utils.tensorboard.tensorboard", "norse.torch.utils.test", "norse.torch.utils.test.test_nir_export", "norse.torch.utils.test.test_nir_import", "norse.torch.utils.test.test_tensorboard", "norse.utils", "Complete API", "norse.torch.functional.coba_lif.CobaLIFFeedForwardState", "norse.torch.functional.coba_lif.CobaLIFParameters", "norse.torch.functional.coba_lif.coba_lif_feed_forward_step", "norse.torch.functional.heaviside", "norse.torch.functional.iaf.IAFFeedForwardState", "norse.torch.functional.iaf.IAFParameters", "norse.torch.functional.iaf.iaf_feed_forward_step", "norse.torch.functional.izhikevich.IzhikevichParameters", "norse.torch.functional.izhikevich.IzhikevichSpikingBehavior", "norse.torch.functional.izhikevich.accomodation", "norse.torch.functional.izhikevich.bistability", "norse.torch.functional.izhikevich.class_1_exc", "norse.torch.functional.izhikevich.class_2_exc", "norse.torch.functional.izhikevich.dap", "norse.torch.functional.izhikevich.inhibition_induced_bursting", "norse.torch.functional.izhikevich.inhibition_induced_spiking", "norse.torch.functional.izhikevich.integrator", "norse.torch.functional.izhikevich.izhikevich_feed_forward_step", "norse.torch.functional.izhikevich.mixed_mode", "norse.torch.functional.izhikevich.phasic_bursting", "norse.torch.functional.izhikevich.phasic_spiking", "norse.torch.functional.izhikevich.rebound_burst", "norse.torch.functional.izhikevich.rebound_spike", "norse.torch.functional.izhikevich.resonator", "norse.torch.functional.izhikevich.spike_frequency_adaptation", "norse.torch.functional.izhikevich.spike_latency", "norse.torch.functional.izhikevich.subthreshold_oscillation", "norse.torch.functional.izhikevich.tonic_bursting", "norse.torch.functional.izhikevich.tonic_spiking", "norse.torch.functional.leaky_integrator.LIParameters", "norse.torch.functional.leaky_integrator.LIState", "norse.torch.functional.leaky_integrator.li_feed_forward_step", "norse.torch.functional.lif_adex.LIFAdExFeedForwardState", "norse.torch.functional.lif_adex.LIFAdExParameters", "norse.torch.functional.lif_adex.lif_adex_current_encoder", "norse.torch.functional.lif_adex.lif_adex_feed_forward_step", "norse.torch.functional.lif_box.LIFBoxFeedForwardState", "norse.torch.functional.lif_box.LIFBoxParameters", "norse.torch.functional.lif_box.lif_box_feed_forward_step", "norse.torch.functional.lif_ex.LIFExFeedForwardState", "norse.torch.functional.lif_ex.LIFExParameters", "norse.torch.functional.lif_ex.lif_ex_current_encoder", "norse.torch.functional.lif_ex.lif_ex_feed_forward_step", "norse.torch.functional.lift", "norse.torch.functional.logical.logical_and", "norse.torch.functional.logical.logical_or", "norse.torch.functional.logical.logical_xor", "norse.torch.functional.logical.muller_c", "norse.torch.functional.logical.posedge_detector", "norse.torch.functional.receptive_field.gaussian_kernel", "norse.torch.functional.receptive_field.spatial_receptive_field", "norse.torch.functional.receptive_field.spatial_receptive_fields_with_derivatives", "norse.torch.functional.receptive_field.temporal_scale_distribution", "norse.torch.functional.regularization.regularize_step", "norse.torch.functional.regularization.spike_accumulator", "norse.torch.functional.regularization.voltage_accumulator", "norse.torch.module.coba_lif.CobaLIFCell", "norse.torch.module.conv.LConv2d", "norse.torch.module.encode.ConstantCurrentLIFEncoder", "norse.torch.module.encode.PoissonEncoder", "norse.torch.module.encode.PoissonEncoderStep", "norse.torch.module.encode.PopulationEncoder", "norse.torch.module.encode.SignedPoissonEncoder", "norse.torch.module.encode.SpikeLatencyEncoder", "norse.torch.module.encode.SpikeLatencyLIFEncoder", "norse.torch.module.iaf.IAFCell", "norse.torch.module.iaf.IAFFeedForwardState", "norse.torch.module.iaf.IAFParameters", "norse.torch.module.izhikevich.Izhikevich", "norse.torch.module.izhikevich.IzhikevichCell", "norse.torch.module.izhikevich.IzhikevichRecurrent", "norse.torch.module.izhikevich.IzhikevichRecurrentCell", "norse.torch.module.izhikevich.IzhikevichSpikingBehavior", "norse.torch.module.izhikevich.IzhikevichState", "norse.torch.module.leaky_integrator.LI", "norse.torch.module.leaky_integrator.LICell", "norse.torch.module.leaky_integrator.LILinearCell", "norse.torch.module.leaky_integrator.LIParameters", "norse.torch.module.leaky_integrator.LIState", "norse.torch.module.lif.LIF", "norse.torch.module.lif.LIFCell", "norse.torch.module.lif.LIFParameters", "norse.torch.module.lif.LIFRecurrent", "norse.torch.module.lif.LIFRecurrentCell", "norse.torch.module.lif.LIFState", "norse.torch.module.lif_adex.LIFAdEx", "norse.torch.module.lif_adex.LIFAdExCell", "norse.torch.module.lif_adex.LIFAdExRecurrent", "norse.torch.module.lif_adex.LIFAdExRecurrentCell", "norse.torch.module.lif_box.LIFBoxCell", "norse.torch.module.lif_box.LIFBoxFeedForwardState", "norse.torch.module.lif_box.LIFBoxParameters", "norse.torch.module.lif_ex.LIFEx", "norse.torch.module.lif_ex.LIFExCell", "norse.torch.module.lif_ex.LIFExRecurrent", "norse.torch.module.lif_ex.LIFExRecurrentCell", "norse.torch.module.lif_mc.LIFMCRecurrentCell", "norse.torch.module.lif_mc_refrac.LIFMCRefracRecurrentCell", "norse.torch.module.lif_refrac.LIFRefracCell", "norse.torch.module.lif_refrac.LIFRefracRecurrentCell", "norse.torch.module.lsnn.LSNN", "norse.torch.module.lsnn.LSNNCell", "norse.torch.module.lsnn.LSNNRecurrent", "norse.torch.module.lsnn.LSNNRecurrentCell", "norse.torch.module.receptive_field.SpatialReceptiveField2d", "norse.torch.module.receptive_field.TemporalReceptiveField", "1. Getting started", "norse.torch", "norse.torch.functional", "<span class=\"section-number\">8. </span>About Norse", "<span class=\"section-number\">9. </span>Development Documentation", "<span class=\"section-number\">7. </span>Hardware acceleration", "<span class=\"section-number\">1. </span>Installing Norse", "<span class=\"section-number\">6. </span>Parameter learning in Spiking Neural Networks", "<span class=\"section-number\">4. </span>Introduction to spiking systems", "<span class=\"section-number\">2. </span>Quickstart", "<span class=\"section-number\">5. </span>Running Tasks", "<span class=\"section-number\">3. </span>Working with Norse"], "titleterms": {"1": 266, "2": 266, "3": 266, "4": 266, "5": 266, "6": 266, "7": 266, "8": 266, "The": 272, "about": 269, "acceler": [271, 272], "accomod": 169, "acknowledg": 269, "action": 277, "adapt": [267, 268], "adjoint": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "api": 159, "appli": 275, "architectur": 270, "base": [267, 268], "benchmark": [1, 2, 3, 4, 5], "bistabl": 170, "bonu": 275, "box": [267, 268], "build": 275, "cartpol": 276, "cifar10": 276, "citat": 266, "class_1_exc": 171, "class_2_exc": 172, "classifi": 266, "clone": 145, "coba_lif": [25, 94, 160, 161, 162, 216], "coba_lif_feed_forward_step": 162, "cobalifcel": 216, "cobaliffeedforwardst": 160, "cobalifparamet": 161, "command": 276, "common": 272, "complet": 159, "comput": 270, "conclus": 273, "conda": 272, "conduct": [267, 268], "constant": 273, "constantcurrentlifencod": 218, "contact": 269, "contain": 267, "contribut": 266, "conv": [86, 95, 217], "convolut": [266, 267], "correl": 276, "correlation_experi": 10, "correlation_sensor": 26, "credit": 266, "dap": 173, "dataset": [6, 7, 8, 273], "decid": 277, "decod": 27, "deep": 277, "defin": [273, 274], "defitinit": 273, "depend": [268, 272], "develop": 270, "docker": 272, "document": 270, "dynam": 277, "each": 272, "encod": [28, 96, 218, 219, 220, 221, 222, 223, 224, 267, 268], "evalu": 273, "event": 277, "exampl": [266, 270, 273, 277], "exp_filt": 97, "experi": 276, "exponenti": [267, 268], "export_nir": 146, "field": [267, 268], "filter": 29, "fire": [267, 268], "first": 274, "follow": 272, "found": 272, "from": 272, "function": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 268], "gaussian_kernel": 209, "get": 266, "gpu": 272, "graph": 270, "hardwar": 271, "heavisid": [30, 163], "iaf": [31, 98, 164, 165, 166, 225, 226, 227, 268], "iaf_feed_forward_step": 166, "iafcel": 225, "iaffeedforwardst": [164, 226], "iafparamet": [165, 227], "implement": 270, "import": 270, "import_nir": 147, "importerror": 272, "incompat": 272, "inhibition_induced_burst": 174, "inhibition_induced_spik": 175, "input": 274, "instal": [266, 272], "integr": [176, 267, 268], "introduct": 274, "izhikevich": [32, 99, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 228, 229, 230, 231, 232, 233, 267, 268], "izhikevich_feed_forward_step": 177, "izhikevichcel": 229, "izhikevichparamet": 167, "izhikevichrecurr": 230, "izhikevichrecurrentcel": 231, "izhikevichspikingbehavior": [168, 232], "izhikevichst": 233, "lconv2d": 217, "leaki": [267, 268], "leaky_integr": [33, 100, 189, 190, 191, 234, 235, 236, 237, 238], "leaky_integrator_box": [34, 101], "learn": [273, 277], "li": 234, "li_feed_forward_step": 191, "licel": 235, "licens": 266, "lif": [35, 102, 239, 240, 241, 242, 243, 244, 267, 268, 273], "lif_adex": [36, 103, 192, 193, 194, 195, 245, 246, 247, 248], "lif_adex_current_encod": 194, "lif_adex_feed_forward_step": 195, "lif_adex_refrac": [37, 104], "lif_adjoint": 16, "lif_box": [38, 105, 196, 197, 198, 249, 250, 251], "lif_box_feed_forward_step": 198, "lif_correl": [39, 106], "lif_ex": [40, 107, 199, 200, 201, 202, 252, 253, 254, 255], "lif_ex_current_encod": 201, "lif_ex_feed_forward_step": 202, "lif_mc": [41, 108, 256], "lif_mc_adjoint": 17, "lif_mc_refrac": [42, 109, 257], "lif_mc_refrac_adjoint": 18, "lif_refrac": [43, 110, 258, 259], "lif_refrac_adjoint": 19, "lifadex": 245, "lifadexcel": 246, "lifadexfeedforwardst": 192, "lifadexparamet": 193, "lifadexrecurr": 247, "lifadexrecurrentcel": 248, "lifboxcel": 249, "lifboxfeedforwardst": [196, 250], "lifboxparamet": [197, 251], "lifcel": 240, "lifex": 252, "lifexcel": 253, "lifexfeedforwardst": 199, "lifexparamet": 200, "lifexrecurr": 254, "lifexrecurrentcel": 255, "lifmcrecurrentcel": 256, "lifmcrefracrecurrentcel": 257, "lifparamet": 241, "lifrecurr": 242, "lifrecurrentcel": 243, "lifrefraccel": 258, "lifrefracrecurrentcel": 259, "lifstat": 244, "lift": [44, 111, 203], "lightn": 276, "lilinearcel": 236, "liparamet": [189, 237], "listat": [190, 238], "load": 273, "logic": [45, 204, 205, 206, 207, 208, 268], "logical_and": 204, "logical_or": 205, "logical_xor": 206, "long": [266, 267, 268], "loop": 273, "lsnn": [46, 112, 260, 261, 262, 263, 267, 268], "lsnn_adjoint": 20, "lsnncell": 261, "lsnnrecurr": 262, "lsnnrecurrentcel": 263, "main": 3, "markram": 268, "mc": 268, "membran": 273, "memori": [7, 267, 268, 276], "mixed_mod": 178, "mnist": [11, 273, 276], "mnist_pl": 12, "mobilenet": 87, "model": [85, 86, 87, 88, 89, 90, 91, 92, 267, 268, 270, 271, 273, 274, 275, 277], "modul": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "muller_c": 207, "multicompartment": [267, 268], "nest": 271, "network": [266, 273], "neural": [266, 273], "neuron": [267, 268, 270, 273, 274, 275, 277], "nors": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277], "norse_lif": 4, "norse_op": 272, "notebook": 272, "oper": 268, "option": 272, "other": 272, "our": 274, "paramet": [273, 276], "phasic_burst": 179, "phasic_spik": 180, "pip": 272, "plasitici": 277, "plastic": 268, "plot": [5, 148, 149], "poissonencod": 219, "poissonencoderstep": 220, "populationencod": 221, "posedge_detector": 208, "potenti": 277, "predefin": 275, "problem": [272, 277], "pytorch": 276, "pytre": 150, "quickstart": 275, "rebound_burst": 181, "rebound_spik": 182, "recept": [267, 268], "receptive_field": [47, 113, 209, 210, 211, 212, 264, 265], "recognit": 276, "recurr": 273, "refract": 267, "refractori": [267, 268], "regular": [48, 114, 213, 214, 215, 268], "regularize_step": 213, "requir": 272, "reset": 49, "reson": 183, "run": [266, 272, 276], "sequenti": 115, "short": [266, 267, 268], "shortcut": 270, "signedpoissonencod": 222, "similar": 266, "simul": 274, "small": 273, "snn": [116, 273], "so": 272, "sourc": 272, "spatial_receptive_field": 210, "spatial_receptive_fields_with_deriv": 211, "spatialreceptivefield2d": 264, "specif": 272, "speech": 276, "spike": [266, 268, 273, 274], "spike_accumul": 214, "spike_frequency_adapt": 184, "spike_lat": 185, "spikelatencyencod": 223, "spikelatencylifencod": 224, "spikes_to_times_decod": [50, 117], "spiking_heidelberg": 8, "start": 266, "state": [151, 275, 277], "stdp": [51, 268], "stdp_sensor": 52, "subthreshold_oscil": 186, "superspik": 53, "symbol": 272, "system": 274, "task": [9, 10, 11, 12, 276], "tdp": 268, "tempor": 268, "temporal_scale_distribut": 212, "temporalreceptivefield": 265, "tensorboard": [152, 153], "term": [266, 267, 268], "terminologi": 277, "test": [21, 22, 23, 24, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 88, 89, 90, 91, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 154, 155, 156, 157, 273], "test_coba": 119, "test_coba_lif": 55, "test_conv": [89, 120], "test_decod": 56, "test_encod": [57, 121], "test_exp_filt": [58, 122], "test_heavisid": 59, "test_iaf": [60, 123], "test_izhikevich": [61, 124], "test_leaky_integr": [62, 125], "test_leaky_integrator_box": [63, 126], "test_lif": [64, 127], "test_lif_adex": [65, 128], "test_lif_adex_refrac": [66, 129], "test_lif_adjoint": 22, "test_lif_box": [67, 130], "test_lif_correl": 131, "test_lif_ex": [68, 132], "test_lif_mc": [69, 133], "test_lif_mc_refrac": [70, 134], "test_lif_refrac": [71, 135], "test_lif_refrac_adjoint": 23, "test_lift": [72, 136], "test_log": 73, "test_lsnn": [74, 137], "test_lsnn_adjoint": 24, "test_mobilenet": 90, "test_nir_export": 155, "test_nir_import": 156, "test_receptive_field": [75, 138], "test_regular": [76, 139], "test_sequenti": 140, "test_snn": 141, "test_spikes_to_times_decod": [77, 142], "test_stdp": 78, "test_stdp_sensor": 79, "test_superspik": 80, "test_tensorboard": 157, "test_threshold": 81, "test_train": 143, "test_tsodyks_makram": 82, "test_vgg": 91, "threshold": [83, 268], "time": [268, 273, 277], "toi": 273, "tonic_burst": 187, "tonic_spik": 188, "torch": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268], "train": 273, "troubleshoot": 272, "tsodyk": 268, "tsodyks_makram": 84, "undefin": 272, "unsatisfiableerror": 272, "us": 266, "util": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "vari": 273, "vgg": 92, "visual": 274, "voltag": 274, "voltage_accumul": 215, "were": 272, "why": 266, "work": [266, 277], "workflow": 277, "zn2at5addmmerkns_6tensores2_s2_rkn3c106scalares6": 272}})